{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/baklavajs/packages/baklavajs-events/dist/src/index.js","webpack:///./src/App.vue?571b","webpack:///./src/App.vue","webpack:///../baklavajs-core/src/idGenerator.ts","webpack:///../baklavajs-core/src/connection.ts","webpack:///../baklavajs-core/src/editor.ts","webpack:///../baklavajs-core/src/nodeInterface.ts","webpack:///../baklavajs-core/src/nodeOption.ts","webpack:///../baklavajs-core/src/node.ts","webpack:///../baklavajs-core/src/nodeBuilder.ts","webpack:///../baklavajs-plugin-renderer-vue/src/components/Editor.vue","webpack:///../baklavajs-core/types/connection.ts","webpack:///../baklavajs-plugin-renderer-vue/src/clipboard.ts","webpack:///../baklavajs-plugin-renderer-vue/src/history/nodeStep.ts","webpack:///../baklavajs-plugin-renderer-vue/src/history/connectionStep.ts","webpack:///../baklavajs-plugin-renderer-vue/src/history/index.ts","webpack:///../baklavajs-plugin-renderer-vue/src/components/Editor.vue?f0bf","webpack:///../baklavajs-plugin-renderer-vue/src/components/Editor.vue?a382","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/ConnectionView.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/ConnectionView.vue?faf1","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/ConnectionView.vue?d14a","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/ConnectionWrapper.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/domResolver.ts","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/ConnectionWrapper.vue?c519","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/ConnectionWrapper.vue?46e7","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/TemporaryConnection.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/portCoordinates.ts","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/TemporaryConnection.vue?d510","webpack:///../baklavajs-plugin-renderer-vue/src/components/connection/TemporaryConnection.vue?3830","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/Node.vue","webpack:///../baklavajs-plugin-renderer-vue/src/utility/cssNames.ts","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/Node.vue?0ad5","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/Node.vue?a30f","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/NodeInterface.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/NodeInterface.vue?3d78","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/NodeInterface.vue?3d41","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/NodeOption.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/NodeOption.vue?e5a1","webpack:///../baklavajs-plugin-renderer-vue/src/components/node/NodeOption.vue?76c6","webpack:///../baklavajs-plugin-renderer-vue/src/components/ContextMenu.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/ContextMenu.vue?e225","webpack:///../baklavajs-plugin-renderer-vue/src/components/ContextMenu.vue?77df","webpack:///../baklavajs-plugin-renderer-vue/src/components/Sidebar.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/Sidebar.vue?601c","webpack:///../baklavajs-plugin-renderer-vue/src/components/Sidebar.vue?c557","webpack:///../baklavajs-plugin-renderer-vue/src/components/Minimap.vue","webpack:///../baklavajs-plugin-renderer-vue/src/components/Minimap.vue?3874","webpack:///../baklavajs-plugin-renderer-vue/src/components/Minimap.vue?8fda","webpack:///../baklavajs-plugin-renderer-vue/src/baklavaVuePlugin.ts","webpack:///../baklavajs-plugin-renderer-vue/src/viewPlugin.ts","webpack:///../baklavajs-plugin-renderer-vue/src/index.ts","webpack:///../baklavajs-plugin-engine/src/nodeTreeBuilder.ts","webpack:///../baklavajs-plugin-engine/src/engine.ts","webpack:///../baklavajs-plugin-interface-types/src/index.ts","webpack:///../baklavajs-plugin-options-vue/src/ButtonOption.vue","webpack:///../baklavajs-plugin-options-vue/src/ButtonOption.vue?69b2","webpack:///../baklavajs-plugin-options-vue/src/ButtonOption.vue?1e77","webpack:///../baklavajs-plugin-options-vue/src/CheckboxOption.vue","webpack:///../baklavajs-plugin-options-vue/src/CheckboxOption.vue?43ce","webpack:///../baklavajs-plugin-options-vue/src/CheckboxOption.vue?de3f","webpack:///../baklavajs-plugin-options-vue/src/InputOption.vue","webpack:///../baklavajs-plugin-options-vue/src/InputOption.vue?4b2a","webpack:///../baklavajs-plugin-options-vue/src/InputOption.vue?9381","webpack:///../baklavajs-plugin-options-vue/src/IntegerOption.vue","webpack:///../baklavajs-plugin-options-vue/src/Arrow.vue","webpack:///../baklavajs-plugin-options-vue/src/Arrow.vue?18ae","webpack:///../baklavajs-plugin-options-vue/src/Arrow.vue?400c","webpack:///../baklavajs-plugin-options-vue/src/BaseNumericOption.ts","webpack:///../baklavajs-plugin-options-vue/src/IntegerOption.vue?d14b","webpack:///../baklavajs-plugin-options-vue/src/IntegerOption.vue?75cd","webpack:///../baklavajs-plugin-options-vue/src/NumberOption.vue","webpack:///../baklavajs-plugin-options-vue/src/NumberOption.vue?580d","webpack:///../baklavajs-plugin-options-vue/src/NumberOption.vue?8247","webpack:///../baklavajs-plugin-options-vue/src/SelectOption.vue","webpack:///../baklavajs-plugin-options-vue/src/SelectOption.vue?c7e2","webpack:///../baklavajs-plugin-options-vue/src/SelectOption.vue?100e","webpack:///../baklavajs-plugin-options-vue/src/SliderOption.vue","webpack:///../baklavajs-plugin-options-vue/src/SliderOption.vue?4c70","webpack:///../baklavajs-plugin-options-vue/src/SliderOption.vue?7b31","webpack:///../baklavajs-plugin-options-vue/src/TextOption.vue","webpack:///../baklavajs-plugin-options-vue/src/TextOption.vue?9bbf","webpack:///../baklavajs-plugin-options-vue/src/TextOption.vue?f630","webpack:///../baklavajs-plugin-options-vue/src/optionPlugin.ts","webpack:///./src/CommentNodeRenderer.vue","webpack:///./src/CommentNodeRenderer.vue?4047","webpack:///./src/CommentNodeRenderer.vue?3df2","webpack:///./src/CustomNodeRenderer.ts","webpack:///./src/TestNode.ts","webpack:///./src/OutputNode.ts","webpack:///./src/BuilderTestNode.ts","webpack:///./src/MathNode.ts","webpack:///./src/AdvancedNode.ts","webpack:///./src/CommentNode.ts","webpack:///./src/OptionTestNode.ts","webpack:///./src/SelectTestNode.ts","webpack:///./src/SplitterNode.ts","webpack:///./src/AddOption.vue","webpack:///./src/AddOption.vue?2710","webpack:///./src/AddOption.vue?b2bc","webpack:///./src/TriggerOption.vue","webpack:///./src/TriggerOption.vue?f298","webpack:///./src/TriggerOption.vue?75df","webpack:///./src/SidebarOption.vue","webpack:///./src/SidebarOption.vue?1f2f","webpack:///./src/SidebarOption.vue?7586","webpack:///./src/App.vue?8fb8","webpack:///./src/App.vue?0531","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","SequentialHook","Hook","PreventableBaklavaEvent","BaklavaEvent","tslib_1","this","listeners","Map","addListener","token","listener","set","removeListener","has","delete","emit","forEach","_super","arguments","__extends","e_1","_a","_b","__values","Array","from","values","_c","next","done","e_1_1","error","return","tapMap","taps","tap","tapFn","untap","indexOf","execute","e_2","currentValue","e_2_1","id","plugin","viewPlugin","calculate","save","load","focusState","setSelectItems","changeGridSize","counter","generateId","Date","now","toString","to","isInDanger","destructed","events","destruct","Error","connectionCount","_plugins","Set","_nodes","_connections","_nodeTypes","_nodeCategories","beforeRegisterNodeType","registerNodeType","beforeAddNode","addNode","beforeRemoveNode","removeNode","beforeAddConnection","addConnection","checkConnection","beforeRemoveConnection","removeConnection","beforeUsePlugin","usePlugin","hooks","typeName","type","category","nodeCategories","node","registerEditor","nodes","includes","connections","filter","parent","dc","connection","isInput","tmp","some","state","warnings","nt","nodeTypes","fromIf","findNodeInterface","toIf","conn","w","console","warn","map","use","add","register","prefix","interfaces","keys","ik","setConnectionCount","beforeSetValue","setValue","updated","_connectionCount","_value","v","optionComponent","sidebarComponent","options","beforeAddInterface","addInterface","beforeRemoveInterface","removeInterface","beforeAddOption","addOption","beforeRemoveOption","removeOption","update","intf","k","entries","calculationData","addInputInterface","option","defaultValue","additionalProperties","interface","addOutputInterface","getInterface","editorInstance","component","opt","getOptionValue","setOptionValue","editor","getDefaultValue","generateNode","intfs","calcFunction","assign","build","setName","checkDefaultValue","onCalculate","cb","class","tabindex","mouseMoveHandler","mouseDown","mouseUp","mouseWheel","keyDown","keyUp","openContextMenu","style","backgroundStyle","components","tempConnection","temporaryConnection","styles","selected","selectedNodes","selectNode","$event","contextMenu","show","x","y","items","flippable","onContextMenuClick","sidebar","minimap","TemporaryConnectionState","nodeBuffer","connectionBuffer","clear","copy","JSON","stringify","paste","idmap","intfmap","parsedNodeBuffer","parse","parsedConnectionBuffer","nodeType","copiedNode","generatedId","intfState","newIntfId","nodeState","position","fromNode","find","toNode","fromIntf","toIntf","nodeId","undo","redo","connectionId","connectionState","maxSteps","steps","changeBySelf","currentIndex","activeTransaction","transactionSteps","addStep","startTransaction","commitTransaction","step","nodeeditor","selectedNodeViews","hoveringOver","ctrlPressed","draggingStartPoint","draggingStartPanning","scaling","panning","positionLeft","positionTop","size","backgroundGrid","gridSize","subSize","gridDivision","backgroundSize","subGridBackgroundSize","subGridVisibleThreshold","plugins","mounted","updateContextMenu","clipboard","history","categories","label","nodeTypeAliases","submenu","defaultNodes","addNodeSubmenu","isDivider","disabledFunction","isEmpty","hoveredOver","ni","status","ALLOWED","FORBIDDEN","hasEnginePlugin","undefined","NONE","ev","mx","offsetX","my","offsetY","dx","screenX","dy","screenY","button","target","$el","unselectAllNodes","tc","preventDefault","scrollAmount","deltaY","deltaMode","newScale","currentPoint","newPoint","diff","ctrlKey","nodeView","event","action","startsWith","nodeName","substring","required","render","classes","renderConnection","transform","x1","y1","tx1","ty1","x2","y2","tx2","ty2","useStraightConnections","Math","abs","isTemporary","tx","ty","Number","default","Boolean","getDomElementOfNode","document","getElementById","getDomElements","nodeDOM","interfaceDOM","portDOM","getElementsByClassName","port","ResizeObserver","$nextTick","updateCoords","beforeDestroy","resizeObserver","disconnect","observe","getPortCoordinates","resolved","offsetLeft","clientWidth","offsetTop","clientHeight","deep","ConnectionWrapper","ConnectionView","input","output","is-temporary","start","end","TemporaryConnection","startDrag","renaming","tempName","placeholder","doneRenaming","onContextMenu","outputInterfaces","nodeInterface","nodeOption","componentName","openSidebar","inputInterfaces","sanitizeName","replace","draggingStartPosition","twoColumn","customClasses","top","left","width","renderNode","$forceUpdate","select","elem","addEventListener","handleMove","stopDrag","$emit","removeEventListener","optionName","visible","NodeView","directives","ClickOutside","directive","startHover","endHover","getOptionComponent","displayName","isConnected","beforeMount","renderInterface","String","updateValue","renderOption","height","viewBox","stroke","fill","_items","item","index","disabled","onMouseEnter","onMouseLeave","onClick","model-value","activeMenu","is-nested","is-flipped","flippedX","flippedY","onChildClick","modelValue","onClickOutside","activeMenuResetTimeout","rootIsFlipped","ContextMenu","isNested","hover","isFlipped","clearTimeout","setTimeout","created","$options","updateFlipped","parentWidth","$parent","offsetWidth","parentHeight","offsetHeight","updateDisabledValues","immediate","emits","startResize","close","onMouseMove","once","maxwidth","getBoundingClientRect","movementX","ref","showViewBounds","mouseup","mousedown","mousemove","intervalHandle","dragging","bounds","canvas","$refs","cv","ctx","getContext","imageSmoothingQuality","setInterval","updateCanvas","clearInterval","nodeCoords","nodeDomElements","domElement","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","nc","padding","clearRect","strokeStyle","origX1","origY1","origX2","origY2","transformCoordinates","beginPath","moveTo","lineTo","bezierCurveTo","fillStyle","getNodeColor","rect","viewBounds","getViewBounds","fillRect","origX","origY","reverseTransform","thisX","thisY","content","querySelector","contentColor","getComputedColor","nodeColor","getComputedStyle","backgroundColor","cx","cy","Baklava","install","app","BaklavaVuePlugin","enableMinimap","disablePointerEvents","registerOption","setNodeTypeAlias","alias","Components","Connection","Node","NodeInterface","NodeOption","Sidebar","Minimap","obj","constructor","calculateOrder","roots","adjacency","outputs","root","children","findDescendants","queue","stack","current","calculationOrder","pop","rootNodes","tn","ancestors","unshift","concat","containsCycle","err","calculateOnChange","beforeCalculate","calculated","gatherCalculationData","nodeCalculationOrder","actualRootNodes","connectionsPerNode","recalculateOrder","calculationInProgress","mutex","_rootNodes","interfaceTypePlugins","onChange","Promise","runExclusive","internalCalculate","calculateNodeTree","results","conversion","canConvert","convert","types","registerView","fromType","toType","addType","color","conversions","addConversion","transformationFunction","targetType","getConversion","vp","res","el","classList","ButtonOption","xmlns","InputOption","decrement","editMode","tempValue","leaveEditMode","enterEditMode","stringRepresentation","increment","MAX_STRING_LENGTH","invalid","parseFloat","toFixed","toExponential","newValue","validate","resetInvalid","focus","isNaN","min","max","parseInt","floor","IntegerOption","NumberOption","open","selectedText","isSelected","setSelected","getItemText","every","isAdvancedMode","getItemByValue","text","SelectOption","mouseleave","percentage","didSlide","isMouseDown","SliderOption","sanitized","registerOptions","rows","cols","scaleFactor","devicePixelRatio","movementY","functional","props","getComponent","$props","registerCalled","test","NodeBuilder","testtext","s1","s2","sep","n1","n2","operation","nrOutputsOption","updateOutputs","numberOfOutputs","outputIntfs","setup","TriggerOption","SidebarOption","CustomNodeRenderer","engine","log","nodeInterfaceTypes","InterfaceTypePlugin","AddOption","BuilderTestNode","MathNode","SelectTestNode","prompt","sel","round","random","mount"],"mappings":"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","file":"js/app.c0a2280f.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SequentialHook = exports.Hook = exports.PreventableBaklavaEvent = exports.BaklavaEvent = void 0;\r\nvar tslib_1 = require(\"tslib\");\r\n/** Main event class for Baklava */\r\nvar BaklavaEvent = /** @class */ (function () {\r\n    function BaklavaEvent() {\r\n        this.listeners = new Map();\r\n    }\r\n    /**\r\n     * Subscribe to the event\r\n     * @param token A token that can be used to unsubscribe from the event later on\r\n     * @param listener A callback that will be invoked when the event occurs\r\n     */\r\n    BaklavaEvent.prototype.addListener = function (token, listener) {\r\n        this.listeners.set(token, listener);\r\n    };\r\n    /**\r\n     * Remove a listener\r\n     * @param token The token that was specified when subscribing to the listener.\r\n     * An invalid token does not result in an error.\r\n     */\r\n    BaklavaEvent.prototype.removeListener = function (token) {\r\n        if (this.listeners.has(token)) {\r\n            this.listeners.delete(token);\r\n        }\r\n    };\r\n    /**\r\n     * Invoke all listeners\r\n     * @param data The data to invoke the listeners with.\r\n     */\r\n    BaklavaEvent.prototype.emit = function (data) {\r\n        this.listeners.forEach(function (l) { return l(data); });\r\n    };\r\n    return BaklavaEvent;\r\n}());\r\nexports.BaklavaEvent = BaklavaEvent;\r\n/** Extension for the [[BaklavaEvent]] class. A listener can return `false` to prevent\r\n * this event from happening.\r\n */\r\nvar PreventableBaklavaEvent = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PreventableBaklavaEvent, _super);\r\n    function PreventableBaklavaEvent() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Invoke all listeners.\r\n     * @param data The data to invoke all listeners with\r\n     * @returns `true` when one of the listeners requested to prevent the event, otherwise `false`\r\n     */\r\n    PreventableBaklavaEvent.prototype.emit = function (data) {\r\n        var e_1, _a;\r\n        try {\r\n            for (var _b = tslib_1.__values(Array.from(this.listeners.values())), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var l = _c.value;\r\n                if (l(data) === false) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        return false;\r\n    };\r\n    return PreventableBaklavaEvent;\r\n}(BaklavaEvent));\r\nexports.PreventableBaklavaEvent = PreventableBaklavaEvent;\r\n/** Base class for hooks in Baklava */\r\nvar Hook = /** @class */ (function () {\r\n    function Hook() {\r\n        this.tapMap = new Map();\r\n        this.taps = [];\r\n    }\r\n    Hook.prototype.tap = function (token, tapFn) {\r\n        if (this.tapMap.has(token)) {\r\n            this.untap(token);\r\n        }\r\n        this.tapMap.set(token, tapFn);\r\n        this.taps.push(tapFn);\r\n    };\r\n    Hook.prototype.untap = function (token) {\r\n        if (this.tapMap.has(token)) {\r\n            var tapFn = this.tapMap.get(token);\r\n            this.tapMap.delete(token);\r\n            var i = this.taps.indexOf(tapFn);\r\n            if (i >= 0) {\r\n                this.taps.splice(i, 1);\r\n            }\r\n        }\r\n    };\r\n    return Hook;\r\n}());\r\nexports.Hook = Hook;\r\n/** This class will run the taps one after each other and pass the data from every tap to another. */\r\nvar SequentialHook = /** @class */ (function (_super) {\r\n    tslib_1.__extends(SequentialHook, _super);\r\n    function SequentialHook() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SequentialHook.prototype.execute = function (data) {\r\n        var e_2, _a;\r\n        var currentValue = data;\r\n        try {\r\n            for (var _b = tslib_1.__values(this.taps), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var tapFn = _c.value;\r\n                currentValue = tapFn(currentValue);\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        return currentValue;\r\n    };\r\n    return SequentialHook;\r\n}(Hook));\r\nexports.SequentialHook = SequentialHook;\r\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=dae69ba6&lang=css\"","<template>\r\n    <div id=\"app\">\r\n        <baklava-editor :plugin=\"viewPlugin\"></baklava-editor>\r\n        <button @click=\"calculate\">Calculate</button>\r\n        <button @click=\"save\">Save</button>\r\n        <button @click=\"load\">Load</button>\r\n        <button @focus=\"focusState = 'focus'\" @blur=\"focusState = 'blur'\">{{ focusState }}</button>\r\n        <button @click=\"setSelectItems\">Set Select Items</button>\r\n        <button @click=\"changeGridSize\">Change Grid Size</button>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { markRaw } from \"vue\";\r\nimport { Vue } from \"vue-property-decorator\";\r\n\r\nimport { Editor } from \"../../baklavajs-core/src\";\r\nimport { ViewPlugin } from \"../../baklavajs-plugin-renderer-vue/src\";\r\nimport { Engine } from \"../../baklavajs-plugin-engine/src\";\r\nimport { InterfaceTypePlugin } from \"../../baklavajs-plugin-interface-types/src\";\r\nimport { OptionPlugin } from \"../../baklavajs-plugin-options-vue/src\";\r\n\r\nimport CustomNodeRenderer from \"./CustomNodeRenderer\";\r\n\r\nimport TestNode from \"./TestNode\";\r\nimport OutputNode from \"./OutputNode\";\r\nimport BuilderTestNode from \"./BuilderTestNode\";\r\nimport MathNode from \"./MathNode\";\r\nimport AdvancedNode from \"./AdvancedNode\";\r\nimport CommentNode from \"./CommentNode\";\r\nimport OptionTestNode from \"./OptionTestNode\";\r\nimport SelectTestNode from \"./SelectTestNode\";\r\nimport SplitterNode from \"./SplitterNode\";\r\n\r\nimport AddOption from \"./AddOption.vue\";\r\nimport TriggerOption from \"./TriggerOption.vue\";\r\nimport SidebarOption from \"./SidebarOption.vue\";\r\n\r\nexport default class App extends Vue {\r\n    editor: Editor = new Editor();\r\n    viewPlugin: ViewPlugin = new ViewPlugin();\r\n    engine!: Engine;\r\n    nodeInterfaceTypes!: InterfaceTypePlugin;\r\n\r\n    focusState = \"blur\";\r\n    counter = 1;\r\n\r\n    created() {\r\n\r\n        this.viewPlugin.components.node = markRaw(CustomNodeRenderer);\r\n        this.viewPlugin.enableMinimap = true;\r\n        this.editor.use(this.viewPlugin);\r\n\r\n        this.engine = new Engine(true);\r\n        this.engine.events.calculated.addListener(this, (r) => {\r\n            for (const v of r.values()) {\r\n                // tslint:disable-next-line:no-console\r\n                console.log(v);\r\n            }\r\n        });\r\n        this.engine.hooks.gatherCalculationData.tap(this, () => \"def\");\r\n        this.editor.use(this.engine);\r\n\r\n        this.nodeInterfaceTypes = new InterfaceTypePlugin();\r\n        this.editor.use(this.nodeInterfaceTypes);\r\n\r\n        this.editor.use(new OptionPlugin());\r\n\r\n        this.viewPlugin.hooks.renderNode.tap(this, (node) => {\r\n            if (node.node.type === \"TestNode\") {\r\n                (node.$el as HTMLElement).style.backgroundColor = \"red\";\r\n            }\r\n            return node;\r\n        });\r\n\r\n        this.viewPlugin.registerOption(\"AddOption\", AddOption as any);\r\n        this.viewPlugin.registerOption(\"TriggerOption\", TriggerOption as any);\r\n        this.viewPlugin.registerOption(\"SidebarOption\", SidebarOption as any);\r\n\r\n        this.editor.registerNodeType(\"TestNode\", TestNode, \"Tests\");\r\n        this.editor.registerNodeType(\"OutputNode\", OutputNode, \"Outputs\");\r\n        this.editor.registerNodeType(\"BuilderTestNode\", BuilderTestNode, \"Tests\");\r\n        this.editor.registerNodeType(\"MathNode\", MathNode);\r\n        this.editor.registerNodeType(\"AdvancedNode\", AdvancedNode);\r\n        this.editor.registerNodeType(\"CommentNode\", CommentNode);\r\n        this.editor.registerNodeType(\"OptionTestNode\", OptionTestNode);\r\n        this.editor.registerNodeType(\"SelectTestNode\", SelectTestNode);\r\n        this.editor.registerNodeType(\"SplitterNode\", SplitterNode);\r\n        this.editor.addNode(new TestNode());\r\n        this.editor.addNode(new TestNode());\r\n        this.editor.addNode(new TestNode());\r\n        this.editor.addNode(new OutputNode());\r\n        this.editor.addNode(new BuilderTestNode());\r\n        this.editor.addNode(new AdvancedNode());\r\n        this.nodeInterfaceTypes\r\n            .addType(\"string\", \"#00FF00\")\r\n            .addType(\"number\", \"red\")\r\n            .addType(\"boolean\", \"purple\")\r\n            .addConversion(\"string\", \"number\", (v) => parseInt(v, 10))\r\n            .addConversion(\"number\", \"string\", (v) => (v !== null && v !== undefined && v.toString()) || \"0\")\r\n            .addConversion(\"boolean\", \"string\", (v) => (typeof v === \"boolean\" ? v.toString() : \"null\"));\r\n        this.viewPlugin.setNodeTypeAlias(\"TestNode\", \"TestNode (with alias)\");\r\n    }\r\n\r\n    async calculate() {\r\n        // console.log(await this.engine.calculate(\"def\"));\r\n    }\r\n\r\n    save() {\r\n        // tslint:disable-next-line:no-console\r\n        console.log(JSON.stringify(this.editor.save()));\r\n    }\r\n\r\n    load() {\r\n        const s = prompt();\r\n        if (s) {\r\n            this.editor.load(JSON.parse(s));\r\n        }\r\n    }\r\n\r\n    setSelectItems() {\r\n        for (const node of this.editor.nodes) {\r\n            if (node.type === \"SelectTestNode\") {\r\n                const sel = node.options.get(\"Advanced\");\r\n                sel!.items = [\r\n                    { text: \"X\", value: 1 },\r\n                    { text: node.id, value: 2 }\r\n                ];\r\n                sel!.events.updated.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    changeGridSize() {\r\n        this.viewPlugin.backgroundGrid.gridSize = Math.round(Math.random() * 100) + 100;\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n    margin: 30px 0;\r\n    height: 700px;\r\n}\r\n</style>\r\n","let counter = 0;\r\n\r\nexport default function generateId() {\r\n    return Date.now().toString() + (counter++).toString();\r\n}\r\n","import { NodeInterface } from \"./nodeInterface\";\r\nimport generateId from \"./idGenerator\";\r\nimport { BaklavaEvent } from \"@baklavajs/events\";\r\nimport { IConnection, ITransferConnection } from \"../types/connection\";\r\n\r\nexport class Connection implements ITransferConnection {\r\n\r\n    public id: string;\r\n    public from: NodeInterface;\r\n    public to: NodeInterface;\r\n    public isInDanger = false;\r\n    public destructed = false;\r\n\r\n    public events = {\r\n        destruct: new BaklavaEvent<void>()\r\n    };\r\n\r\n    public constructor(from: NodeInterface, to: NodeInterface) {\r\n\r\n        if (!from || !to) {\r\n            throw new Error(\"Cannot initialize connection with null/undefined for 'from' or 'to' values\");\r\n        }\r\n\r\n        this.id = generateId();\r\n        this.from = from;\r\n        this.to = to;\r\n\r\n        this.from.connectionCount++;\r\n        this.to.connectionCount++;\r\n\r\n    }\r\n\r\n    public destruct() {\r\n        this.events.destruct.emit();\r\n        this.from.connectionCount--;\r\n        this.to.connectionCount--;\r\n        this.destructed = true;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * This class is used for calculation purposes only.\r\n * It won't alter any state of the connected nodes\r\n */\r\nexport class DummyConnection implements IConnection {\r\n\r\n    public id: string;\r\n    public from: NodeInterface;\r\n    public to: NodeInterface;\r\n\r\n    public constructor(from: NodeInterface, to: NodeInterface) {\r\n\r\n        if (!from || !to) {\r\n            throw new Error(\"Cannot initialize connection with null/undefined for 'from' or 'to' values\");\r\n        }\r\n\r\n        this.id = generateId();\r\n        this.from = from;\r\n        this.to = to;\r\n\r\n    }\r\n\r\n}\r\n","import { Node } from \"./node\";\r\nimport { NodeInterface } from \"./nodeInterface\";\r\nimport { Connection, DummyConnection } from \"./connection\";\r\nimport { IState } from \"../types/state\";\r\nimport { PreventableBaklavaEvent, BaklavaEvent, SequentialHook } from \"@baklavajs/events\";\r\nimport {\r\n    IEditor,\r\n    IPlugin,\r\n    IConnection,\r\n    NodeConstructor,\r\n    INode,\r\n    IAddConnectionEventData,\r\n    IAddNodeTypeEventData\r\n} from \"../types\";\r\nimport generateId from \"./idGenerator\";\r\n\r\n/** The main model class for BaklavaJS */\r\nexport class Editor implements IEditor {\r\n    private _plugins: Set<IPlugin> = new Set();\r\n    private _nodes: Node[] = [];\r\n    private _connections: Connection[] = [];\r\n    private _nodeTypes: Map<string, NodeConstructor> = new Map();\r\n    private _nodeCategories: Map<string, string[]> = new Map([[\"default\", []]]);\r\n\r\n    public events = {\r\n        beforeRegisterNodeType: new PreventableBaklavaEvent<IAddNodeTypeEventData>(),\r\n        registerNodeType: new BaklavaEvent<IAddNodeTypeEventData>(),\r\n        beforeAddNode: new PreventableBaklavaEvent<INode>(),\r\n        addNode: new BaklavaEvent<INode>(),\r\n        beforeRemoveNode: new PreventableBaklavaEvent<INode>(),\r\n        removeNode: new BaklavaEvent<INode>(),\r\n        beforeAddConnection: new PreventableBaklavaEvent<IAddConnectionEventData>(),\r\n        addConnection: new BaklavaEvent<IConnection>(),\r\n        checkConnection: new PreventableBaklavaEvent<IAddConnectionEventData>(),\r\n        beforeRemoveConnection: new PreventableBaklavaEvent<IConnection>(),\r\n        removeConnection: new BaklavaEvent<IConnection>(),\r\n        beforeUsePlugin: new PreventableBaklavaEvent<IPlugin>(),\r\n        usePlugin: new BaklavaEvent<IPlugin>()\r\n    };\r\n\r\n    public hooks = {\r\n        save: new SequentialHook<IState>(),\r\n        load: new SequentialHook<IState>()\r\n    };\r\n\r\n    /** List of all nodes */\r\n    public get nodes() {\r\n        return this._nodes as ReadonlyArray<Node>;\r\n    }\r\n\r\n    /** List of all connections */\r\n    public get connections() {\r\n        return this._connections as ReadonlyArray<Connection>;\r\n    }\r\n\r\n    /** List of all registered node types */\r\n    public get nodeTypes() {\r\n        return this._nodeTypes as ReadonlyMap<string, NodeConstructor>;\r\n    }\r\n\r\n    /** Mapping of nodes to node categories */\r\n    public get nodeCategories() {\r\n        return this._nodeCategories as ReadonlyMap<string, string[]>;\r\n    }\r\n\r\n    /** List of all plugins in this editor */\r\n    public get plugins() {\r\n        return this._plugins as ReadonlySet<IPlugin>;\r\n    }\r\n\r\n    /**\r\n     * Register a new node type\r\n     * @param typeName Name of the node (must be equal to the node's `type` field)\r\n     * @param type Actual type / constructor of the node\r\n     * @param category Category of the node. Will be used in the view's context menu for adding nodes\r\n     */\r\n    public registerNodeType(typeName: string, type: NodeConstructor, category = \"default\") {\r\n        if (this.events.beforeRegisterNodeType.emit({ typeName, type, category })) {\r\n            return;\r\n        }\r\n        this._nodeTypes.set(typeName, type);\r\n        if (!this.nodeCategories.has(category)) {\r\n            this._nodeCategories.set(category, []);\r\n        }\r\n        this.nodeCategories.get(category)!.push(typeName);\r\n        this.events.registerNodeType.emit({ typeName, type, category });\r\n    }\r\n\r\n    /**\r\n     * Add a node to the list of nodes.\r\n     * @param node Instance of a node\r\n     * @returns Instance of the node or undefined if the node was not added\r\n     */\r\n    public addNode(node: Node): Node | undefined {\r\n        if (this.events.beforeAddNode.emit(node)) {\r\n            return;\r\n        }\r\n        node.registerEditor(this);\r\n        this._nodes.push(node);\r\n        this.events.addNode.emit(node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * Removes a node from the list.\r\n     * Will also remove all connections from and to the node.\r\n     * @param node Reference to a node in the list.\r\n     */\r\n    public removeNode(node: Node) {\r\n        if (this.nodes.includes(node)) {\r\n            if (this.events.beforeRemoveNode.emit(node)) {\r\n                return;\r\n            }\r\n            this.connections\r\n                .filter((c) => c.from.parent === node || c.to.parent === node)\r\n                .forEach((c) => this.removeConnection(c));\r\n            this._nodes.splice(this.nodes.indexOf(node), 1);\r\n            this.events.removeNode.emit(node);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a connection to the list of connections.\r\n     * @param from Start interface for the connection\r\n     * @param to Target interface for the connection\r\n     * @returns The created connection. If no connection could be created, returns `undefined`.\r\n     */\r\n    public addConnection(from: NodeInterface, to: NodeInterface): Connection | undefined {\r\n        const dc = this.checkConnection(from, to);\r\n        if (!dc) {\r\n            return undefined;\r\n        }\r\n\r\n        if (this.events.beforeAddConnection.emit({ from, to })) {\r\n            return;\r\n        }\r\n\r\n        const c = new Connection(dc.from, dc.to);\r\n        this._connections.push(c);\r\n\r\n        this.events.addConnection.emit(c);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * Remove a connection from the list of connections.\r\n     * @param connection Connection instance that should be removed.\r\n     */\r\n    public removeConnection(connection: Connection) {\r\n        if (this.connections.includes(connection)) {\r\n            if (this.events.beforeRemoveConnection.emit(connection)) {\r\n                return;\r\n            }\r\n            connection.destruct();\r\n            this._connections.splice(this.connections.indexOf(connection), 1);\r\n            this.events.removeConnection.emit(connection);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks, whether a connection between two node interfaces would be valid.\r\n     * @param from The starting node interface (must be an output interface)\r\n     * @param to The target node interface (must be an input interface)\r\n     * @returns Whether the connection is allowed or not.\r\n     */\r\n    public checkConnection(from: NodeInterface, to: NodeInterface): false | DummyConnection {\r\n        if (!from || !to) {\r\n            return false;\r\n        } else if (from.parent === to.parent) {\r\n            // connections must be between two separate nodes.\r\n            return false;\r\n        }\r\n\r\n        if (from.isInput && !to.isInput) {\r\n            // reverse connection\r\n            const tmp = from;\r\n            from = to;\r\n            to = tmp;\r\n        }\r\n\r\n        if (from.isInput || !to.isInput) {\r\n            // connections are only allowed from input to output interface\r\n            return false;\r\n        }\r\n\r\n        // prevent duplicate connections\r\n        if (this.connections.some((c) => c.from === from && c.to === to)) {\r\n            return false;\r\n        }\r\n\r\n        if (this.events.checkConnection.emit({ from, to })) {\r\n            return false;\r\n        }\r\n\r\n        return new DummyConnection(from, to);\r\n    }\r\n\r\n    /**\r\n     * Load a state\r\n     * @param state State to load\r\n     * @returns An array of warnings that occured during loading. If the array is empty, the state was successfully loaded.\r\n     */\r\n    public load(state: IState): string[] {\r\n        const warnings: string[] = [];\r\n\r\n        // Clear current state\r\n        for (let i = this.connections.length - 1; i >= 0; i--) {\r\n            this.removeConnection(this.connections[i]);\r\n        }\r\n        for (let i = this.nodes.length - 1; i >= 0; i--) {\r\n            this.removeNode(this.nodes[i]);\r\n        }\r\n\r\n        // Load state\r\n        for (const n of state.nodes) {\r\n            // find node type\r\n            const nt = this.nodeTypes.get(n.type);\r\n            if (!nt) {\r\n                warnings.push(`Node type ${n.type} is not registered`);\r\n                continue;\r\n            }\r\n\r\n            const node = new nt() as Node;\r\n            this.addNode(node);\r\n            node.load(n);\r\n        }\r\n\r\n        for (const c of state.connections) {\r\n            const fromIf = this.findNodeInterface(c.from);\r\n            const toIf = this.findNodeInterface(c.to);\r\n            if (!fromIf) {\r\n                warnings.push(`Could not find interface with id ${c.from}`);\r\n                continue;\r\n            } else if (!toIf) {\r\n                warnings.push(`Could not find interface with id ${c.to}`);\r\n                continue;\r\n            } else {\r\n                const conn = this.addConnection(fromIf, toIf);\r\n                if (!conn) {\r\n                    warnings.push(`Unable to create connection from ${c.from} to ${c.to}`);\r\n                    continue;\r\n                }\r\n                conn.id = c.id;\r\n            }\r\n        }\r\n\r\n        this.hooks.load.execute(state);\r\n\r\n        warnings.forEach((w) => console.warn(w));\r\n        return warnings;\r\n    }\r\n\r\n    /**\r\n     * Save a state\r\n     * @returns Current state\r\n     */\r\n    public save(): IState {\r\n        const state = {\r\n            nodes: this.nodes.map((n) => n.save()),\r\n            connections: this.connections.map((c) => ({\r\n                id: c.id,\r\n                from: c.from.id,\r\n                to: c.to.id\r\n            }))\r\n        };\r\n        return this.hooks.save.execute(state);\r\n    }\r\n\r\n    /**\r\n     * Register a plugin\r\n     * @param plugin Plugin to register\r\n     * @returns Whether the plugin was successfully registered\r\n     */\r\n    public use(plugin: IPlugin): boolean {\r\n        if (this.events.beforeUsePlugin.emit(plugin)) {\r\n            return false;\r\n        }\r\n        this._plugins.add(plugin);\r\n        plugin.register(this);\r\n        this.events.usePlugin.emit(plugin);\r\n        return true;\r\n    }\r\n\r\n    public generateId(prefix: string = \"\"): string {\r\n        return prefix + generateId();\r\n    }\r\n\r\n    public findNodeInterface(id: string) {\r\n        for (const n of this.nodes) {\r\n            for (const ik of n.interfaces.keys()) {\r\n                if (n.interfaces.get(ik)!.id === id) {\r\n                    return n.interfaces.get(ik)!;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import generateId from \"./idGenerator\";\r\nimport { IInterfaceState } from \"../types/state\";\r\nimport { BaklavaEvent, PreventableBaklavaEvent, SequentialHook } from \"@baklavajs/events\";\r\nimport { INodeInterface, INode } from \"../types\";\r\n\r\nexport class NodeInterface implements INodeInterface {\r\n    public id: string;\r\n    public isInput: boolean;\r\n    public parent: INode;\r\n    public option?: string;\r\n\r\n    [k: string]: any;\r\n\r\n    public events = {\r\n        setConnectionCount: new BaklavaEvent<number>(),\r\n        beforeSetValue: new PreventableBaklavaEvent<any>(),\r\n        setValue: new BaklavaEvent<any>(),\r\n        updated: new BaklavaEvent<void>()\r\n    };\r\n\r\n    public hooks = {\r\n        load: new SequentialHook<IInterfaceState>(),\r\n        save: new SequentialHook<IInterfaceState>()\r\n    };\r\n\r\n    private _connectionCount = 0;\r\n    public set connectionCount(v: number) {\r\n        this._connectionCount = v;\r\n        this.events.setConnectionCount.emit(v);\r\n    }\r\n    public get connectionCount() {\r\n        return this._connectionCount;\r\n    }\r\n\r\n    private _value: any = null;\r\n    public set value(v: any) {\r\n        if (this.events.beforeSetValue.emit(v)) {\r\n            return;\r\n        }\r\n        this._value = v;\r\n        this.events.setValue.emit(v);\r\n    }\r\n    public get value() {\r\n        return this._value;\r\n    }\r\n\r\n    public constructor(parent: INode, isInput: boolean) {\r\n        this.parent = parent;\r\n        this.isInput = isInput;\r\n        this.id = \"ni_\" + generateId();\r\n    }\r\n\r\n    public load(state: IInterfaceState) {\r\n        this.id = state.id;\r\n        this.value = state.value;\r\n        this.hooks.load.execute(state);\r\n    }\r\n\r\n    public save(): IInterfaceState {\r\n        const state = {\r\n            id: this.id,\r\n            value: this.value\r\n        };\r\n        return this.hooks.save.execute(state);\r\n    }\r\n}\r\n","import { INodeOption } from \"../types/nodeOption\";\r\nimport { PreventableBaklavaEvent, BaklavaEvent } from \"@baklavajs/events\";\r\n\r\nexport class NodeOption implements INodeOption {\r\n    /** Name of the component that should be displayed for the option */\r\n    public optionComponent: string;\r\n    /** Name of the component that should be displayed in the sidebar */\r\n    public sidebarComponent?: string;\r\n\r\n    public events = {\r\n        beforeSetValue: new PreventableBaklavaEvent<any>(),\r\n        setValue: new BaklavaEvent<any>(),\r\n        updated: new BaklavaEvent<void>()\r\n    };\r\n\r\n    /** Additional Properties */\r\n    [k: string]: any;\r\n\r\n    private _value: any;\r\n\r\n    public constructor(optionComponent: string, value?: any, sidebarComponent?: any) {\r\n        this.optionComponent = optionComponent;\r\n        this.sidebarComponent = sidebarComponent;\r\n        this._value = value;\r\n    }\r\n\r\n    public get value() {\r\n        return this._value;\r\n    }\r\n\r\n    public set value(v: any) {\r\n        if (this.events.beforeSetValue.emit(v)) {\r\n            return;\r\n        }\r\n        this._value = v;\r\n        this.events.setValue.emit(v);\r\n    }\r\n}\r\n","import generateId from \"./idGenerator\";\r\nimport { NodeInterface } from \"./nodeInterface\";\r\nimport { INodeState } from \"../types/state\";\r\nimport { Editor } from \"./editor\";\r\nimport { PreventableBaklavaEvent, BaklavaEvent, SequentialHook } from \"@baklavajs/events\";\r\nimport { NodeOption } from \"./nodeOption\";\r\nimport { INode, IAddInterfaceEventData, IAddOptionEventData, IOptionEventData, INodeUpdateEventData } from \"../types\";\r\n\r\nexport interface IInterfaceCreateOptions {\r\n    type?: string;\r\n    name?: string;\r\n    optionName?: string;\r\n}\r\n\r\n/**\r\n * Abstract base class for every node\r\n */\r\nexport abstract class Node implements INode {\r\n\r\n    /** Type of the node */\r\n    public abstract type: string;\r\n    /** Customizable display name of the node. */\r\n    public abstract name: string;\r\n    /** Unique identifier of the node */\r\n    public id: string = \"node_\" + generateId();\r\n    /** A map of all interfaces of the node.\r\n     * | Key = Name of the interface\r\n     * | Value = NodeInterface instance\r\n     */\r\n    public interfaces: Map<string, NodeInterface> = new Map();\r\n    /** A map of all options of the node.\r\n     * | Key = Name of the option\r\n     * | Value = NodeOption instance\r\n     */\r\n    public options: Map<string, NodeOption> = new Map();\r\n\r\n    /** Use this property to save additional state of the node */\r\n    public state: Record<string, any> = {};\r\n\r\n    public events = {\r\n        beforeAddInterface: new PreventableBaklavaEvent<IAddInterfaceEventData>(),\r\n        addInterface: new BaklavaEvent<NodeInterface>(),\r\n        beforeRemoveInterface: new PreventableBaklavaEvent<NodeInterface>(),\r\n        removeInterface: new BaklavaEvent<NodeInterface>(),\r\n        beforeAddOption: new PreventableBaklavaEvent<IAddOptionEventData>(),\r\n        addOption: new BaklavaEvent<IOptionEventData>(),\r\n        beforeRemoveOption: new PreventableBaklavaEvent<IOptionEventData>(),\r\n        removeOption: new BaklavaEvent<IOptionEventData>(),\r\n        update: new BaklavaEvent<INodeUpdateEventData>()\r\n    };\r\n\r\n    public hooks = {\r\n        load: new SequentialHook<INodeState>(),\r\n        save: new SequentialHook<INodeState>()\r\n    };\r\n\r\n    private editorInstance?: Editor;\r\n\r\n    /** All input interfaces of the node */\r\n    public get inputInterfaces(): Record<string, NodeInterface> {\r\n        const intf: Record<string, NodeInterface> = {};\r\n        this.interfaces.forEach((v, k) => {\r\n            if (v.isInput) { intf[k] = v; }\r\n        });\r\n        return intf;\r\n    }\r\n\r\n    /** All output interfaces of the node */\r\n    public get outputInterfaces(): Record<string, NodeInterface> {\r\n        const intf: Record<string, NodeInterface> = {};\r\n        this.interfaces.forEach((v, k) => {\r\n            if (!v.isInput) { intf[k] = v; }\r\n        });\r\n        return intf;\r\n    }\r\n\r\n    public load(state: INodeState) {\r\n        this.id = state.id;\r\n        this.name = state.name;\r\n        this.state = state.state;\r\n        state.options.forEach(([k, v]) => {\r\n            if (this.options.has(k)) {\r\n                this.options.get(k)!.value = v;\r\n            }\r\n        });\r\n        state.interfaces.forEach(([k, v]) => {\r\n            if (this.interfaces.has(k)) {\r\n                this.interfaces.get(k)!.load(v);\r\n            }\r\n        });\r\n        this.hooks.load.execute(state);\r\n    }\r\n\r\n    public save(): INodeState {\r\n        const state: INodeState = {\r\n            type: this.type,\r\n            id: this.id,\r\n            name: this.name,\r\n            options: Array.from(this.options.entries()).map(([k, o]) => [k, o.value]) as any,\r\n            state: this.state,\r\n            interfaces: Array.from(this.interfaces.entries()).map(([k, i]) => [k, i.save()]) as any\r\n        };\r\n        return this.hooks.save.execute(state);\r\n    }\r\n\r\n    /**\r\n     * The default implementation does nothing.\r\n     * Overwrite this method to do calculation.\r\n     * @return This method can return a promise.\r\n     * Additionally, when using the engine plugin and this node is a rootNode,\r\n     * the data is returned from the engines calculate function or the calculated event.\r\n     */\r\n    public calculate(calculationData?: any): any {\r\n        // Empty\r\n    }\r\n\r\n    /**\r\n     * Add an input interface to the node\r\n     * @param name Name of the interface\r\n     * @param option Optional name of a NodeOption which is displayed when the interface is not connected\r\n     * @param defaultValue Optional default value for the interface/option\r\n     * @param additionalProperties Additional properties of the interface that can be used by plugins\r\n     * @returns The created interface or undefined, if the interface was not created\r\n     */\r\n    protected addInputInterface(name: string, option?: string, defaultValue: any = null, additionalProperties?: Record<string, any>) {\r\n        if (this.events.beforeAddInterface.emit({ name, isInput: true, option, defaultValue })) { return; }\r\n        const intf = this.addInterface(true, name, option);\r\n        intf.events.setValue.addListener(this, () => this.events.update.emit({ name, interface: intf }));\r\n        intf.value = defaultValue;\r\n        Object.entries(additionalProperties || {}).forEach(([k, v]) => { intf[k] = v; });\r\n        this.events.addInterface.emit(intf);\r\n        return intf;\r\n    }\r\n\r\n    /**\r\n     * Add an output interface to the node\r\n     * @param name Name of the interface\r\n     * @param additionalProperties Additional properties of the interface that can be used by plugins\r\n     * @returns The created interface or undefined, if the interface was not created\r\n     */\r\n    protected addOutputInterface(name: string, additionalProperties?: Record<string, any>) {\r\n        if (this.events.beforeAddInterface.emit({ name, isInput: false })) { return; }\r\n        const intf = this.addInterface(false, name);\r\n        Object.entries(additionalProperties || {}).forEach(([k, v]) => { intf[k] = v; });\r\n        this.events.addInterface.emit(intf);\r\n        return intf;\r\n    }\r\n\r\n    /**\r\n     * Remove an existing interface\r\n     * @param name Name of the interface.\r\n     */\r\n    protected removeInterface(name: string) {\r\n        const intf = this.getInterface(name);\r\n        if (intf) {\r\n\r\n            if (this.events.beforeRemoveInterface.emit(intf)) { return; }\r\n\r\n            if (intf.connectionCount > 0) {\r\n                if (this.editorInstance) {\r\n                    const connections = this.editorInstance.connections.filter(\r\n                        (c) => c.from === intf || c.to === intf\r\n                    );\r\n                    connections.forEach((c) => {\r\n                        this.editorInstance!.removeConnection(c);\r\n                    });\r\n                } else {\r\n                    throw new Error(\r\n                        \"Interface is connected, but no editor instance is specified. Unable to delete interface\"\r\n                    );\r\n                }\r\n            }\r\n\r\n            this.interfaces.delete(name);\r\n            this.events.removeInterface.emit(intf);\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add a node option to the node\r\n     * @param name Name of the option\r\n     * @param component Name of the option component\r\n     * @param defaultValue Default value for the option\r\n     * @param sidebarComponent Optional name of the component to display in the sidebar\r\n     * @param additionalProperties Additional properties of the option that can be used by plugins\r\n     * @returns The created option or undefined, if the option was not created\r\n     */\r\n    protected addOption(name: string, component: string, defaultValue: any = null,\r\n                        sidebarComponent?: string, additionalProperties?: Record<string, any>) {\r\n        if (this.events.beforeAddOption.emit({ name, component, defaultValue, sidebarComponent })) { return; }\r\n        const opt = new NodeOption(component, defaultValue, sidebarComponent);\r\n        Object.entries(additionalProperties || {}).forEach(([k, v]) => { opt[k] = v; });\r\n        opt.events.setValue.addListener(this, () => { this.events.update.emit({ name, option: opt }); });\r\n        this.options.set(name, opt);\r\n        this.events.addOption.emit({ name, option: opt });\r\n        return opt;\r\n    }\r\n\r\n    /**\r\n     * Remove an existing option\r\n     * @param name Name of the option\r\n     */\r\n    protected removeOption(name: string) {\r\n        if (this.options.has(name)) {\r\n            const option = this.options.get(name)!;\r\n            if (this.events.beforeRemoveOption.emit({ name, option })) { return; }\r\n            this.options.delete(name);\r\n            this.events.removeOption.emit({ name, option });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get an interface by its name. If the node does not have an interface with\r\n     * `name`, this method will throw an error.\r\n     * @param name Name of the requested interface\r\n     */\r\n    public getInterface(name: string): NodeInterface {\r\n        if (!this.interfaces.has(name)) {\r\n            throw new Error(`No interface named '${name}'`);\r\n        }\r\n        return this.interfaces.get(name)!;\r\n    }\r\n\r\n    /**\r\n     * Get the value of option `name`\r\n     * @param name Name of the option\r\n     */\r\n    public getOptionValue(name: string) {\r\n        if (!this.options.has(name)) {\r\n            throw new Error(`No option named '${name}'`);\r\n        }\r\n        return this.options.get(name)!.value;\r\n    }\r\n\r\n    /**\r\n     * Set the value of option `name`\r\n     * @param name Name of the option\r\n     * @param value New value\r\n     */\r\n    public setOptionValue(name: string, value: any) {\r\n        if (!this.options.has(name)) {\r\n            throw new Error(`No option named '${name}'`);\r\n        }\r\n        this.options.get(name)!.value = value;\r\n    }\r\n\r\n    /**\r\n     * This function will automatically be called as soon as the node is added to an editor.\r\n     * @param editor Editor instance\r\n     */\r\n    public registerEditor(editor: Editor) {\r\n        this.editorInstance = editor;\r\n    }\r\n\r\n    private addInterface(isInput: boolean, name: string, option?: string) {\r\n        const intf = new NodeInterface(this, isInput);\r\n        intf.option = option;\r\n        this.interfaces.set(name, intf);\r\n        return intf;\r\n    }\r\n\r\n}\r\n","import { Node } from \"./node\";\r\n\r\ninterface IInterfaceOptions {\r\n    isInput: boolean;\r\n    name: string;\r\n    option?: string;\r\n    defaultValue?: any;\r\n    additionalProperties?: Record<string, any>;\r\n}\r\n\r\ninterface INodeOptionParameters {\r\n    value: string;\r\n    optionComponent: string;\r\n    sidebarComponent?: string;\r\n    additionalProperties?: Record<string, any>;\r\n}\r\n\r\ntype CalculationFunction = (this: Node, n: Node, calculationData?: any) => any;\r\ntype NodeConstructorImpl = new () => Node;\r\n\r\nfunction getDefaultValue(v: any) {\r\n    if (typeof(v) === \"function\") {\r\n        return v();\r\n    } else {\r\n        return v;\r\n    }\r\n}\r\n\r\nfunction generateNode(\r\n    type: string, name: string, additionalProperties: Record<string, any>|undefined, intfs: IInterfaceOptions[],\r\n    options: Map<string, INodeOptionParameters>, calcFunction?: CalculationFunction\r\n) {\r\n    return class extends Node {\r\n\r\n        type = type;\r\n        name = name;\r\n\r\n        constructor() {\r\n            super();\r\n            if (additionalProperties) {\r\n                Object.assign(this, additionalProperties);\r\n            }\r\n            for (const i of intfs) {\r\n                if (i.isInput) {\r\n                    this.addInputInterface(i.name, i.option, getDefaultValue(i.defaultValue), i.additionalProperties);\r\n                } else {\r\n                    this.addOutputInterface(i.name, i.additionalProperties);\r\n                }\r\n            }\r\n            Array.from(options.entries()).forEach(([k, v]) => {\r\n                this.addOption(k, v.optionComponent, getDefaultValue(v.value), v.sidebarComponent, v.additionalProperties);\r\n            });\r\n        }\r\n\r\n        public calculate(calculationData?: any): any {\r\n            if (calcFunction) {\r\n                return calcFunction.call(this, this, calculationData);\r\n            }\r\n        }\r\n\r\n    };\r\n}\r\n\r\n/** Utility class for creating custom nodes */\r\nexport class NodeBuilder {\r\n\r\n    private type = \"\";\r\n    private name = \"\";\r\n    private additionalProperties?: Record<string, any>;\r\n    private intfs: IInterfaceOptions[] = [];\r\n    private options: Map<string, INodeOptionParameters> = new Map();\r\n    private calcFunction?: CalculationFunction;\r\n\r\n    /**\r\n     * Create a new NodeBuilder instance\r\n     * @param type Type of the node to create\r\n     * @param additionalProperties Additional properties that can be used by plugins\r\n     */\r\n    public constructor(type: string, additionalProperties?: Record<string, any>) {\r\n        this.type = type;\r\n        this.name = type;\r\n        this.additionalProperties = additionalProperties;\r\n    }\r\n\r\n    /**\r\n     * Build the node class.\r\n     * This must be called as the last operation when building a node.\r\n     * @returns The generated node class\r\n     */\r\n    public build(): NodeConstructorImpl {\r\n        return generateNode(this.type, this.name, this.additionalProperties, this.intfs, this.options, this.calcFunction);\r\n    }\r\n\r\n    /**\r\n     * Set a display name for the node.\r\n     * @param name New name of the node\r\n     * @returns Current node builder instance for chaining\r\n     */\r\n    public setName(name: string): NodeBuilder {\r\n        this.name = name;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add an input interface to the node\r\n     * @param name Name of the interface\r\n     * @param type Type of the interface\r\n     * @param option A node option component to be displayed when the interface is not connected\r\n     * @param defaultValue\r\n     * Default value for the interface.\r\n     * If the default value is a primitive (e. g. string, number) then the value can be passed directly.\r\n     * For objects provide a function that returns the default value.\r\n     * @param additionalProperties Additional properties of the interface that can be used by plugins\r\n     * @returns Current node builder instance for chaining\r\n     */\r\n    public addInputInterface(name: string, option?: string, defaultValue: any = null,\r\n                             additionalProperties?: Record<string, any>): NodeBuilder {\r\n        this.checkDefaultValue(defaultValue);\r\n        this.intfs.push({ isInput: true, name, option, defaultValue, additionalProperties });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add an output interface to the node\r\n     * @param name Name of the interface\r\n     * @param additionalProperties Additional properties of the interface that can be used by plugins\r\n     * @returns Current node builder instance for chaining\r\n     */\r\n    public addOutputInterface(name: string, additionalProperties?: Record<string, any>): NodeBuilder {\r\n        this.intfs.push({ isInput: false, name, additionalProperties });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Add a node option to the node\r\n     * @param name Name of the option\r\n     * @param component Option component\r\n     * @param defaultValue\r\n     * Default value for the option.\r\n     * If the default value is a primitive (e. g. string, number) then the value can be passed directly.\r\n     * For objects provide a function that returns the default value.\r\n     * @param sidebarComponent Optional component to display in the sidebar\r\n     * @param additionalProperties Additional properties of the option that can be used by plugins\r\n     * @returns Current node builder instance for chaining\r\n     */\r\n    public addOption(name: string, optionComponent: string, defaultValue: any = null,\r\n                     sidebarComponent?: string, additionalProperties?: Record<string, any>): NodeBuilder {\r\n        this.checkDefaultValue(defaultValue);\r\n        this.options.set(name, {\r\n            value: defaultValue,\r\n            optionComponent,\r\n            sidebarComponent,\r\n            additionalProperties\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Register a callback for the calculation function.\r\n     * The callback will receive the node instance as first parameter.\r\n     * (If you do not use ES6 arrow functions, the node instance\r\n     * will also be bound to `this`)\r\n     * @param cb Callback to be executed when `calculate()` is called on the node\r\n     * @returns Current node builder instance for chaining\r\n     */\r\n    public onCalculate(cb: CalculationFunction): NodeBuilder {\r\n        this.calcFunction = cb;\r\n        return this;\r\n    }\r\n\r\n    private checkDefaultValue(v: any) {\r\n        if (typeof(v) === \"object\" && v !== null) {\r\n            throw new Error(\"If the default value is an object, provide a generator function instead of the object\");\r\n        }\r\n    }\r\n\r\n}\r\n","<template>\r\n    <div\r\n        tabindex=\"-1\"\r\n        :class=\"[\r\n            'node-editor',\r\n            { 'ignore-mouse': !!temporaryConnection, '--temporary-connection': !!temporaryConnection },\r\n        ]\"\r\n        @mousemove.self=\"mouseMoveHandler\"\r\n        @mousedown=\"mouseDown\"\r\n        @mouseup=\"mouseUp\"\r\n        @wheel.self=\"mouseWheel\"\r\n        @keydown=\"keyDown\"\r\n        @keyup=\"keyUp\"\r\n        @contextmenu.self.prevent=\"openContextMenu\"\r\n    >\r\n        <div class=\"background\" :style=\"backgroundStyle\"></div>\r\n\r\n        <svg class=\"connections-container\">\r\n            <g v-for=\"connection in connections\" :key=\"connection.id + counter.toString()\">\r\n                <slot name=\"connections\" :connection=\"connection\">\r\n                    <component :is=\"plugin.components.connection\" :connection=\"connection\"></component>\r\n                </slot>\r\n            </g>\r\n            <component\r\n                :is=\"plugin.components.tempConnection\"\r\n                v-if=\"temporaryConnection\"\r\n                :connection=\"temporaryConnection\"\r\n            ></component>\r\n        </svg>\r\n\r\n        <div class=\"node-container\" :style=\"styles\">\r\n            <component\r\n                :is=\"plugin.components.node\"\r\n                v-for=\"node in nodes\"\r\n                :key=\"node.id + counter.toString()\"\r\n                :node=\"node\"\r\n                :selected=\"selectedNodes.includes(node)\"\r\n                @select=\"selectNode(node, $event)\"\r\n            >\r\n            </component>\r\n        </div>\r\n\r\n        <component\r\n            :is=\"plugin.components.contextMenu\"\r\n            v-model=\"contextMenu.show\"\r\n            :x=\"contextMenu.x\"\r\n            :y=\"contextMenu.y\"\r\n            :items=\"contextMenu.items\"\r\n            flippable\r\n            @click=\"onContextMenuClick\"\r\n        ></component>\r\n\r\n        <component :is=\"plugin.components.sidebar\"></component>\r\n\r\n        <component\r\n            v-if=\"plugin.enableMinimap\"\r\n            :is=\"plugin.components.minimap\"\r\n            :nodes=\"nodes\"\r\n            :connections=\"connections\"\r\n        ></component>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Prop, Provide, Watch } from \"vue-property-decorator\";\r\n\r\nimport {\r\n    ITransferConnection,\r\n    INodeInterface,\r\n    ITemporaryConnection,\r\n    TemporaryConnectionState,\r\n} from \"../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../viewPlugin\";\r\nimport { IViewNode } from \"../../types\";\r\nimport { IMenuItem } from \"./ContextMenu.vue\";\r\n\r\nimport Clipboard from \"../clipboard\";\r\nimport History from \"../history\";\r\n\r\nimport NodeView from \"./node/Node.vue\";\r\n\r\ninterface IPosition {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport default class EditorView extends Vue {\r\n    @Prop({ type: Object, required: true })\r\n    @Provide()\r\n    plugin!: ViewPlugin;\r\n\r\n    @Provide({ to: \"editor\" })\r\n    nodeeditor: EditorView = this;\r\n\r\n    @Provide()\r\n    selectedNodeViews: NodeView[] = [];\r\n\r\n    clipboard!: Clipboard;\r\n    history!: History;\r\n\r\n    temporaryConnection: ITemporaryConnection | null = null;\r\n    hoveringOver?: INodeInterface | null = null;\r\n    selectedNodes: IViewNode[] = [];\r\n    ctrlPressed = false;\r\n\r\n    draggingStartPoint: IPosition | null = null;\r\n    draggingStartPanning: IPosition | null = null;\r\n\r\n    // Reason: https://github.com/newcat/baklavajs/issues/54\r\n    counter = 0;\r\n\r\n    contextMenu = {\r\n        items: [] as IMenuItem[],\r\n        show: false,\r\n        x: 0,\r\n        y: 0,\r\n    };\r\n\r\n    get styles() {\r\n        return {\r\n            \"transform-origin\": \"0 0\",\r\n            \"transform\": `scale(${this.plugin.scaling}) translate(${this.plugin.panning.x}px, ${this.plugin.panning.y}px)`,\r\n        };\r\n    }\r\n\r\n    get backgroundStyle() {\r\n        const positionLeft = this.plugin.panning.x * this.plugin.scaling;\r\n        const positionTop = this.plugin.panning.y * this.plugin.scaling;\r\n        const size = this.plugin.scaling * this.plugin.backgroundGrid.gridSize;\r\n        const subSize = size / this.plugin.backgroundGrid.gridDivision;\r\n        const backgroundSize = `${size}px ${size}px, ${size}px ${size}px`;\r\n        const subGridBackgroundSize =\r\n            this.plugin.scaling > this.plugin.backgroundGrid.subGridVisibleThreshold\r\n                ? `, ${subSize}px ${subSize}px, ${subSize}px ${subSize}px`\r\n                : \"\";\r\n        return {\r\n            \"background-position\": `left ${positionLeft}px top ${positionTop}px`,\r\n            \"background-size\": `${backgroundSize} ${subGridBackgroundSize}`,\r\n        };\r\n    }\r\n\r\n    get nodes() {\r\n        return this.plugin.editor ? this.plugin.editor.nodes : [];\r\n    }\r\n\r\n    get connections() {\r\n        return this.plugin.editor ? this.plugin.editor.connections : [];\r\n    }\r\n\r\n    get hasEnginePlugin() {\r\n        for (const p of this.plugin.editor.plugins.values()) {\r\n            if (p.type === \"EnginePlugin\") {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mounted() {\r\n        this.updateContextMenu();\r\n        this.plugin.editor.events.registerNodeType.addListener(this, () => this.updateContextMenu());\r\n        this.plugin.editor.hooks.load.tap(this, (s) => {\r\n            this.counter++;\r\n            return s;\r\n        });\r\n        this.clipboard = new Clipboard(this.plugin.editor);\r\n        this.history = new History(this.plugin);\r\n    }\r\n\r\n    @Watch(\"plugin.nodeTypeAliases\")\r\n    updateContextMenu() {\r\n        const categories = Array.from(this.plugin.editor.nodeCategories.keys())\r\n            .filter((c) => c !== \"default\")\r\n            .map((c) => {\r\n                const nodes = Array.from(this.plugin.editor.nodeCategories.get(c)!).map((n) => ({\r\n                    value: \"addNode:\" + n,\r\n                    label: this.plugin.nodeTypeAliases[n] || n,\r\n                }));\r\n                return { label: c, submenu: nodes };\r\n            });\r\n\r\n        const defaultNodes = this.plugin.editor.nodeCategories.get(\"default\")!.map((n) => ({\r\n            value: \"addNode:\" + n,\r\n            label: this.plugin.nodeTypeAliases[n] || n,\r\n        }));\r\n\r\n        const addNodeSubmenu: IMenuItem[] = [...categories];\r\n        if (categories.length > 0 && defaultNodes.length > 0) {\r\n            addNodeSubmenu.push({ isDivider: true });\r\n        }\r\n        addNodeSubmenu.push(...defaultNodes);\r\n\r\n        this.contextMenu.items = [\r\n            {\r\n                label: \"Add Node\",\r\n                submenu: addNodeSubmenu,\r\n            },\r\n            {\r\n                label: \"Copy Nodes\",\r\n                value: \"copy\",\r\n                disabledFunction: () => this.selectedNodes.length === 0,\r\n            },\r\n            {\r\n                label: \"Paste Nodes\",\r\n                value: \"paste\",\r\n                disabledFunction: () => this.clipboard.isEmpty,\r\n            },\r\n        ] as IMenuItem[];\r\n    }\r\n\r\n    hoveredOver(ni: INodeInterface | undefined) {\r\n        this.hoveringOver = ni;\r\n        if (ni && this.temporaryConnection) {\r\n            this.temporaryConnection.to = ni;\r\n            this.temporaryConnection.status = this.plugin.editor.checkConnection(\r\n                this.temporaryConnection.from,\r\n                this.temporaryConnection.to\r\n            )\r\n                ? TemporaryConnectionState.ALLOWED\r\n                : TemporaryConnectionState.FORBIDDEN;\r\n            if (this.hasEnginePlugin) {\r\n                this.connections\r\n                    .filter((c) => c.to === ni)\r\n                    .forEach((c) => {\r\n                        (c as ITransferConnection).isInDanger = true;\r\n                    });\r\n            }\r\n        } else if (!ni && this.temporaryConnection) {\r\n            this.temporaryConnection.to = undefined;\r\n            this.temporaryConnection.status = TemporaryConnectionState.NONE;\r\n            this.connections.forEach((c) => {\r\n                (c as ITransferConnection).isInDanger = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    mouseMoveHandler(ev: MouseEvent) {\r\n        if (this.temporaryConnection) {\r\n            this.temporaryConnection.mx = ev.offsetX / this.plugin.scaling - this.plugin.panning.x;\r\n            this.temporaryConnection.my = ev.offsetY / this.plugin.scaling - this.plugin.panning.y;\r\n        } else if (this.draggingStartPoint) {\r\n            const dx = ev.screenX - this.draggingStartPoint.x;\r\n            const dy = ev.screenY - this.draggingStartPoint.y;\r\n            this.plugin.panning.x = this.draggingStartPanning!.x + dx / this.plugin.scaling;\r\n            this.plugin.panning.y = this.draggingStartPanning!.y + dy / this.plugin.scaling;\r\n        }\r\n    }\r\n\r\n    mouseDown(ev: MouseEvent) {\r\n        if (ev.button === 0) {\r\n            if (this.hoveringOver) {\r\n                // if this interface is an input and already has a connection\r\n                // to it, remove the connection and make it temporary\r\n                const connection = this.connections.find((c) => c.to === this.hoveringOver);\r\n                if (this.hoveringOver.isInput && connection) {\r\n                    this.temporaryConnection = {\r\n                        status: TemporaryConnectionState.NONE,\r\n                        from: connection.from,\r\n                    };\r\n                    this.plugin.editor.removeConnection(connection);\r\n                } else {\r\n                    this.temporaryConnection = {\r\n                        status: TemporaryConnectionState.NONE,\r\n                        from: this.hoveringOver,\r\n                    };\r\n                }\r\n\r\n                (this.temporaryConnection as any).mx = null;\r\n                (this.temporaryConnection as any).my = null;\r\n            } else if (ev.target === this.$el) {\r\n                this.unselectAllNodes();\r\n                this.draggingStartPoint = {\r\n                    x: ev.screenX,\r\n                    y: ev.screenY,\r\n                };\r\n                this.draggingStartPanning = {\r\n                    x: this.plugin.panning.x,\r\n                    y: this.plugin.panning.y,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseUp() {\r\n        this.draggingStartPoint = null;\r\n        this.draggingStartPanning = null;\r\n        const tc = this.temporaryConnection;\r\n        if (tc && this.hoveringOver) {\r\n            this.plugin.editor.addConnection(tc.from, tc.to!);\r\n        }\r\n        this.temporaryConnection = null;\r\n    }\r\n\r\n    mouseWheel(ev: WheelEvent) {\r\n        ev.preventDefault();\r\n        let scrollAmount = ev.deltaY;\r\n        if (ev.deltaMode === 1) {\r\n            scrollAmount *= 32; // Firefox fix, multiplier is trial & error\r\n        }\r\n        const newScale = this.plugin.scaling * (1 - scrollAmount / 3000);\r\n        const currentPoint = [\r\n            ev.offsetX / this.plugin.scaling - this.plugin.panning.x,\r\n            ev.offsetY / this.plugin.scaling - this.plugin.panning.y,\r\n        ];\r\n        const newPoint = [ev.offsetX / newScale - this.plugin.panning.x, ev.offsetY / newScale - this.plugin.panning.y];\r\n        const diff = [newPoint[0] - currentPoint[0], newPoint[1] - currentPoint[1]];\r\n        this.plugin.panning.x += diff[0];\r\n        this.plugin.panning.y += diff[1];\r\n        this.plugin.scaling = newScale;\r\n    }\r\n\r\n    keyDown(ev: KeyboardEvent) {\r\n        if (ev.key === \"Delete\" && this.selectedNodes.length > 0) {\r\n            this.selectedNodes.forEach((n) => this.plugin.editor.removeNode(n));\r\n        } else if (ev.key === \"Tab\") {\r\n            ev.preventDefault();\r\n        } else if (ev.key === \"Control\") {\r\n            this.ctrlPressed = true;\r\n        } else if (ev.key === \"z\" && ev.ctrlKey) {\r\n            this.history.undo();\r\n        } else if (ev.key === \"y\" && ev.ctrlKey) {\r\n            this.history.redo();\r\n        }\r\n    }\r\n\r\n    keyUp(ev: KeyboardEvent) {\r\n        if (ev.key === \"Control\") {\r\n            this.ctrlPressed = false;\r\n        }\r\n    }\r\n\r\n    selectNode(node: IViewNode, nodeView: NodeView) {\r\n        if (!this.ctrlPressed) {\r\n            this.unselectAllNodes();\r\n        }\r\n\r\n        this.selectedNodes.push(node);\r\n        this.selectedNodeViews.push(nodeView);\r\n    }\r\n\r\n    unselectAllNodes() {\r\n        this.selectedNodes.splice(0, this.selectedNodes.length);\r\n        this.selectedNodeViews.splice(0, this.selectedNodeViews.length);\r\n    }\r\n\r\n    openContextMenu(event: MouseEvent) {\r\n        this.contextMenu.show = true;\r\n        this.contextMenu.x = event.offsetX;\r\n        this.contextMenu.y = event.offsetY;\r\n    }\r\n\r\n    onContextMenuClick(action: string) {\r\n        if (action.startsWith(\"addNode:\")) {\r\n            const nodeName = action.substring(action.indexOf(\":\") + 1);\r\n            const nt = this.plugin.editor.nodeTypes.get(nodeName);\r\n            if (nt) {\r\n                const node = this.plugin.editor.addNode(new nt()) as IViewNode;\r\n                if (node) {\r\n                    node.position.x = this.contextMenu.x / this.plugin.scaling - this.plugin.panning.x;\r\n                    node.position.y = this.contextMenu.y / this.plugin.scaling - this.plugin.panning.y;\r\n                }\r\n            }\r\n        } else if (action === \"copy\" && this.selectedNodes.length > 0) {\r\n            this.clipboard.copy(this.selectedNodes);\r\n        } else if (action === \"paste\" && !this.clipboard.isEmpty) {\r\n            this.clipboard.paste();\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import { INodeInterface } from \"./nodeInterface\";\r\n\r\nexport enum TemporaryConnectionState {\r\n    NONE,\r\n    ALLOWED,\r\n    FORBIDDEN\r\n}\r\n\r\nexport interface ITemporaryConnection {\r\n    status: TemporaryConnectionState;\r\n    from: INodeInterface;\r\n    to?: INodeInterface;\r\n    mx?: number;\r\n    my?: number;\r\n}\r\n\r\nexport interface IConnection {\r\n    id: string;\r\n    from: INodeInterface;\r\n    to: INodeInterface;\r\n}\r\n\r\nexport interface ITransferConnection extends IConnection {\r\n    isInDanger: boolean;\r\n    destructed: boolean;\r\n}\r\n","import { IEditor, INode, INodeState, IConnectionState } from \"../../baklavajs-core/types\";\r\n\r\nexport default class Clipboard {\r\n\r\n    private editor: IEditor;\r\n\r\n    private nodeBuffer: string = \"\";\r\n    private connectionBuffer: string = \"\";\r\n\r\n    public get isEmpty() {\r\n        return !this.nodeBuffer;\r\n    }\r\n\r\n    public constructor(editor: IEditor) {\r\n        this.editor = editor;\r\n    }\r\n\r\n    public clear() {\r\n        this.nodeBuffer = \"\";\r\n        this.connectionBuffer = \"\";\r\n    }\r\n\r\n    public copy(selectedNodes: INode[]) {\r\n\r\n        this.connectionBuffer = JSON.stringify(this.editor.connections\r\n            .filter((conn) => selectedNodes.includes(conn.from.parent) && selectedNodes.includes(conn.to.parent))\r\n            .map((conn) => ({ from: conn.from.id, to: conn.to.id } as IConnectionState)));\r\n\r\n        this.nodeBuffer = JSON.stringify(selectedNodes.map((n) => n.save()));\r\n\r\n    }\r\n\r\n    public paste() {\r\n\r\n        // Map old IDs to new IDs\r\n        const idmap = new Map<string, string>();\r\n\r\n        // TODO: What is this?\r\n        const intfmap = new Map<string, string>();\r\n\r\n        const parsedNodeBuffer = JSON.parse(this.nodeBuffer) as INodeState[];\r\n        const parsedConnectionBuffer = JSON.parse(this.connectionBuffer) as IConnectionState[];\r\n\r\n        for (const n of parsedNodeBuffer) {\r\n            const nodeType = this.editor.nodeTypes.get(n.type);\r\n            if (!nodeType) {\r\n                // tslint:disable-next-line: no-console\r\n                console.warn(`Node type ${n.type} not registered`);\r\n                return;\r\n            }\r\n            const copiedNode = new nodeType();\r\n            const generatedId = copiedNode.id;\r\n\r\n            copiedNode.interfaces.forEach((intf) => {\r\n                intf.hooks.load.tap(this, (intfState) => {\r\n                    const newIntfId = this.editor.generateId(\"ni\");\r\n                    idmap.set(intfState.id, newIntfId);\r\n                    intfmap.set(intfState.id, generatedId);\r\n                    intf.id = newIntfId;\r\n                    intf.hooks.load.untap(this);\r\n                    return intfState;\r\n                });\r\n            });\r\n\r\n            copiedNode.hooks.load.tap(this, (nodeState) => {\r\n                const ns = nodeState as any;\r\n                if (ns.position) {\r\n                    ns.position.x += 10;\r\n                    ns.position.y += 10;\r\n                }\r\n                return ns;\r\n            });\r\n\r\n            this.editor.addNode(copiedNode);\r\n            copiedNode.load(n);\r\n            copiedNode.id = generatedId;\r\n            idmap.set(n.id, generatedId);\r\n        }\r\n\r\n        for (const c of parsedConnectionBuffer) {\r\n            const fromNode = this.editor.nodes.find((n) => n.id === intfmap.get(c.from));\r\n            const toNode = this.editor.nodes.find((n) => n.id === intfmap.get(c.to));\r\n            if (!fromNode || !toNode) { continue; }\r\n            const fromIntf = Array.from(fromNode.interfaces.values()).find((intf) => intf.id === idmap.get(c.from));\r\n            const toIntf = Array.from(toNode.interfaces.values()).find((intf) => intf.id === idmap.get(c.to));\r\n            if (!fromIntf || !toIntf) { continue; }\r\n            this.editor.addConnection(fromIntf, toIntf);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { IStep } from \"./step\";\r\nimport { IEditor, INodeState } from \"../../../baklavajs-core/types\";\r\n\r\nexport default class NodeStep implements IStep {\r\n\r\n    public type: \"addNode\"|\"removeNode\";\r\n\r\n    private nodeId?: string;\r\n    private nodeState?: INodeState;\r\n\r\n    public constructor(type: \"addNode\"|\"removeNode\", data: any) {\r\n        this.type = type;\r\n        if (type === \"addNode\") {\r\n            this.nodeId = data as string;\r\n        } else {\r\n            this.nodeState = data as INodeState;\r\n        }\r\n    }\r\n\r\n    public undo(editor: IEditor) {\r\n        if (this.type === \"addNode\") {\r\n            this.removeNode(editor);\r\n        } else {\r\n            this.addNode(editor);\r\n        }\r\n    }\r\n\r\n    public redo(editor: IEditor) {\r\n        if (this.type === \"addNode\" && this.nodeState) {\r\n            this.addNode(editor);\r\n        } else if (this.type === \"removeNode\" && this.nodeId) {\r\n            this.removeNode(editor);\r\n        }\r\n    }\r\n\r\n    private addNode(editor: IEditor) {\r\n        const nodeType = editor.nodeTypes.get(this.nodeState!.type);\r\n        if (!nodeType) { return; }\r\n        const n = new nodeType();\r\n        editor.addNode(n);\r\n        n.load(this.nodeState!);\r\n        this.nodeId = n.id;\r\n    }\r\n\r\n    private removeNode(editor: IEditor) {\r\n        const node = editor.nodes.find((n) => n.id === this.nodeId);\r\n        if (!node) { return; }\r\n        this.nodeState = node.save();\r\n        editor.removeNode(node);\r\n    }\r\n\r\n}\r\n","import { IStep } from \"./step\";\r\nimport { IEditor, IConnectionState, IConnection } from \"../../../baklavajs-core/types\";\r\n\r\nexport default class ConnectionStep implements IStep {\r\n\r\n    public type: \"addConnection\"|\"removeConnection\";\r\n\r\n    private connectionId?: string;\r\n    private connectionState?: IConnectionState;\r\n\r\n    public constructor(type: \"addConnection\"|\"removeConnection\", data: string|IConnection) {\r\n        this.type = type;\r\n        if (type === \"addConnection\") {\r\n            this.connectionId = data as string;\r\n        } else {\r\n            const d = data as IConnection;\r\n            this.connectionState = {\r\n                id: d.id,\r\n                from: d.from.id,\r\n                to: d.to.id\r\n            };\r\n        }\r\n    }\r\n\r\n    public undo(editor: IEditor) {\r\n        if (this.type === \"addConnection\") {\r\n            this.removeConnection(editor);\r\n        } else {\r\n            this.addConnection(editor);\r\n        }\r\n    }\r\n\r\n    public redo(editor: IEditor) {\r\n        if (this.type === \"addConnection\" && this.connectionState) {\r\n            this.addConnection(editor);\r\n        } else if (this.type === \"removeConnection\" && this.connectionId) {\r\n            this.removeConnection(editor);\r\n        }\r\n    }\r\n\r\n    private addConnection(editor: IEditor) {\r\n        const fromIntf = editor.findNodeInterface(this.connectionState!.from);\r\n        const toIntf = editor.findNodeInterface(this.connectionState!.to);\r\n        if (!fromIntf || !toIntf) { return; }\r\n        editor.addConnection(fromIntf, toIntf);\r\n    }\r\n\r\n    private removeConnection(editor: IEditor) {\r\n        const connection = editor.connections.find((c) => c.id === this.connectionId);\r\n        if (!connection) { return; }\r\n        this.connectionState = {\r\n            id: connection.id,\r\n            from: connection.from.id,\r\n            to: connection.to.id\r\n        };\r\n        editor.removeConnection(connection);\r\n    }\r\n\r\n}\r\n","import { ViewPlugin } from \"../viewPlugin\";\r\n\r\nimport { IStep } from \"./step\";\r\nimport NodeStep from \"./nodeStep\";\r\nimport ConnectionStep from \"./connectionStep\";\r\n\r\nexport default class History {\r\n\r\n    public maxSteps = 200;\r\n\r\n    private viewPlugin: ViewPlugin;\r\n    private steps: IStep[] = [];\r\n    private changeBySelf = false;\r\n    private currentIndex = -1;\r\n\r\n    private activeTransaction = false;\r\n    private transactionSteps: IStep[] = [];\r\n\r\n    public constructor(viewPlugin: ViewPlugin) {\r\n        this.viewPlugin = viewPlugin;\r\n        this.viewPlugin.editor.events.addNode.addListener(this, (node) => {\r\n            this.addStep(new NodeStep(\"addNode\", node.id));\r\n        });\r\n        this.viewPlugin.editor.events.removeNode.addListener(this, (node) => {\r\n            this.addStep(new NodeStep(\"removeNode\", node.save()));\r\n        });\r\n        this.viewPlugin.editor.events.addConnection.addListener(this, (conn) => {\r\n            this.addStep(new ConnectionStep(\"addConnection\", conn.id));\r\n        });\r\n        this.viewPlugin.editor.events.removeConnection.addListener(this, (conn) => {\r\n            this.addStep(new ConnectionStep(\"removeConnection\", conn));\r\n        });\r\n    }\r\n\r\n    public startTransaction() {\r\n        this.activeTransaction = true;\r\n    }\r\n\r\n    public commitTransaction() {\r\n        this.activeTransaction = false;\r\n    }\r\n\r\n    public undo() {\r\n        if (this.steps.length === 0 || this.currentIndex === -1) { return; }\r\n        this.changeBySelf = true;\r\n        this.steps[this.currentIndex--].undo(this.viewPlugin.editor);\r\n        this.changeBySelf = false;\r\n    }\r\n\r\n    public redo() {\r\n        if (this.steps.length === 0 || this.currentIndex >= this.steps.length - 1) { return; }\r\n        this.changeBySelf = true;\r\n        this.steps[++this.currentIndex].redo(this.viewPlugin.editor);\r\n        this.changeBySelf = false;\r\n    }\r\n\r\n    private addStep(step: IStep) {\r\n        if (this.changeBySelf) {\r\n            return;\r\n        }\r\n\r\n        if (this.activeTransaction) {\r\n            this.transactionSteps.push(step);\r\n        } else {\r\n\r\n            if (this.currentIndex !== this.steps.length - 1) {\r\n                this.steps = this.steps.slice(0, this.currentIndex + 1);\r\n            }\r\n\r\n            this.steps.push(step);\r\n            this.currentIndex++;\r\n\r\n            while (this.steps.length > this.maxSteps) {\r\n                this.steps.shift();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","\r\nimport { Vue, Prop, Provide, Watch } from \"vue-property-decorator\";\r\n\r\nimport {\r\n    ITransferConnection,\r\n    INodeInterface,\r\n    ITemporaryConnection,\r\n    TemporaryConnectionState,\r\n} from \"../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../viewPlugin\";\r\nimport { IViewNode } from \"../../types\";\r\nimport { IMenuItem } from \"./ContextMenu.vue\";\r\n\r\nimport Clipboard from \"../clipboard\";\r\nimport History from \"../history\";\r\n\r\nimport NodeView from \"./node/Node.vue\";\r\n\r\ninterface IPosition {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport default class EditorView extends Vue {\r\n    @Prop({ type: Object, required: true })\r\n    @Provide()\r\n    plugin!: ViewPlugin;\r\n\r\n    @Provide({ to: \"editor\" })\r\n    nodeeditor: EditorView = this;\r\n\r\n    @Provide()\r\n    selectedNodeViews: NodeView[] = [];\r\n\r\n    clipboard!: Clipboard;\r\n    history!: History;\r\n\r\n    temporaryConnection: ITemporaryConnection | null = null;\r\n    hoveringOver?: INodeInterface | null = null;\r\n    selectedNodes: IViewNode[] = [];\r\n    ctrlPressed = false;\r\n\r\n    draggingStartPoint: IPosition | null = null;\r\n    draggingStartPanning: IPosition | null = null;\r\n\r\n    // Reason: https://github.com/newcat/baklavajs/issues/54\r\n    counter = 0;\r\n\r\n    contextMenu = {\r\n        items: [] as IMenuItem[],\r\n        show: false,\r\n        x: 0,\r\n        y: 0,\r\n    };\r\n\r\n    get styles() {\r\n        return {\r\n            \"transform-origin\": \"0 0\",\r\n            \"transform\": `scale(${this.plugin.scaling}) translate(${this.plugin.panning.x}px, ${this.plugin.panning.y}px)`,\r\n        };\r\n    }\r\n\r\n    get backgroundStyle() {\r\n        const positionLeft = this.plugin.panning.x * this.plugin.scaling;\r\n        const positionTop = this.plugin.panning.y * this.plugin.scaling;\r\n        const size = this.plugin.scaling * this.plugin.backgroundGrid.gridSize;\r\n        const subSize = size / this.plugin.backgroundGrid.gridDivision;\r\n        const backgroundSize = `${size}px ${size}px, ${size}px ${size}px`;\r\n        const subGridBackgroundSize =\r\n            this.plugin.scaling > this.plugin.backgroundGrid.subGridVisibleThreshold\r\n                ? `, ${subSize}px ${subSize}px, ${subSize}px ${subSize}px`\r\n                : \"\";\r\n        return {\r\n            \"background-position\": `left ${positionLeft}px top ${positionTop}px`,\r\n            \"background-size\": `${backgroundSize} ${subGridBackgroundSize}`,\r\n        };\r\n    }\r\n\r\n    get nodes() {\r\n        return this.plugin.editor ? this.plugin.editor.nodes : [];\r\n    }\r\n\r\n    get connections() {\r\n        return this.plugin.editor ? this.plugin.editor.connections : [];\r\n    }\r\n\r\n    get hasEnginePlugin() {\r\n        for (const p of this.plugin.editor.plugins.values()) {\r\n            if (p.type === \"EnginePlugin\") {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    mounted() {\r\n        this.updateContextMenu();\r\n        this.plugin.editor.events.registerNodeType.addListener(this, () => this.updateContextMenu());\r\n        this.plugin.editor.hooks.load.tap(this, (s) => {\r\n            this.counter++;\r\n            return s;\r\n        });\r\n        this.clipboard = new Clipboard(this.plugin.editor);\r\n        this.history = new History(this.plugin);\r\n    }\r\n\r\n    @Watch(\"plugin.nodeTypeAliases\")\r\n    updateContextMenu() {\r\n        const categories = Array.from(this.plugin.editor.nodeCategories.keys())\r\n            .filter((c) => c !== \"default\")\r\n            .map((c) => {\r\n                const nodes = Array.from(this.plugin.editor.nodeCategories.get(c)!).map((n) => ({\r\n                    value: \"addNode:\" + n,\r\n                    label: this.plugin.nodeTypeAliases[n] || n,\r\n                }));\r\n                return { label: c, submenu: nodes };\r\n            });\r\n\r\n        const defaultNodes = this.plugin.editor.nodeCategories.get(\"default\")!.map((n) => ({\r\n            value: \"addNode:\" + n,\r\n            label: this.plugin.nodeTypeAliases[n] || n,\r\n        }));\r\n\r\n        const addNodeSubmenu: IMenuItem[] = [...categories];\r\n        if (categories.length > 0 && defaultNodes.length > 0) {\r\n            addNodeSubmenu.push({ isDivider: true });\r\n        }\r\n        addNodeSubmenu.push(...defaultNodes);\r\n\r\n        this.contextMenu.items = [\r\n            {\r\n                label: \"Add Node\",\r\n                submenu: addNodeSubmenu,\r\n            },\r\n            {\r\n                label: \"Copy Nodes\",\r\n                value: \"copy\",\r\n                disabledFunction: () => this.selectedNodes.length === 0,\r\n            },\r\n            {\r\n                label: \"Paste Nodes\",\r\n                value: \"paste\",\r\n                disabledFunction: () => this.clipboard.isEmpty,\r\n            },\r\n        ] as IMenuItem[];\r\n    }\r\n\r\n    hoveredOver(ni: INodeInterface | undefined) {\r\n        this.hoveringOver = ni;\r\n        if (ni && this.temporaryConnection) {\r\n            this.temporaryConnection.to = ni;\r\n            this.temporaryConnection.status = this.plugin.editor.checkConnection(\r\n                this.temporaryConnection.from,\r\n                this.temporaryConnection.to\r\n            )\r\n                ? TemporaryConnectionState.ALLOWED\r\n                : TemporaryConnectionState.FORBIDDEN;\r\n            if (this.hasEnginePlugin) {\r\n                this.connections\r\n                    .filter((c) => c.to === ni)\r\n                    .forEach((c) => {\r\n                        (c as ITransferConnection).isInDanger = true;\r\n                    });\r\n            }\r\n        } else if (!ni && this.temporaryConnection) {\r\n            this.temporaryConnection.to = undefined;\r\n            this.temporaryConnection.status = TemporaryConnectionState.NONE;\r\n            this.connections.forEach((c) => {\r\n                (c as ITransferConnection).isInDanger = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    mouseMoveHandler(ev: MouseEvent) {\r\n        if (this.temporaryConnection) {\r\n            this.temporaryConnection.mx = ev.offsetX / this.plugin.scaling - this.plugin.panning.x;\r\n            this.temporaryConnection.my = ev.offsetY / this.plugin.scaling - this.plugin.panning.y;\r\n        } else if (this.draggingStartPoint) {\r\n            const dx = ev.screenX - this.draggingStartPoint.x;\r\n            const dy = ev.screenY - this.draggingStartPoint.y;\r\n            this.plugin.panning.x = this.draggingStartPanning!.x + dx / this.plugin.scaling;\r\n            this.plugin.panning.y = this.draggingStartPanning!.y + dy / this.plugin.scaling;\r\n        }\r\n    }\r\n\r\n    mouseDown(ev: MouseEvent) {\r\n        if (ev.button === 0) {\r\n            if (this.hoveringOver) {\r\n                // if this interface is an input and already has a connection\r\n                // to it, remove the connection and make it temporary\r\n                const connection = this.connections.find((c) => c.to === this.hoveringOver);\r\n                if (this.hoveringOver.isInput && connection) {\r\n                    this.temporaryConnection = {\r\n                        status: TemporaryConnectionState.NONE,\r\n                        from: connection.from,\r\n                    };\r\n                    this.plugin.editor.removeConnection(connection);\r\n                } else {\r\n                    this.temporaryConnection = {\r\n                        status: TemporaryConnectionState.NONE,\r\n                        from: this.hoveringOver,\r\n                    };\r\n                }\r\n\r\n                (this.temporaryConnection as any).mx = null;\r\n                (this.temporaryConnection as any).my = null;\r\n            } else if (ev.target === this.$el) {\r\n                this.unselectAllNodes();\r\n                this.draggingStartPoint = {\r\n                    x: ev.screenX,\r\n                    y: ev.screenY,\r\n                };\r\n                this.draggingStartPanning = {\r\n                    x: this.plugin.panning.x,\r\n                    y: this.plugin.panning.y,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseUp() {\r\n        this.draggingStartPoint = null;\r\n        this.draggingStartPanning = null;\r\n        const tc = this.temporaryConnection;\r\n        if (tc && this.hoveringOver) {\r\n            this.plugin.editor.addConnection(tc.from, tc.to!);\r\n        }\r\n        this.temporaryConnection = null;\r\n    }\r\n\r\n    mouseWheel(ev: WheelEvent) {\r\n        ev.preventDefault();\r\n        let scrollAmount = ev.deltaY;\r\n        if (ev.deltaMode === 1) {\r\n            scrollAmount *= 32; // Firefox fix, multiplier is trial & error\r\n        }\r\n        const newScale = this.plugin.scaling * (1 - scrollAmount / 3000);\r\n        const currentPoint = [\r\n            ev.offsetX / this.plugin.scaling - this.plugin.panning.x,\r\n            ev.offsetY / this.plugin.scaling - this.plugin.panning.y,\r\n        ];\r\n        const newPoint = [ev.offsetX / newScale - this.plugin.panning.x, ev.offsetY / newScale - this.plugin.panning.y];\r\n        const diff = [newPoint[0] - currentPoint[0], newPoint[1] - currentPoint[1]];\r\n        this.plugin.panning.x += diff[0];\r\n        this.plugin.panning.y += diff[1];\r\n        this.plugin.scaling = newScale;\r\n    }\r\n\r\n    keyDown(ev: KeyboardEvent) {\r\n        if (ev.key === \"Delete\" && this.selectedNodes.length > 0) {\r\n            this.selectedNodes.forEach((n) => this.plugin.editor.removeNode(n));\r\n        } else if (ev.key === \"Tab\") {\r\n            ev.preventDefault();\r\n        } else if (ev.key === \"Control\") {\r\n            this.ctrlPressed = true;\r\n        } else if (ev.key === \"z\" && ev.ctrlKey) {\r\n            this.history.undo();\r\n        } else if (ev.key === \"y\" && ev.ctrlKey) {\r\n            this.history.redo();\r\n        }\r\n    }\r\n\r\n    keyUp(ev: KeyboardEvent) {\r\n        if (ev.key === \"Control\") {\r\n            this.ctrlPressed = false;\r\n        }\r\n    }\r\n\r\n    selectNode(node: IViewNode, nodeView: NodeView) {\r\n        if (!this.ctrlPressed) {\r\n            this.unselectAllNodes();\r\n        }\r\n\r\n        this.selectedNodes.push(node);\r\n        this.selectedNodeViews.push(nodeView);\r\n    }\r\n\r\n    unselectAllNodes() {\r\n        this.selectedNodes.splice(0, this.selectedNodes.length);\r\n        this.selectedNodeViews.splice(0, this.selectedNodeViews.length);\r\n    }\r\n\r\n    openContextMenu(event: MouseEvent) {\r\n        this.contextMenu.show = true;\r\n        this.contextMenu.x = event.offsetX;\r\n        this.contextMenu.y = event.offsetY;\r\n    }\r\n\r\n    onContextMenuClick(action: string) {\r\n        if (action.startsWith(\"addNode:\")) {\r\n            const nodeName = action.substring(action.indexOf(\":\") + 1);\r\n            const nt = this.plugin.editor.nodeTypes.get(nodeName);\r\n            if (nt) {\r\n                const node = this.plugin.editor.addNode(new nt()) as IViewNode;\r\n                if (node) {\r\n                    node.position.x = this.contextMenu.x / this.plugin.scaling - this.plugin.panning.x;\r\n                    node.position.y = this.contextMenu.y / this.plugin.scaling - this.plugin.panning.y;\r\n                }\r\n            }\r\n        } else if (action === \"copy\" && this.selectedNodes.length > 0) {\r\n            this.clipboard.copy(this.selectedNodes);\r\n        } else if (action === \"paste\" && !this.clipboard.isEmpty) {\r\n            this.clipboard.paste();\r\n        }\r\n    }\r\n}\r\n","import { render } from \"./Editor.vue?vue&type=template&id=0106ea4a\"\nimport script from \"./Editor.vue?vue&type=script&lang=ts\"\nexport * from \"./Editor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <path :d=\"d\" :class=\"classes\"></path>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Prop, Inject } from \"vue-property-decorator\";\r\nimport { TemporaryConnectionState, ITransferConnection, ITemporaryConnection } from \"../../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\n\r\nexport default class Connection extends Vue {\r\n\r\n    @Prop({ type: Number })\r\n    x1!: number;\r\n    @Prop({ type: Number })\r\n    y1!: number;\r\n\r\n    @Prop({ type: Number })\r\n    x2!: number;\r\n    @Prop({ type: Number })\r\n    y2!: number;\r\n\r\n    @Prop({ type: Number, default: TemporaryConnectionState.NONE })\r\n    state!: TemporaryConnectionState;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    isTemporary!: boolean;\r\n\r\n    @Prop({ type: Object })\r\n    connection!: ITransferConnection|ITemporaryConnection;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    mounted() {\r\n        this.plugin.hooks.renderConnection.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderConnection.execute(this);\r\n    }\r\n\r\n    get d() {\r\n        const [tx1, ty1] = this.transform(this.x1, this.y1);\r\n        const [tx2, ty2] = this.transform(this.x2, this.y2);\r\n        if (this.plugin.useStraightConnections) {\r\n            return `M ${tx1} ${ty1} L ${tx2} ${ty2}`;\r\n        } else {\r\n            const dx = 0.3 * Math.abs(tx1 - tx2);\r\n            return `M ${tx1} ${ty1} C ${tx1 + dx} ${ty1}, ${tx2 - dx} ${ty2}, ${tx2} ${ty2}`;\r\n        }\r\n    }\r\n\r\n    get classes() {\r\n        return {\r\n            \"connection\": true,\r\n            \"--temporary\": this.isTemporary,\r\n            \"--allowed\": this.state === TemporaryConnectionState.ALLOWED,\r\n            \"--forbidden\": this.state === TemporaryConnectionState.FORBIDDEN\r\n        };\r\n    }\r\n\r\n    transform(x: number, y: number) {\r\n        const tx = (x + this.plugin.panning.x) * this.plugin.scaling;\r\n        const ty = (y + this.plugin.panning.y) * this.plugin.scaling;\r\n        return [tx, ty];\r\n    }\r\n\r\n}\r\n</script>\r\n","\r\nimport { Vue, Prop, Inject } from \"vue-property-decorator\";\r\nimport { TemporaryConnectionState, ITransferConnection, ITemporaryConnection } from \"../../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\n\r\nexport default class Connection extends Vue {\r\n\r\n    @Prop({ type: Number })\r\n    x1!: number;\r\n    @Prop({ type: Number })\r\n    y1!: number;\r\n\r\n    @Prop({ type: Number })\r\n    x2!: number;\r\n    @Prop({ type: Number })\r\n    y2!: number;\r\n\r\n    @Prop({ type: Number, default: TemporaryConnectionState.NONE })\r\n    state!: TemporaryConnectionState;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    isTemporary!: boolean;\r\n\r\n    @Prop({ type: Object })\r\n    connection!: ITransferConnection|ITemporaryConnection;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    mounted() {\r\n        this.plugin.hooks.renderConnection.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderConnection.execute(this);\r\n    }\r\n\r\n    get d() {\r\n        const [tx1, ty1] = this.transform(this.x1, this.y1);\r\n        const [tx2, ty2] = this.transform(this.x2, this.y2);\r\n        if (this.plugin.useStraightConnections) {\r\n            return `M ${tx1} ${ty1} L ${tx2} ${ty2}`;\r\n        } else {\r\n            const dx = 0.3 * Math.abs(tx1 - tx2);\r\n            return `M ${tx1} ${ty1} C ${tx1 + dx} ${ty1}, ${tx2 - dx} ${ty2}, ${tx2} ${ty2}`;\r\n        }\r\n    }\r\n\r\n    get classes() {\r\n        return {\r\n            \"connection\": true,\r\n            \"--temporary\": this.isTemporary,\r\n            \"--allowed\": this.state === TemporaryConnectionState.ALLOWED,\r\n            \"--forbidden\": this.state === TemporaryConnectionState.FORBIDDEN\r\n        };\r\n    }\r\n\r\n    transform(x: number, y: number) {\r\n        const tx = (x + this.plugin.panning.x) * this.plugin.scaling;\r\n        const ty = (y + this.plugin.panning.y) * this.plugin.scaling;\r\n        return [tx, ty];\r\n    }\r\n\r\n}\r\n","import { render } from \"./ConnectionView.vue?vue&type=template&id=3807d418\"\nimport script from \"./ConnectionView.vue?vue&type=script&lang=ts\"\nexport * from \"./ConnectionView.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <connection-view :x1=\"d.x1\" :y1=\"d.y1\" :x2=\"d.x2\" :y2=\"d.y2\" :state=\"state\" :connection=\"connection\"></connection-view>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue, Watch } from \"vue-property-decorator\";\r\nimport { ResizeObserver as ResizeObserverPolyfill } from \"@juggle/resize-observer\";\r\nimport ConnectionView from \"./ConnectionView.vue\";\r\nimport resolveDom, { IResolvedDomElements } from \"./domResolver\";\r\nimport { ITransferConnection, TemporaryConnectionState } from \"../../../../baklavajs-core/types\";\r\n\r\nconst ResizeObserver = (window as any).ResizeObserver || ResizeObserverPolyfill;\r\n\r\n@Options({\r\n    components: {\r\n        \"connection-view\": ConnectionView\r\n    }\r\n})\r\nexport default class ConnectionWrapper extends Vue {\r\n\r\n    @Prop({ type: Object })\r\n    connection!: ITransferConnection;\r\n\r\n    d = { x1: 0, y1: 0, x2: 0, y2: 0 };\r\n\r\n    private resizeObserver!: ResizeObserverPolyfill;\r\n\r\n    get state() {\r\n        return this.connection.isInDanger ?\r\n            TemporaryConnectionState.FORBIDDEN :\r\n            TemporaryConnectionState.NONE;\r\n    }\r\n\r\n    async mounted() {\r\n        await this.$nextTick();\r\n        this.updateCoords();\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.resizeObserver.disconnect();\r\n    }\r\n\r\n    @Watch(\"connection.from.parent.position\", { deep: true })\r\n    @Watch(\"connection.to.parent.position\", { deep: true })\r\n    updateCoords() {\r\n        const from = resolveDom(this.connection.from);\r\n        const to = resolveDom(this.connection.to);\r\n        if (from.node && to.node) {\r\n            if (!this.resizeObserver) {\r\n                this.resizeObserver = new ResizeObserver(() => { this.updateCoords(); });\r\n                this.resizeObserver.observe(from.node);\r\n                this.resizeObserver.observe(to.node);\r\n            }\r\n        }\r\n        const [x1, y1] = this.getPortCoordinates(from);\r\n        const [x2, y2] = this.getPortCoordinates(to);\r\n        this.d = { x1, y1, x2, y2 };\r\n    }\r\n\r\n    private getPortCoordinates(resolved: IResolvedDomElements): [number, number] {\r\n        if (resolved.node && resolved.interface && resolved.port) {\r\n            return [\r\n                resolved.node.offsetLeft + resolved.interface.offsetLeft + resolved.port.offsetLeft + resolved.port.clientWidth / 2,\r\n                resolved.node.offsetTop + resolved.interface.offsetTop + resolved.port.offsetTop + resolved.port.clientHeight / 2\r\n            ];\r\n        } else {\r\n            return [0, 0];\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n","import { INode, INodeInterface } from \"../../../../baklavajs-core/types\";\r\n\r\nexport interface IResolvedDomElements {\r\n    node: HTMLElement|null;\r\n    interface: HTMLElement|null;\r\n    port: HTMLElement|null;\r\n}\r\n\r\nexport function getDomElementOfNode(node: INode): HTMLElement|null {\r\n    return document.getElementById(node.id);\r\n}\r\n\r\nexport default function getDomElements(ni: INodeInterface): IResolvedDomElements {\r\n\r\n    const nodeDOM = document.getElementById(ni.parent.id);\r\n    const interfaceDOM = document.getElementById(ni.id);\r\n    const portDOM = interfaceDOM?.getElementsByClassName(\"__port\");\r\n\r\n    return {\r\n        node: nodeDOM,\r\n        interface: interfaceDOM,\r\n        port: (portDOM && portDOM.length > 0) ? portDOM[0] as HTMLElement : null\r\n    };\r\n\r\n}\r\n","\r\nimport { Options, Prop, Vue, Watch } from \"vue-property-decorator\";\r\nimport { ResizeObserver as ResizeObserverPolyfill } from \"@juggle/resize-observer\";\r\nimport ConnectionView from \"./ConnectionView.vue\";\r\nimport resolveDom, { IResolvedDomElements } from \"./domResolver\";\r\nimport { ITransferConnection, TemporaryConnectionState } from \"../../../../baklavajs-core/types\";\r\n\r\nconst ResizeObserver = (window as any).ResizeObserver || ResizeObserverPolyfill;\r\n\r\n@Options({\r\n    components: {\r\n        \"connection-view\": ConnectionView\r\n    }\r\n})\r\nexport default class ConnectionWrapper extends Vue {\r\n\r\n    @Prop({ type: Object })\r\n    connection!: ITransferConnection;\r\n\r\n    d = { x1: 0, y1: 0, x2: 0, y2: 0 };\r\n\r\n    private resizeObserver!: ResizeObserverPolyfill;\r\n\r\n    get state() {\r\n        return this.connection.isInDanger ?\r\n            TemporaryConnectionState.FORBIDDEN :\r\n            TemporaryConnectionState.NONE;\r\n    }\r\n\r\n    async mounted() {\r\n        await this.$nextTick();\r\n        this.updateCoords();\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.resizeObserver.disconnect();\r\n    }\r\n\r\n    @Watch(\"connection.from.parent.position\", { deep: true })\r\n    @Watch(\"connection.to.parent.position\", { deep: true })\r\n    updateCoords() {\r\n        const from = resolveDom(this.connection.from);\r\n        const to = resolveDom(this.connection.to);\r\n        if (from.node && to.node) {\r\n            if (!this.resizeObserver) {\r\n                this.resizeObserver = new ResizeObserver(() => { this.updateCoords(); });\r\n                this.resizeObserver.observe(from.node);\r\n                this.resizeObserver.observe(to.node);\r\n            }\r\n        }\r\n        const [x1, y1] = this.getPortCoordinates(from);\r\n        const [x2, y2] = this.getPortCoordinates(to);\r\n        this.d = { x1, y1, x2, y2 };\r\n    }\r\n\r\n    private getPortCoordinates(resolved: IResolvedDomElements): [number, number] {\r\n        if (resolved.node && resolved.interface && resolved.port) {\r\n            return [\r\n                resolved.node.offsetLeft + resolved.interface.offsetLeft + resolved.port.offsetLeft + resolved.port.clientWidth / 2,\r\n                resolved.node.offsetTop + resolved.interface.offsetTop + resolved.port.offsetTop + resolved.port.clientHeight / 2\r\n            ];\r\n        } else {\r\n            return [0, 0];\r\n        }\r\n    }\r\n\r\n}\r\n","import { render } from \"./ConnectionWrapper.vue?vue&type=template&id=a2efe6c6\"\nimport script from \"./ConnectionWrapper.vue?vue&type=script&lang=ts\"\nexport * from \"./ConnectionWrapper.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <connection-view\r\n        :x1=\"d.input[0]\" :y1=\"d.input[1]\"\r\n        :x2=\"d.output[0]\" :y2=\"d.output[1]\"\r\n        :state=\"status\"\r\n        :connection=\"connection\"\r\n        is-temporary\r\n    ></connection-view>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\nimport ConnectionView from \"./ConnectionView.vue\";\r\nimport { ITemporaryConnection, TemporaryConnectionState } from \"../../../../baklavajs-core/types\";\r\nimport resolveDom from \"./domResolver\";\r\nimport { getPortCoordinates } from \"./portCoordinates\";\r\n\r\n@Options({\r\n    components: {\r\n        \"connection-view\": ConnectionView\r\n    }\r\n})\r\nexport default class TemporaryConnection extends Vue {\r\n\r\n    @Prop({ type: Object })\r\n    connection!: ITemporaryConnection;\r\n\r\n    get status() {\r\n        return this.connection ? this.connection.status : TemporaryConnectionState.NONE;\r\n    }\r\n\r\n    get d() {\r\n        if (!this.connection) {\r\n            return {\r\n                input: [0, 0],\r\n                output: [0, 0]\r\n            };\r\n        }\r\n\r\n        const start = getPortCoordinates(resolveDom(this.connection.from));\r\n        const end = this.connection.to ?\r\n                getPortCoordinates(resolveDom(this.connection.to)) :\r\n                [this.connection.mx || start[0], this.connection.my || start[1] ];\r\n\r\n        if (this.connection.from.isInput) {\r\n            return {\r\n                input: end,\r\n                output: start\r\n            };\r\n        } else {\r\n            return {\r\n                input: start,\r\n                output: end\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n}\r\n</script>\r\n","import { IResolvedDomElements } from \"./domResolver\";\r\n\r\nexport function getPortCoordinates(resolved: IResolvedDomElements): [number, number] {\r\n    if (resolved.node && resolved.interface && resolved.port) {\r\n        return [\r\n            resolved.node.offsetLeft + resolved.interface.offsetLeft + resolved.port.offsetLeft + resolved.port.clientWidth / 2,\r\n            resolved.node.offsetTop + resolved.interface.offsetTop + resolved.port.offsetTop + resolved.port.clientHeight / 2\r\n        ];\r\n    } else {\r\n        return [0, 0];\r\n    }\r\n}\r\n","\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\nimport ConnectionView from \"./ConnectionView.vue\";\r\nimport { ITemporaryConnection, TemporaryConnectionState } from \"../../../../baklavajs-core/types\";\r\nimport resolveDom from \"./domResolver\";\r\nimport { getPortCoordinates } from \"./portCoordinates\";\r\n\r\n@Options({\r\n    components: {\r\n        \"connection-view\": ConnectionView\r\n    }\r\n})\r\nexport default class TemporaryConnection extends Vue {\r\n\r\n    @Prop({ type: Object })\r\n    connection!: ITemporaryConnection;\r\n\r\n    get status() {\r\n        return this.connection ? this.connection.status : TemporaryConnectionState.NONE;\r\n    }\r\n\r\n    get d() {\r\n        if (!this.connection) {\r\n            return {\r\n                input: [0, 0],\r\n                output: [0, 0]\r\n            };\r\n        }\r\n\r\n        const start = getPortCoordinates(resolveDom(this.connection.from));\r\n        const end = this.connection.to ?\r\n                getPortCoordinates(resolveDom(this.connection.to)) :\r\n                [this.connection.mx || start[0], this.connection.my || start[1] ];\r\n\r\n        if (this.connection.from.isInput) {\r\n            return {\r\n                input: end,\r\n                output: start\r\n            };\r\n        } else {\r\n            return {\r\n                input: start,\r\n                output: end\r\n            };\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { render } from \"./TemporaryConnection.vue?vue&type=template&id=19af0964\"\nimport script from \"./TemporaryConnection.vue?vue&type=script&lang=ts\"\nexport * from \"./TemporaryConnection.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div :id=\"node.id\" :class=\"classes\" :style=\"styles\">\r\n        <div class=\"__title\" @mousedown.self.stop=\"startDrag\" @contextmenu.self.prevent=\"openContextMenu\">\r\n            <span v-if=\"!renaming\">{{ node.name }}</span>\r\n            <input\r\n                v-else\r\n                type=\"text\"\r\n                class=\"dark-input\"\r\n                v-model=\"tempName\"\r\n                placeholder=\"Node Name\"\r\n                v-click-outside=\"doneRenaming\"\r\n                @keydown.enter=\"doneRenaming\"\r\n            />\r\n\r\n            <component\r\n                :is=\"plugin.components.contextMenu\"\r\n                v-model=\"contextMenu.show\"\r\n                :x=\"contextMenu.x\"\r\n                :y=\"contextMenu.y\"\r\n                :items=\"contextMenu.items\"\r\n                @click=\"onContextMenu\"\r\n            ></component>\r\n        </div>\r\n\r\n        <div class=\"__content\">\r\n            <!-- Outputs -->\r\n            <div class=\"__outputs\">\r\n                <component\r\n                    :is=\"plugin.components.nodeInterface\"\r\n                    v-for=\"(output, name) in node.outputInterfaces\"\r\n                    :key=\"output.id\"\r\n                    :name=\"name\"\r\n                    :intf=\"output\"\r\n                ></component>\r\n            </div>\r\n\r\n            <!-- Options -->\r\n            <div class=\"__options\">\r\n                <template v-for=\"[name, option] in node.options\" :key=\"name\">\r\n                    <component\r\n                        :is=\"plugin.components.nodeOption\"\r\n                        :name=\"name\"\r\n                        :option=\"option\"\r\n                        :componentName=\"option.optionComponent\"\r\n                        :node=\"node\"\r\n                        @openSidebar=\"openSidebar(name)\"\r\n                    ></component>\r\n\r\n                    <teleport\r\n                        :key=\"'sb_' + name\"\r\n                        to=\"#sidebar\"\r\n                        v-if=\"\r\n                            plugin.sidebar.nodeId === node.id &&\r\n                            plugin.sidebar.optionName === name &&\r\n                            option.sidebarComponent\r\n                        \"\r\n                    >\r\n                        <component\r\n                            :is=\"plugin.components.nodeOption\"\r\n                            :key=\"node.id + name\"\r\n                            :name=\"name\"\r\n                            :option=\"option\"\r\n                            :componentName=\"option.sidebarComponent\"\r\n                            :node=\"node\"\r\n                        ></component>\r\n                    </teleport>\r\n                </template>\r\n            </div>\r\n\r\n            <!-- Inputs -->\r\n            <div class=\"__inputs\">\r\n                <component\r\n                    :is=\"plugin.components.nodeInterface\"\r\n                    v-for=\"(input, name) in node.inputInterfaces\"\r\n                    :key=\"input.id\"\r\n                    :name=\"name\"\r\n                    :intf=\"input\"\r\n                ></component>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, Prop, Inject } from \"vue-property-decorator\";\r\n\r\n// @ts-ignore\r\nimport ClickOutside from \"v-click-outside\";\r\n\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\nimport { IViewNode } from \"../../../types\";\r\nimport { sanitizeName } from \"../../utility/cssNames\";\r\n\r\ninterface IPosition {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\n@Options({\r\n    directives: {\r\n        ClickOutside: ClickOutside.directive,\r\n    },\r\n})\r\nexport default class NodeView extends Vue {\r\n    @Prop({ type: Object })\r\n    node!: IViewNode;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    selected!: boolean;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    @Inject()\r\n    selectedNodeViews!: NodeView[];\r\n\r\n    draggingStartPosition: IPosition | null = null;\r\n    draggingStartPoint: IPosition | null = null;\r\n    renaming = false;\r\n    tempName = \"\";\r\n\r\n    contextMenu = {\r\n        show: false,\r\n        x: 0,\r\n        y: 0,\r\n        items: [\r\n            { value: \"rename\", label: \"Rename\" },\r\n            { value: \"delete\", label: \"Delete\" },\r\n        ],\r\n    };\r\n\r\n    get classes() {\r\n        return {\r\n            \"node\": true,\r\n            \"--selected\": this.selected,\r\n            \"--dragging\": !!this.draggingStartPoint,\r\n            \"--two-column\": !!this.node.twoColumn,\r\n            [`--type-${sanitizeName(this.node.type)}`]: true,\r\n            [this.node.customClasses]: true,\r\n        };\r\n    }\r\n\r\n    get styles() {\r\n        return {\r\n            top: `${this.node.position.y}px`,\r\n            left: `${this.node.position.x}px`,\r\n            width: `${this.node.width}px`,\r\n        };\r\n    }\r\n\r\n    mounted() {\r\n        this.node.events.addInterface.addListener(this, () => this.update());\r\n        this.node.events.removeInterface.addListener(this, () => this.update());\r\n        this.node.events.addOption.addListener(this, () => this.update());\r\n        this.node.events.removeOption.addListener(this, () => this.update());\r\n        this.plugin.hooks.renderNode.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderNode.execute(this);\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.node.events.addInterface.removeListener(this);\r\n        this.node.events.removeInterface.removeListener(this);\r\n        this.node.events.addOption.removeListener(this);\r\n        this.node.events.removeOption.removeListener(this);\r\n    }\r\n\r\n    update() {\r\n        this.$forceUpdate();\r\n    }\r\n\r\n    startDrag(ev: MouseEvent) {\r\n        this.select();\r\n\r\n        if (this.selectedNodeViews.length === 0 || this.selectedNodeViews[0] === undefined) {\r\n            this.selectedNodeViews.splice(0, this.selectedNodeViews.length);\r\n            this.selectedNodeViews.push(this);\r\n        }\r\n\r\n        this.selectedNodeViews.forEach((elem: any) => {\r\n            elem.draggingStartPoint = {\r\n                  x: ev.screenX,\r\n                  y: ev.screenY,\r\n            };\r\n            elem.draggingStartPosition = {\r\n                  x: elem.node.position.x,\r\n                  y: elem.node.position.y,\r\n            };\r\n            document.addEventListener(\"mousemove\", elem.handleMove);\r\n            document.addEventListener(\"mouseup\", elem.stopDrag);\r\n        });\r\n    }\r\n\r\n    select() {\r\n        this.$emit(\"select\", this);\r\n    }\r\n\r\n    stopDrag() {\r\n        this.selectedNodeViews.forEach((elem: any) => {\r\n            elem.draggingStartPoint = null;\r\n            elem.draggingStartPosition = null;\r\n            document.removeEventListener(\"mousemove\", elem.handleMove);\r\n            document.removeEventListener(\"mouseup\", elem.stopDrag);\r\n        });\r\n    }\r\n\r\n    handleMove(ev: MouseEvent) {\r\n        this.selectedNodeViews.forEach((elem: any) => {\r\n            if (elem.draggingStartPoint) {\r\n                const dx = ev.screenX - elem.draggingStartPoint.x;\r\n                const dy = ev.screenY - elem.draggingStartPoint.y;\r\n                elem.node.position.x = elem.draggingStartPosition.x + dx / elem.plugin.scaling;\r\n                elem.node.position.y = elem.draggingStartPosition.y + dy / elem.plugin.scaling;\r\n            }\r\n        });\r\n    }\r\n\r\n    openContextMenu(ev: MouseEvent) {\r\n        this.contextMenu.show = true;\r\n        this.contextMenu.x = ev.offsetX;\r\n        this.contextMenu.y = ev.offsetY;\r\n    }\r\n\r\n    onContextMenu(action: string) {\r\n        switch (action) {\r\n            case \"delete\":\r\n                this.plugin.editor.removeNode(this.node);\r\n                break;\r\n            case \"rename\":\r\n                this.tempName = this.node.name;\r\n                this.renaming = true;\r\n        }\r\n    }\r\n\r\n    doneRenaming() {\r\n        this.node.name = this.tempName;\r\n        this.renaming = false;\r\n    }\r\n\r\n    openSidebar(optionName: string) {\r\n        this.plugin.sidebar.nodeId = this.node.id;\r\n        this.plugin.sidebar.optionName = optionName;\r\n        this.plugin.sidebar.visible = true;\r\n    }\r\n}\r\n</script>\r\n","export function sanitizeName(name: string) {\r\n    return name.replace(\" \", \"-\");\r\n}\r\n","\r\nimport { Options, Vue, Prop, Inject } from \"vue-property-decorator\";\r\n\r\n// @ts-ignore\r\nimport ClickOutside from \"v-click-outside\";\r\n\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\nimport { IViewNode } from \"../../../types\";\r\nimport { sanitizeName } from \"../../utility/cssNames\";\r\n\r\ninterface IPosition {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\n@Options({\r\n    directives: {\r\n        ClickOutside: ClickOutside.directive,\r\n    },\r\n})\r\nexport default class NodeView extends Vue {\r\n    @Prop({ type: Object })\r\n    node!: IViewNode;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    selected!: boolean;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    @Inject()\r\n    selectedNodeViews!: NodeView[];\r\n\r\n    draggingStartPosition: IPosition | null = null;\r\n    draggingStartPoint: IPosition | null = null;\r\n    renaming = false;\r\n    tempName = \"\";\r\n\r\n    contextMenu = {\r\n        show: false,\r\n        x: 0,\r\n        y: 0,\r\n        items: [\r\n            { value: \"rename\", label: \"Rename\" },\r\n            { value: \"delete\", label: \"Delete\" },\r\n        ],\r\n    };\r\n\r\n    get classes() {\r\n        return {\r\n            \"node\": true,\r\n            \"--selected\": this.selected,\r\n            \"--dragging\": !!this.draggingStartPoint,\r\n            \"--two-column\": !!this.node.twoColumn,\r\n            [`--type-${sanitizeName(this.node.type)}`]: true,\r\n            [this.node.customClasses]: true,\r\n        };\r\n    }\r\n\r\n    get styles() {\r\n        return {\r\n            top: `${this.node.position.y}px`,\r\n            left: `${this.node.position.x}px`,\r\n            width: `${this.node.width}px`,\r\n        };\r\n    }\r\n\r\n    mounted() {\r\n        this.node.events.addInterface.addListener(this, () => this.update());\r\n        this.node.events.removeInterface.addListener(this, () => this.update());\r\n        this.node.events.addOption.addListener(this, () => this.update());\r\n        this.node.events.removeOption.addListener(this, () => this.update());\r\n        this.plugin.hooks.renderNode.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderNode.execute(this);\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.node.events.addInterface.removeListener(this);\r\n        this.node.events.removeInterface.removeListener(this);\r\n        this.node.events.addOption.removeListener(this);\r\n        this.node.events.removeOption.removeListener(this);\r\n    }\r\n\r\n    update() {\r\n        this.$forceUpdate();\r\n    }\r\n\r\n    startDrag(ev: MouseEvent) {\r\n        this.select();\r\n\r\n        if (this.selectedNodeViews.length === 0 || this.selectedNodeViews[0] === undefined) {\r\n            this.selectedNodeViews.splice(0, this.selectedNodeViews.length);\r\n            this.selectedNodeViews.push(this);\r\n        }\r\n\r\n        this.selectedNodeViews.forEach((elem: any) => {\r\n            elem.draggingStartPoint = {\r\n                  x: ev.screenX,\r\n                  y: ev.screenY,\r\n            };\r\n            elem.draggingStartPosition = {\r\n                  x: elem.node.position.x,\r\n                  y: elem.node.position.y,\r\n            };\r\n            document.addEventListener(\"mousemove\", elem.handleMove);\r\n            document.addEventListener(\"mouseup\", elem.stopDrag);\r\n        });\r\n    }\r\n\r\n    select() {\r\n        this.$emit(\"select\", this);\r\n    }\r\n\r\n    stopDrag() {\r\n        this.selectedNodeViews.forEach((elem: any) => {\r\n            elem.draggingStartPoint = null;\r\n            elem.draggingStartPosition = null;\r\n            document.removeEventListener(\"mousemove\", elem.handleMove);\r\n            document.removeEventListener(\"mouseup\", elem.stopDrag);\r\n        });\r\n    }\r\n\r\n    handleMove(ev: MouseEvent) {\r\n        this.selectedNodeViews.forEach((elem: any) => {\r\n            if (elem.draggingStartPoint) {\r\n                const dx = ev.screenX - elem.draggingStartPoint.x;\r\n                const dy = ev.screenY - elem.draggingStartPoint.y;\r\n                elem.node.position.x = elem.draggingStartPosition.x + dx / elem.plugin.scaling;\r\n                elem.node.position.y = elem.draggingStartPosition.y + dy / elem.plugin.scaling;\r\n            }\r\n        });\r\n    }\r\n\r\n    openContextMenu(ev: MouseEvent) {\r\n        this.contextMenu.show = true;\r\n        this.contextMenu.x = ev.offsetX;\r\n        this.contextMenu.y = ev.offsetY;\r\n    }\r\n\r\n    onContextMenu(action: string) {\r\n        switch (action) {\r\n            case \"delete\":\r\n                this.plugin.editor.removeNode(this.node);\r\n                break;\r\n            case \"rename\":\r\n                this.tempName = this.node.name;\r\n                this.renaming = true;\r\n        }\r\n    }\r\n\r\n    doneRenaming() {\r\n        this.node.name = this.tempName;\r\n        this.renaming = false;\r\n    }\r\n\r\n    openSidebar(optionName: string) {\r\n        this.plugin.sidebar.nodeId = this.node.id;\r\n        this.plugin.sidebar.optionName = optionName;\r\n        this.plugin.sidebar.visible = true;\r\n    }\r\n}\r\n","import { render } from \"./Node.vue?vue&type=template&id=47bc94c6\"\nimport script from \"./Node.vue?vue&type=script&lang=ts\"\nexport * from \"./Node.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div :id=\"intf.id\" :class=\"classes\">\r\n        <div class=\"__port\" @mouseover=\"startHover\" @mouseout=\"endHover\"></div>\r\n        <span v-if=\"intf.connectionCount > 0 || !intf.option || !getOptionComponent(intf.option)\" class=\"align-middle\">\r\n            {{ displayName }}\r\n        </span>\r\n        <component\r\n            v-else\r\n            :is=\"getOptionComponent(intf.option)\"\r\n            :option=\"intf\"\r\n            :value=\"value\"\r\n            @input=\"intf.value = $event\"\r\n            :name=\"displayName\"\r\n        ></component>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Prop, Inject } from \"vue-property-decorator\";\r\nimport EditorView from \"../Editor.vue\";\r\nimport { INodeInterface } from \"../../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\n\r\nexport default class NodeInterfaceView extends Vue {\r\n\r\n    @Prop({ type: Object, default: () => ({}) })\r\n    intf!: INodeInterface;\r\n\r\n    @Prop({ type: String, default: \"\" })\r\n    name!: string;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    @Inject()\r\n    editor!: EditorView;\r\n\r\n    value: any = null;\r\n    isConnected = false;\r\n\r\n    get classes() {\r\n        return {\r\n            \"node-interface\": true,\r\n            \"--input\": this.intf.isInput,\r\n            \"--output\": !this.intf.isInput,\r\n            \"--connected\": this.isConnected\r\n        };\r\n    }\r\n\r\n    get displayName() {\r\n        return this.intf.displayName || this.name;\r\n    }\r\n\r\n    beforeMount() {\r\n        this.value = this.intf.value;\r\n        this.intf.events.setValue.addListener(this, (v) => { this.value = v; });\r\n        this.intf.events.setConnectionCount.addListener(this, (c) => {\r\n            this.$forceUpdate();\r\n            this.isConnected = c > 0;\r\n        });\r\n        this.intf.events.updated.addListener(this, (v) => { this.$forceUpdate(); });\r\n        this.isConnected = this.intf.connectionCount > 0;\r\n    }\r\n\r\n    mounted() {\r\n        this.plugin.hooks.renderInterface.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderInterface.execute(this);\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.intf.events.setValue.removeListener(this);\r\n        this.intf.events.setConnectionCount.removeListener(this);\r\n        this.intf.events.updated.removeListener(this);\r\n    }\r\n\r\n    startHover() {\r\n        this.editor.hoveredOver(this.intf);\r\n    }\r\n    endHover() {\r\n        this.editor.hoveredOver(undefined);\r\n    }\r\n\r\n    getOptionComponent(name: string) {\r\n        if (!name || !this.plugin.options) { return; }\r\n        return this.plugin.options[name];\r\n    }\r\n\r\n}\r\n</script>\r\n","\r\nimport { Vue, Prop, Inject } from \"vue-property-decorator\";\r\nimport EditorView from \"../Editor.vue\";\r\nimport { INodeInterface } from \"../../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\n\r\nexport default class NodeInterfaceView extends Vue {\r\n\r\n    @Prop({ type: Object, default: () => ({}) })\r\n    intf!: INodeInterface;\r\n\r\n    @Prop({ type: String, default: \"\" })\r\n    name!: string;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    @Inject()\r\n    editor!: EditorView;\r\n\r\n    value: any = null;\r\n    isConnected = false;\r\n\r\n    get classes() {\r\n        return {\r\n            \"node-interface\": true,\r\n            \"--input\": this.intf.isInput,\r\n            \"--output\": !this.intf.isInput,\r\n            \"--connected\": this.isConnected\r\n        };\r\n    }\r\n\r\n    get displayName() {\r\n        return this.intf.displayName || this.name;\r\n    }\r\n\r\n    beforeMount() {\r\n        this.value = this.intf.value;\r\n        this.intf.events.setValue.addListener(this, (v) => { this.value = v; });\r\n        this.intf.events.setConnectionCount.addListener(this, (c) => {\r\n            this.$forceUpdate();\r\n            this.isConnected = c > 0;\r\n        });\r\n        this.intf.events.updated.addListener(this, (v) => { this.$forceUpdate(); });\r\n        this.isConnected = this.intf.connectionCount > 0;\r\n    }\r\n\r\n    mounted() {\r\n        this.plugin.hooks.renderInterface.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderInterface.execute(this);\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.intf.events.setValue.removeListener(this);\r\n        this.intf.events.setConnectionCount.removeListener(this);\r\n        this.intf.events.updated.removeListener(this);\r\n    }\r\n\r\n    startHover() {\r\n        this.editor.hoveredOver(this.intf);\r\n    }\r\n    endHover() {\r\n        this.editor.hoveredOver(undefined);\r\n    }\r\n\r\n    getOptionComponent(name: string) {\r\n        if (!name || !this.plugin.options) { return; }\r\n        return this.plugin.options[name];\r\n    }\r\n\r\n}\r\n","import { render } from \"./NodeInterface.vue?vue&type=template&id=0622a3aa\"\nimport script from \"./NodeInterface.vue?vue&type=script&lang=ts\"\nexport * from \"./NodeInterface.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <component\r\n        :is=\"component\"\r\n        :name=\"displayName\"\r\n        class=\"node-option\"\r\n        :node=\"node\"\r\n        :value=\"value\"\r\n        :option=\"option\"\r\n        @input=\"updateValue\"\r\n        @openSidebar=\"$emit('openSidebar')\"\r\n    ></component>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Prop, Vue, Inject } from \"vue-property-decorator\";\r\nimport { INodeOption, INode } from \"../../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\n\r\nexport default class NodeOptionView extends Vue {\r\n\r\n    @Prop()\r\n    name!: string;\r\n\r\n    @Prop()\r\n    option!: INodeOption;\r\n\r\n    @Prop()\r\n    componentName!: string;\r\n\r\n    @Prop()\r\n    node!: INode;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    value: any = null;\r\n\r\n    get component() {\r\n        if (!this.plugin.options || !this.componentName) { return; }\r\n        return this.plugin.options[this.componentName];\r\n    }\r\n\r\n    get displayName() {\r\n        return this.option.displayName || this.name;\r\n    }\r\n\r\n    beforeMount() {\r\n        this.value = this.option.value;\r\n        this.option.events.setValue.addListener(this, (v) => { this.value = v; });\r\n    }\r\n\r\n    mounted() {\r\n        this.plugin.hooks.renderOption.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderOption.execute(this);\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.option.events.setValue.removeListener(this);\r\n    }\r\n\r\n    updateValue(v: any) {\r\n        this.option.value = v;\r\n    }\r\n\r\n}\r\n</script>\r\n","\r\nimport { Prop, Vue, Inject } from \"vue-property-decorator\";\r\nimport { INodeOption, INode } from \"../../../../baklavajs-core/types\";\r\nimport { ViewPlugin } from \"../../viewPlugin\";\r\n\r\nexport default class NodeOptionView extends Vue {\r\n\r\n    @Prop()\r\n    name!: string;\r\n\r\n    @Prop()\r\n    option!: INodeOption;\r\n\r\n    @Prop()\r\n    componentName!: string;\r\n\r\n    @Prop()\r\n    node!: INode;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    value: any = null;\r\n\r\n    get component() {\r\n        if (!this.plugin.options || !this.componentName) { return; }\r\n        return this.plugin.options[this.componentName];\r\n    }\r\n\r\n    get displayName() {\r\n        return this.option.displayName || this.name;\r\n    }\r\n\r\n    beforeMount() {\r\n        this.value = this.option.value;\r\n        this.option.events.setValue.addListener(this, (v) => { this.value = v; });\r\n    }\r\n\r\n    mounted() {\r\n        this.plugin.hooks.renderOption.execute(this);\r\n    }\r\n\r\n    updated() {\r\n        this.plugin.hooks.renderOption.execute(this);\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.option.events.setValue.removeListener(this);\r\n    }\r\n\r\n    updateValue(v: any) {\r\n        this.option.value = v;\r\n    }\r\n\r\n}\r\n","import { render } from \"./NodeOption.vue?vue&type=template&id=18afa253\"\nimport script from \"./NodeOption.vue?vue&type=script&lang=ts\"\nexport * from \"./NodeOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div :class=\"classes\" :style=\"styles\" v-show=\"modelValue\" v-click-outside=\"onClickOutside\">\r\n        <template v-for=\"(item, index) in _items\">\r\n            <div v-if=\"item.isDivider\" :key=\"`divider-${index}`\" class=\"divider\"></div>\r\n\r\n            <div\r\n                v-else\r\n                :key=\"`item-${index}`\"\r\n                :class=\"{ 'item': true, 'submenu': !!item.submenu, '--disabled': !!item.disabled }\"\r\n                @mouseenter=\"onMouseEnter($event, index)\"\r\n                @mouseleave=\"onMouseLeave($event, index)\"\r\n                @click.stop.prevent=\"onClick(item)\"\r\n                class=\"d-flex align-items-center\"\r\n            >\r\n                <div class=\"flex-fill\">{{ item.label }}</div>\r\n                <div v-if=\"item.submenu\" class=\"ml-3\" style=\"line-height: 1em\">\r\n                    <svg width=\"13\" height=\"13\" viewBox=\"-60 120 250 250\">\r\n                        <path\r\n                            d=\"M160.875 279.5625 L70.875 369.5625 L70.875 189.5625 L160.875 279.5625 Z\"\r\n                            stroke=\"none\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                </div>\r\n                <context-menu\r\n                    v-if=\"item.submenu\"\r\n                    :model-value=\"activeMenu === index\"\r\n                    :items=\"item.submenu\"\r\n                    :is-nested=\"true\"\r\n                    :is-flipped=\"{ x: flippedX, y: flippedY }\"\r\n                    :flippable=\"flippable\"\r\n                    @click=\"onChildClick\"\r\n                ></context-menu>\r\n            </div>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue, Watch } from \"vue-property-decorator\";\r\n\r\n// @ts-ignore\r\nimport ClickOutside from \"v-click-outside\";\r\n\r\nexport interface IMenuItem {\r\n    label?: string;\r\n    value?: any;\r\n    isDivider?: boolean;\r\n    submenu?: IMenuItem[];\r\n    disabled?: boolean;\r\n    disabledFunction?: () => boolean;\r\n}\r\n\r\n@Options({\r\n    directives: {\r\n        ClickOutside: ClickOutside.directive,\r\n    },\r\n    emits: [\"update:modelValue\", \"click\"]\r\n})\r\nexport default class ContextMenu extends Vue {\r\n    activeMenu = -1;\r\n    activeMenuResetTimeout: number | null = null;\r\n\r\n    height = 0;\r\n    rootIsFlipped = { x: false, y: false };\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    modelValue!: boolean;\r\n\r\n    @Prop({ type: Array, default: () => [] })\r\n    items!: IMenuItem[];\r\n\r\n    @Prop({ type: Number, default: 0 })\r\n    x!: number;\r\n\r\n    @Prop({ type: Number, default: 0 })\r\n    y!: number;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    isNested!: boolean;\r\n\r\n    @Prop({ type: Object, default: () => ({ x: false, y: false }) })\r\n    isFlipped!: { x: boolean; y: boolean };\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    flippable!: boolean;\r\n\r\n    get styles() {\r\n        const s: any = {};\r\n        if (!this.isNested) {\r\n            s.top = (this.flippedY ? this.y - this.height : this.y) + \"px\";\r\n            s.left = this.x + \"px\";\r\n        }\r\n        return s;\r\n    }\r\n\r\n    get classes() {\r\n        return {\r\n            \"dark-context-menu\": true,\r\n            \"--flipped-x\": this.flippedX,\r\n            \"--flipped-y\": this.flippedY,\r\n            \"--nested\": this.isNested,\r\n        };\r\n    }\r\n\r\n    get _items() {\r\n        return this.items.map((i) => ({ ...i, hover: false }));\r\n    }\r\n\r\n    get flippedX() {\r\n        return this.flippable && (this.rootIsFlipped.x || this.isFlipped.x);\r\n    }\r\n\r\n    get flippedY() {\r\n        return this.flippable && (this.rootIsFlipped.y || this.isFlipped.y);\r\n    }\r\n\r\n    onClick(item: IMenuItem) {\r\n        if (!item.submenu && item.value) {\r\n            this.$emit(\"click\", item.value);\r\n            this.$emit(\"update:modelValue\", false);\r\n        }\r\n    }\r\n\r\n    onChildClick(value: string) {\r\n        this.$emit(\"click\", value);\r\n        this.activeMenu = -1;\r\n        if (!this.isNested) {\r\n            this.$emit(\"update:modelValue\", false);\r\n        }\r\n    }\r\n\r\n    onClickOutside(event: MouseEvent) {\r\n        if (this.modelValue) {\r\n            this.$emit(\"update:modelValue\", false);\r\n        }\r\n    }\r\n\r\n    onMouseEnter(event: MouseEvent, index: number) {\r\n        if (this.items[index].submenu) {\r\n            this.activeMenu = index;\r\n\r\n            if (this.activeMenuResetTimeout !== null) {\r\n                clearTimeout(this.activeMenuResetTimeout);\r\n                this.activeMenuResetTimeout = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseLeave(event: MouseEvent, index: number) {\r\n        if (this.items[index].submenu) {\r\n            this.activeMenuResetTimeout = window.setTimeout(() => {\r\n                this.activeMenu = -1;\r\n                this.activeMenuResetTimeout = null;\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    created() {\r\n        if (this.$options.components) {\r\n            this.$options.components[\"context-menu\"] = ContextMenu;\r\n        } else {\r\n            this.$options.components = { \"context-menu\": ContextMenu };\r\n        }\r\n    }\r\n\r\n    @Watch(\"y\")\r\n    @Watch(\"items\")\r\n    updateFlipped() {\r\n        this.height = this.items.length * 30;\r\n        const parentWidth = (this.$parent!.$el as HTMLElement).offsetWidth;\r\n        const parentHeight = (this.$parent!.$el as HTMLElement).offsetHeight;\r\n        this.rootIsFlipped.x = !this.isNested && this.x > parentWidth * 0.75;\r\n        this.rootIsFlipped.y = !this.isNested && this.y + this.height > parentHeight - 20;\r\n    }\r\n\r\n    @Watch(\"modelValue\", { immediate: true })\r\n    updateDisabledValues() {\r\n        if (this.modelValue) {\r\n            this.items.forEach((item) => {\r\n                if (item.disabledFunction) {\r\n                    item.disabled = item.disabledFunction();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n","\r\nimport { Options, Prop, Vue, Watch } from \"vue-property-decorator\";\r\n\r\n// @ts-ignore\r\nimport ClickOutside from \"v-click-outside\";\r\n\r\nexport interface IMenuItem {\r\n    label?: string;\r\n    value?: any;\r\n    isDivider?: boolean;\r\n    submenu?: IMenuItem[];\r\n    disabled?: boolean;\r\n    disabledFunction?: () => boolean;\r\n}\r\n\r\n@Options({\r\n    directives: {\r\n        ClickOutside: ClickOutside.directive,\r\n    },\r\n    emits: [\"update:modelValue\", \"click\"]\r\n})\r\nexport default class ContextMenu extends Vue {\r\n    activeMenu = -1;\r\n    activeMenuResetTimeout: number | null = null;\r\n\r\n    height = 0;\r\n    rootIsFlipped = { x: false, y: false };\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    modelValue!: boolean;\r\n\r\n    @Prop({ type: Array, default: () => [] })\r\n    items!: IMenuItem[];\r\n\r\n    @Prop({ type: Number, default: 0 })\r\n    x!: number;\r\n\r\n    @Prop({ type: Number, default: 0 })\r\n    y!: number;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    isNested!: boolean;\r\n\r\n    @Prop({ type: Object, default: () => ({ x: false, y: false }) })\r\n    isFlipped!: { x: boolean; y: boolean };\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    flippable!: boolean;\r\n\r\n    get styles() {\r\n        const s: any = {};\r\n        if (!this.isNested) {\r\n            s.top = (this.flippedY ? this.y - this.height : this.y) + \"px\";\r\n            s.left = this.x + \"px\";\r\n        }\r\n        return s;\r\n    }\r\n\r\n    get classes() {\r\n        return {\r\n            \"dark-context-menu\": true,\r\n            \"--flipped-x\": this.flippedX,\r\n            \"--flipped-y\": this.flippedY,\r\n            \"--nested\": this.isNested,\r\n        };\r\n    }\r\n\r\n    get _items() {\r\n        return this.items.map((i) => ({ ...i, hover: false }));\r\n    }\r\n\r\n    get flippedX() {\r\n        return this.flippable && (this.rootIsFlipped.x || this.isFlipped.x);\r\n    }\r\n\r\n    get flippedY() {\r\n        return this.flippable && (this.rootIsFlipped.y || this.isFlipped.y);\r\n    }\r\n\r\n    onClick(item: IMenuItem) {\r\n        if (!item.submenu && item.value) {\r\n            this.$emit(\"click\", item.value);\r\n            this.$emit(\"update:modelValue\", false);\r\n        }\r\n    }\r\n\r\n    onChildClick(value: string) {\r\n        this.$emit(\"click\", value);\r\n        this.activeMenu = -1;\r\n        if (!this.isNested) {\r\n            this.$emit(\"update:modelValue\", false);\r\n        }\r\n    }\r\n\r\n    onClickOutside(event: MouseEvent) {\r\n        if (this.modelValue) {\r\n            this.$emit(\"update:modelValue\", false);\r\n        }\r\n    }\r\n\r\n    onMouseEnter(event: MouseEvent, index: number) {\r\n        if (this.items[index].submenu) {\r\n            this.activeMenu = index;\r\n\r\n            if (this.activeMenuResetTimeout !== null) {\r\n                clearTimeout(this.activeMenuResetTimeout);\r\n                this.activeMenuResetTimeout = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onMouseLeave(event: MouseEvent, index: number) {\r\n        if (this.items[index].submenu) {\r\n            this.activeMenuResetTimeout = window.setTimeout(() => {\r\n                this.activeMenu = -1;\r\n                this.activeMenuResetTimeout = null;\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    created() {\r\n        if (this.$options.components) {\r\n            this.$options.components[\"context-menu\"] = ContextMenu;\r\n        } else {\r\n            this.$options.components = { \"context-menu\": ContextMenu };\r\n        }\r\n    }\r\n\r\n    @Watch(\"y\")\r\n    @Watch(\"items\")\r\n    updateFlipped() {\r\n        this.height = this.items.length * 30;\r\n        const parentWidth = (this.$parent!.$el as HTMLElement).offsetWidth;\r\n        const parentHeight = (this.$parent!.$el as HTMLElement).offsetHeight;\r\n        this.rootIsFlipped.x = !this.isNested && this.x > parentWidth * 0.75;\r\n        this.rootIsFlipped.y = !this.isNested && this.y + this.height > parentHeight - 20;\r\n    }\r\n\r\n    @Watch(\"modelValue\", { immediate: true })\r\n    updateDisabledValues() {\r\n        if (this.modelValue) {\r\n            this.items.forEach((item) => {\r\n                if (item.disabledFunction) {\r\n                    item.disabled = item.disabledFunction();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { render } from \"./ContextMenu.vue?vue&type=template&id=6e0ad894\"\nimport script from \"./ContextMenu.vue?vue&type=script&lang=ts\"\nexport * from \"./ContextMenu.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div id=\"sidebar\" :class=\"['sidebar', { '--open': plugin.sidebar.visible }]\" :style=\"styles\">\r\n        \r\n        <div class=\"__resizer\" @mousedown=\"startResize\"></div>\r\n\r\n        <div class=\"d-flex align-items-center\">\r\n            <button tabindex=\"-1\" class=\"__close\" @click=\"close\">&times;</button>\r\n            <div class=\"ml-2\"><b>{{ nodeName }}</b></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Inject } from \"vue-property-decorator\";\r\nimport { ViewPlugin } from \"../viewPlugin\";\r\n\r\nexport default class Sidebar extends Vue {\r\n\r\n    width = 300;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    get nodeName() {\r\n        const id = this.plugin.sidebar.nodeId;\r\n        const n = this.plugin.editor.nodes.find((x) => x.id === id);\r\n        return n ? n.name : \"\";\r\n    }\r\n\r\n    get styles() {\r\n        return {\r\n            width: this.width + \"px\"\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.plugin.sidebar.visible = false;\r\n    }\r\n\r\n    startResize() {\r\n        window.addEventListener(\"mousemove\", this.onMouseMove);\r\n        window.addEventListener(\"mouseup\", () => {\r\n            window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        }, { once: true });\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent) {\r\n        const maxwidth = this.$parent!.$el.getBoundingClientRect().width;\r\n        this.width -= event.movementX;\r\n        if (this.width < 300) {\r\n            this.width = 300;\r\n        } else if (this.width > 0.9 * maxwidth) {\r\n            this.width = 0.9 * maxwidth;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n","\r\nimport { Vue, Inject } from \"vue-property-decorator\";\r\nimport { ViewPlugin } from \"../viewPlugin\";\r\n\r\nexport default class Sidebar extends Vue {\r\n\r\n    width = 300;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    get nodeName() {\r\n        const id = this.plugin.sidebar.nodeId;\r\n        const n = this.plugin.editor.nodes.find((x) => x.id === id);\r\n        return n ? n.name : \"\";\r\n    }\r\n\r\n    get styles() {\r\n        return {\r\n            width: this.width + \"px\"\r\n        };\r\n    }\r\n\r\n    close() {\r\n        this.plugin.sidebar.visible = false;\r\n    }\r\n\r\n    startResize() {\r\n        window.addEventListener(\"mousemove\", this.onMouseMove);\r\n        window.addEventListener(\"mouseup\", () => {\r\n            window.removeEventListener(\"mousemove\", this.onMouseMove);\r\n        }, { once: true });\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent) {\r\n        const maxwidth = this.$parent!.$el.getBoundingClientRect().width;\r\n        this.width -= event.movementX;\r\n        if (this.width < 300) {\r\n            this.width = 300;\r\n        } else if (this.width > 0.9 * maxwidth) {\r\n            this.width = 0.9 * maxwidth;\r\n        }\r\n    }\r\n\r\n}\r\n","import { render } from \"./Sidebar.vue?vue&type=template&id=1c27424f\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=ts\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <canvas\r\n        ref=\"cv\"\r\n        class=\"minimap\"\r\n        @mouseenter=\"showViewBounds = true\"\r\n        @mouseleave=\"() => { this.showViewBounds = false; this.mouseup() }\"\r\n        @mousedown.self=\"mousedown\"\r\n        @mousemove.self=\"mousemove\"\r\n        @mouseup=\"mouseup\"\r\n    ></canvas>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Prop, Vue, Inject, Watch } from \"vue-property-decorator\";\r\nimport { IConnection } from \"../../../baklavajs-core/types\";\r\nimport { IViewNode } from \"../../types\";\r\nimport getDomElements, { getDomElementOfNode } from \"./connection/domResolver\";\r\nimport { getPortCoordinates } from \"./connection/portCoordinates\";\r\nimport { ViewPlugin } from \"../viewPlugin\";\r\n\r\ninterface IRect {\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n}\r\n\r\nexport default class Minimap extends Vue {\r\n\r\n    ctx?: CanvasRenderingContext2D;\r\n    intervalHandle = 0;\r\n    showViewBounds = false;\r\n    dragging = false;\r\n    bounds: IRect = { x1: 0, y1: 0, x2: 0, y2: 0 };\r\n\r\n    @Prop()\r\n    nodes!: IViewNode[];\r\n\r\n    @Prop()\r\n    connections!: IConnection[];\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    mounted() {\r\n        const canvas = (this.$refs.cv as HTMLCanvasElement);\r\n        this.ctx = canvas.getContext(\"2d\") ?? undefined;\r\n        if (this.ctx) { this.ctx.imageSmoothingQuality = \"high\"; }\r\n        this.intervalHandle = setInterval(() => this.updateCanvas(), 250) as unknown as number;\r\n    }\r\n\r\n    beforeDestroy() {\r\n        clearInterval(this.intervalHandle);\r\n    }\r\n\r\n    @Watch(\"showViewBounds\")\r\n    @Watch(\"plugin.panning.x\")\r\n    @Watch(\"plugin.panning.y\")\r\n    @Watch(\"plugin.scaling\")\r\n    updateCanvas() {\r\n        if (!this.ctx) { return; }\r\n\r\n        const nodeCoords = new Map<IViewNode, IRect>();\r\n        const nodeDomElements = new Map<IViewNode, HTMLElement|null>();\r\n        for (const n of this.nodes) {\r\n            const domElement = getDomElementOfNode(n);\r\n            const width = domElement?.clientWidth ?? 0;\r\n            const height = domElement?.clientHeight ?? 0;\r\n            nodeCoords.set(n, { x1: n.position.x, y1: n.position.y, x2: n.position.x + width, y2: n.position.y + height });\r\n            nodeDomElements.set(n, domElement);\r\n        }\r\n\r\n        // get bound rectangle\r\n        const bounds: IRect = {\r\n            x1: Number.MAX_SAFE_INTEGER, y1: Number.MAX_SAFE_INTEGER,\r\n            x2: Number.MIN_SAFE_INTEGER, y2: Number.MIN_SAFE_INTEGER\r\n        };\r\n        for (const nc of nodeCoords.values()) {\r\n            if (nc.x1 < bounds.x1) {\r\n                bounds.x1 = nc.x1;\r\n            }\r\n            if (nc.y1 < bounds.y1) {\r\n                bounds.y1 = nc.y1;\r\n            }\r\n            if (nc.x2 > bounds.x2) {\r\n                bounds.x2 = nc.x2;\r\n            }\r\n            if (nc.y2 > bounds.y2) {\r\n                bounds.y2 = nc.y2;\r\n            }\r\n        }\r\n\r\n        // add some padding\r\n        const padding = 50;\r\n        bounds.x1 -= padding;\r\n        bounds.y1 -= padding;\r\n        bounds.x2 += padding;\r\n        bounds.y2 += padding;\r\n        this.bounds = bounds;\r\n\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n        // draw connections\r\n        this.ctx.strokeStyle = \"white\";\r\n        for (const c of this.connections) {\r\n            const toDom = getDomElements(c.to);\r\n            const [origX1, origY1] = getPortCoordinates(getDomElements(c.from));\r\n            const [origX2, origY2] = getPortCoordinates(getDomElements(c.to));\r\n            const [x1, y1] = this.transformCoordinates(origX1, origY1);\r\n            const [x2, y2] = this.transformCoordinates(origX2, origY2);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(x1, y1);\r\n            if (this.plugin.useStraightConnections) {\r\n                this.ctx.lineTo(x2, y2);\r\n            } else {\r\n                const dx = 0.3 * Math.abs(x1 - x2);\r\n                this.ctx.bezierCurveTo(x1 + dx, y1, x2 - dx, y2, x2, y2);\r\n            }\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        // draw nodes\r\n        this.ctx.strokeStyle = \"lightgray\";\r\n        for (const [n, nc] of nodeCoords.entries()) {\r\n            const [x1, y1] = this.transformCoordinates(nc.x1, nc.y1);\r\n            const [x2, y2] = this.transformCoordinates(nc.x2, nc.y2);\r\n            this.ctx.fillStyle = this.getNodeColor(nodeDomElements.get(n));\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(x1, y1, x2 - x1, y2 - y1);\r\n            this.ctx.fill();\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        if (this.showViewBounds) {\r\n            const viewBounds = this.getViewBounds();\r\n            const [x1, y1] = this.transformCoordinates(viewBounds.x1, viewBounds.y1);\r\n            const [x2, y2] = this.transformCoordinates(viewBounds.x2, viewBounds.y2);\r\n            this.ctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\r\n            this.ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\r\n        }\r\n\r\n    }\r\n\r\n    /** Transforms coordinates from editor space to minimap space */\r\n    transformCoordinates(origX: number, origY: number): [number, number] {\r\n        return [\r\n            ((origX - this.bounds.x1) / (this.bounds.x2 - this.bounds.x1)) * this.ctx!.canvas.clientWidth,\r\n            ((origY - this.bounds.y1) / (this.bounds.y2 - this.bounds.y1)) * this.ctx!.canvas.clientHeight\r\n        ];\r\n    }\r\n\r\n    /** Transforms coordinates from minimap space to editor space */\r\n    reverseTransform(thisX: number, thisY: number): [number, number] {\r\n        return [\r\n            (thisX * (this.bounds.x2 - this.bounds.x1)) / this.ctx!.canvas.clientWidth + this.bounds.x1,\r\n            (thisY * (this.bounds.y2 - this.bounds.y1)) / this.ctx!.canvas.clientHeight + this.bounds.y1,\r\n        ];\r\n    }\r\n\r\n    getNodeColor(domElement?: HTMLElement|null) {\r\n        if (domElement) {\r\n            const content = domElement.querySelector(\".__content\");\r\n            if (content) {\r\n                const contentColor = this.getComputedColor(content);\r\n                if (contentColor) { return contentColor; }\r\n            }\r\n            const nodeColor = this.getComputedColor(domElement);\r\n            if (nodeColor) { return nodeColor; }\r\n        }\r\n        return \"gray\";\r\n    }\r\n\r\n    getComputedColor(domElement: Element): string|undefined {\r\n        const c = getComputedStyle(domElement).backgroundColor;\r\n        if (c && c !== \"rgba(0, 0, 0, 0)\") {\r\n            return c;\r\n        }\r\n    }\r\n\r\n    /** Returns view bounds in editor space */\r\n    getViewBounds(): IRect {\r\n        const parentWidth = (this.$parent!.$el as HTMLElement).offsetWidth;\r\n        const parentHeight = (this.$parent!.$el as HTMLElement).offsetHeight;\r\n        const x2 = (parentWidth / this.plugin.scaling) - this.plugin.panning.x;\r\n        const y2 = (parentHeight / this.plugin.scaling) - this.plugin.panning.y;\r\n        return { x1: -this.plugin.panning.x, y1: -this.plugin.panning.y, x2, y2 };\r\n    }\r\n\r\n    mousedown(ev: MouseEvent) {\r\n        if (ev.button === 0) {\r\n            this.dragging = true;\r\n            this.mousemove(ev);\r\n        }\r\n    }\r\n\r\n    mousemove(ev: MouseEvent) {\r\n        if (this.dragging) {\r\n            // still slightly off when zoomed\r\n            const [cx, cy] = this.reverseTransform(ev.offsetX, ev.offsetY);\r\n            const viewBounds = this.getViewBounds();\r\n            const dx = (viewBounds.x1 - viewBounds.x2) / 2;\r\n            const dy = (viewBounds.y1 - viewBounds.y2) / 2;\r\n            this.plugin.panning.x = -(cx + dx);\r\n            this.plugin.panning.y = -(cy + dy);\r\n        }\r\n    }\r\n\r\n    mouseup(ev: MouseEvent) {\r\n        this.dragging = false;\r\n    }\r\n\r\n}\r\n</script>\r\n","\r\nimport { Prop, Vue, Inject, Watch } from \"vue-property-decorator\";\r\nimport { IConnection } from \"../../../baklavajs-core/types\";\r\nimport { IViewNode } from \"../../types\";\r\nimport getDomElements, { getDomElementOfNode } from \"./connection/domResolver\";\r\nimport { getPortCoordinates } from \"./connection/portCoordinates\";\r\nimport { ViewPlugin } from \"../viewPlugin\";\r\n\r\ninterface IRect {\r\n    x1: number;\r\n    y1: number;\r\n    x2: number;\r\n    y2: number;\r\n}\r\n\r\nexport default class Minimap extends Vue {\r\n\r\n    ctx?: CanvasRenderingContext2D;\r\n    intervalHandle = 0;\r\n    showViewBounds = false;\r\n    dragging = false;\r\n    bounds: IRect = { x1: 0, y1: 0, x2: 0, y2: 0 };\r\n\r\n    @Prop()\r\n    nodes!: IViewNode[];\r\n\r\n    @Prop()\r\n    connections!: IConnection[];\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    mounted() {\r\n        const canvas = (this.$refs.cv as HTMLCanvasElement);\r\n        this.ctx = canvas.getContext(\"2d\") ?? undefined;\r\n        if (this.ctx) { this.ctx.imageSmoothingQuality = \"high\"; }\r\n        this.intervalHandle = setInterval(() => this.updateCanvas(), 250) as unknown as number;\r\n    }\r\n\r\n    beforeDestroy() {\r\n        clearInterval(this.intervalHandle);\r\n    }\r\n\r\n    @Watch(\"showViewBounds\")\r\n    @Watch(\"plugin.panning.x\")\r\n    @Watch(\"plugin.panning.y\")\r\n    @Watch(\"plugin.scaling\")\r\n    updateCanvas() {\r\n        if (!this.ctx) { return; }\r\n\r\n        const nodeCoords = new Map<IViewNode, IRect>();\r\n        const nodeDomElements = new Map<IViewNode, HTMLElement|null>();\r\n        for (const n of this.nodes) {\r\n            const domElement = getDomElementOfNode(n);\r\n            const width = domElement?.clientWidth ?? 0;\r\n            const height = domElement?.clientHeight ?? 0;\r\n            nodeCoords.set(n, { x1: n.position.x, y1: n.position.y, x2: n.position.x + width, y2: n.position.y + height });\r\n            nodeDomElements.set(n, domElement);\r\n        }\r\n\r\n        // get bound rectangle\r\n        const bounds: IRect = {\r\n            x1: Number.MAX_SAFE_INTEGER, y1: Number.MAX_SAFE_INTEGER,\r\n            x2: Number.MIN_SAFE_INTEGER, y2: Number.MIN_SAFE_INTEGER\r\n        };\r\n        for (const nc of nodeCoords.values()) {\r\n            if (nc.x1 < bounds.x1) {\r\n                bounds.x1 = nc.x1;\r\n            }\r\n            if (nc.y1 < bounds.y1) {\r\n                bounds.y1 = nc.y1;\r\n            }\r\n            if (nc.x2 > bounds.x2) {\r\n                bounds.x2 = nc.x2;\r\n            }\r\n            if (nc.y2 > bounds.y2) {\r\n                bounds.y2 = nc.y2;\r\n            }\r\n        }\r\n\r\n        // add some padding\r\n        const padding = 50;\r\n        bounds.x1 -= padding;\r\n        bounds.y1 -= padding;\r\n        bounds.x2 += padding;\r\n        bounds.y2 += padding;\r\n        this.bounds = bounds;\r\n\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n        // draw connections\r\n        this.ctx.strokeStyle = \"white\";\r\n        for (const c of this.connections) {\r\n            const toDom = getDomElements(c.to);\r\n            const [origX1, origY1] = getPortCoordinates(getDomElements(c.from));\r\n            const [origX2, origY2] = getPortCoordinates(getDomElements(c.to));\r\n            const [x1, y1] = this.transformCoordinates(origX1, origY1);\r\n            const [x2, y2] = this.transformCoordinates(origX2, origY2);\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(x1, y1);\r\n            if (this.plugin.useStraightConnections) {\r\n                this.ctx.lineTo(x2, y2);\r\n            } else {\r\n                const dx = 0.3 * Math.abs(x1 - x2);\r\n                this.ctx.bezierCurveTo(x1 + dx, y1, x2 - dx, y2, x2, y2);\r\n            }\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        // draw nodes\r\n        this.ctx.strokeStyle = \"lightgray\";\r\n        for (const [n, nc] of nodeCoords.entries()) {\r\n            const [x1, y1] = this.transformCoordinates(nc.x1, nc.y1);\r\n            const [x2, y2] = this.transformCoordinates(nc.x2, nc.y2);\r\n            this.ctx.fillStyle = this.getNodeColor(nodeDomElements.get(n));\r\n            this.ctx.beginPath();\r\n            this.ctx.rect(x1, y1, x2 - x1, y2 - y1);\r\n            this.ctx.fill();\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        if (this.showViewBounds) {\r\n            const viewBounds = this.getViewBounds();\r\n            const [x1, y1] = this.transformCoordinates(viewBounds.x1, viewBounds.y1);\r\n            const [x2, y2] = this.transformCoordinates(viewBounds.x2, viewBounds.y2);\r\n            this.ctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\r\n            this.ctx.fillRect(x1, y1, x2 - x1, y2 - y1);\r\n        }\r\n\r\n    }\r\n\r\n    /** Transforms coordinates from editor space to minimap space */\r\n    transformCoordinates(origX: number, origY: number): [number, number] {\r\n        return [\r\n            ((origX - this.bounds.x1) / (this.bounds.x2 - this.bounds.x1)) * this.ctx!.canvas.clientWidth,\r\n            ((origY - this.bounds.y1) / (this.bounds.y2 - this.bounds.y1)) * this.ctx!.canvas.clientHeight\r\n        ];\r\n    }\r\n\r\n    /** Transforms coordinates from minimap space to editor space */\r\n    reverseTransform(thisX: number, thisY: number): [number, number] {\r\n        return [\r\n            (thisX * (this.bounds.x2 - this.bounds.x1)) / this.ctx!.canvas.clientWidth + this.bounds.x1,\r\n            (thisY * (this.bounds.y2 - this.bounds.y1)) / this.ctx!.canvas.clientHeight + this.bounds.y1,\r\n        ];\r\n    }\r\n\r\n    getNodeColor(domElement?: HTMLElement|null) {\r\n        if (domElement) {\r\n            const content = domElement.querySelector(\".__content\");\r\n            if (content) {\r\n                const contentColor = this.getComputedColor(content);\r\n                if (contentColor) { return contentColor; }\r\n            }\r\n            const nodeColor = this.getComputedColor(domElement);\r\n            if (nodeColor) { return nodeColor; }\r\n        }\r\n        return \"gray\";\r\n    }\r\n\r\n    getComputedColor(domElement: Element): string|undefined {\r\n        const c = getComputedStyle(domElement).backgroundColor;\r\n        if (c && c !== \"rgba(0, 0, 0, 0)\") {\r\n            return c;\r\n        }\r\n    }\r\n\r\n    /** Returns view bounds in editor space */\r\n    getViewBounds(): IRect {\r\n        const parentWidth = (this.$parent!.$el as HTMLElement).offsetWidth;\r\n        const parentHeight = (this.$parent!.$el as HTMLElement).offsetHeight;\r\n        const x2 = (parentWidth / this.plugin.scaling) - this.plugin.panning.x;\r\n        const y2 = (parentHeight / this.plugin.scaling) - this.plugin.panning.y;\r\n        return { x1: -this.plugin.panning.x, y1: -this.plugin.panning.y, x2, y2 };\r\n    }\r\n\r\n    mousedown(ev: MouseEvent) {\r\n        if (ev.button === 0) {\r\n            this.dragging = true;\r\n            this.mousemove(ev);\r\n        }\r\n    }\r\n\r\n    mousemove(ev: MouseEvent) {\r\n        if (this.dragging) {\r\n            // still slightly off when zoomed\r\n            const [cx, cy] = this.reverseTransform(ev.offsetX, ev.offsetY);\r\n            const viewBounds = this.getViewBounds();\r\n            const dx = (viewBounds.x1 - viewBounds.x2) / 2;\r\n            const dy = (viewBounds.y1 - viewBounds.y2) / 2;\r\n            this.plugin.panning.x = -(cx + dx);\r\n            this.plugin.panning.y = -(cy + dy);\r\n        }\r\n    }\r\n\r\n    mouseup(ev: MouseEvent) {\r\n        this.dragging = false;\r\n    }\r\n\r\n}\r\n","import { render } from \"./Minimap.vue?vue&type=template&id=2ce4af6d\"\nimport script from \"./Minimap.vue?vue&type=script&lang=ts\"\nexport * from \"./Minimap.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { App } from \"vue\";\r\nimport Editor from \"./components/Editor.vue\";\r\n\r\nconst Baklava = {\r\n    install(app: App): void {\r\n        app.component(\"baklava-editor\", Editor);\r\n    }\r\n};\r\n\r\nexport const BaklavaVuePlugin = Baklava;\r\n","import { ComponentOptions, markRaw } from \"vue\";\r\nimport { IPlugin, IEditor } from \"../../baklavajs-core/types\";\r\nimport { SequentialHook } from \"@baklavajs/events\";\r\nimport { IViewNode, IViewPlugin } from \"../types\";\r\n\r\nimport NodeView from \"./components/node/Node.vue\";\r\nimport NodeOptionView from \"./components/node/NodeOption.vue\";\r\nimport NodeInterfaceView from \"./components/node/NodeInterface.vue\";\r\nimport ConnectionWrapper from \"./components/connection/ConnectionWrapper.vue\";\r\nimport TempConnectionView from \"./components/connection/TemporaryConnection.vue\";\r\nimport ContextMenu from \"./components/ContextMenu.vue\";\r\nimport Sidebar from \"./components/Sidebar.vue\";\r\nimport Minimap from \"./components/Minimap.vue\";\r\n\r\nexport class ViewPlugin implements IPlugin, IViewPlugin {\r\n    public type = \"ViewPlugin\";\r\n    public editor!: IEditor;\r\n    public panning = { x: 0, y: 0 };\r\n    public scaling = 1;\r\n    public sidebar = { visible: false, nodeId: \"\", optionName: \"\" };\r\n\r\n    /** Use straight connections instead of bezier curves */\r\n    public useStraightConnections = false;\r\n\r\n    /** Show a minimap */\r\n    public enableMinimap = false;\r\n\r\n    /** Background configuration */\r\n    backgroundGrid = {\r\n        gridSize: 100,\r\n        gridDivision: 5,\r\n        subGridVisibleThreshold: 0.6\r\n    };\r\n\r\n    public options: Record<string, ComponentOptions> = {};\r\n    public nodeTypeAliases: Record<string, string> = {};\r\n\r\n    public hooks = {\r\n        /** Called whenever a node is rendered */\r\n        renderNode: new SequentialHook<any>(),\r\n        /** Called whenever an option is rendered */\r\n        renderOption: new SequentialHook<any>(),\r\n        /** Called whenever an interface is rendered */\r\n        renderInterface: new SequentialHook<any>(),\r\n        /** Called whenever a connection is rendered */\r\n        renderConnection: new SequentialHook<any>()\r\n    };\r\n\r\n    /** Use this property to provide custom components,\r\n     * which will be used when rendering the respective entities\r\n     */\r\n    public components: Record<string, any> = {\r\n        node: markRaw(NodeView),\r\n        nodeOption: markRaw(NodeOptionView),\r\n        nodeInterface: markRaw(NodeInterfaceView),\r\n        connection: markRaw(ConnectionWrapper),\r\n        tempConnection: markRaw(TempConnectionView),\r\n        contextMenu: markRaw(ContextMenu),\r\n        sidebar: markRaw(Sidebar),\r\n        minimap: markRaw(Minimap)\r\n    };\r\n\r\n    public register(editor: IEditor): void {\r\n        this.editor = editor;\r\n        this.editor.hooks.load.tap(this, (d) => {\r\n            this.panning = d.panning;\r\n            this.scaling = d.scaling;\r\n            return d;\r\n        });\r\n        this.editor.hooks.save.tap(this, (d) => {\r\n            d.panning = this.panning;\r\n            d.scaling = this.scaling;\r\n            return d;\r\n        });\r\n        this.editor.events.beforeAddNode.addListener(this, (node) => {\r\n            const n = node as IViewNode;\r\n            n.position = { x: 0, y: 0 };\r\n            n.disablePointerEvents = false;\r\n            n.twoColumn = n.twoColumn || false;\r\n            n.width = n.width || 200;\r\n            n.customClasses = n.customClasses || \"\";\r\n            node.hooks.save.tap(this, (state) => {\r\n                state.position = n.position;\r\n                state.width = n.width;\r\n                state.twoColumn = n.twoColumn;\r\n                state.customClasses = n.customClasses;\r\n                return state;\r\n            });\r\n            node.hooks.load.tap(this, (state) => {\r\n                // default values for savefiles from older versions\r\n                n.position = state.position || { x: 0, y: 0 };\r\n                n.width = state.width || 200;\r\n                n.twoColumn = state.twoColumn || false;\r\n                return state;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Register a node option\r\n     * @param name Name of the node option as used when defining nodes\r\n     * @param component Component that will be rendered for the option\r\n     */\r\n    public registerOption(name: string, component: ComponentOptions) {\r\n        this.options[name] = markRaw(component);\r\n    }\r\n\r\n    /**\r\n     * Add an alias for a node type that is displayed in the \"Add Node\" context menu instead of\r\n     * the raw node type name\r\n     * @param nodeType Node type\r\n     * @param alias Alias that will be displayed in the context menu. When this value is `null`, an existing alias is removed\r\n     */\r\n    public setNodeTypeAlias(nodeType: string, alias: string | null) {\r\n        if (alias) {\r\n            this.nodeTypeAliases[nodeType] = alias;\r\n        } else if (this.nodeTypeAliases[nodeType]) {\r\n            delete this.nodeTypeAliases[nodeType];\r\n        }\r\n    }\r\n}\r\n","export { default as Editor } from \"./components/Editor.vue\";\r\n\r\nimport Connection from \"./components/connection/ConnectionView.vue\";\r\nimport ConnectionWrapper from \"./components/connection/ConnectionWrapper.vue\";\r\nimport TemporaryConnection from \"./components/connection/TemporaryConnection.vue\";\r\nimport Node from \"./components/node/Node.vue\";\r\nimport NodeInterface from \"./components/node/NodeInterface.vue\";\r\nimport NodeOption from \"./components/node/NodeOption.vue\";\r\nimport ContextMenu from \"./components/ContextMenu.vue\";\r\nimport Sidebar from \"./components/Sidebar.vue\";\r\nimport Minimap from \"./components/Minimap.vue\";\r\n\r\nexport const Components = {\r\n    Connection, ConnectionWrapper, TemporaryConnection,\r\n    Node, NodeInterface, NodeOption,\r\n    ContextMenu, Sidebar, Minimap\r\n};\r\n\r\nexport * from \"./baklavaVuePlugin\";\r\nexport * from \"./viewPlugin\";\r\n","import { INode, IConnection } from \"../../baklavajs-core/types\";\r\n\r\ninterface ITreeNode {\r\n    n?: INode;\r\n    children: ITreeNode[];\r\n}\r\n\r\ninterface IOrderCalculationResult {\r\n    calculationOrder: INode[];\r\n    rootNodes: INode[];\r\n}\r\n\r\nconst isEmpty = (obj: any) =>\r\n    [Object, Array].includes((obj || {}).constructor) && !Object.entries((obj || {})).length;\r\n\r\nexport function calculateOrder(nodes: ReadonlyArray<INode>, connections: ReadonlyArray<IConnection>, roots?: INode[]):\r\n    IOrderCalculationResult {\r\n\r\n    const adjacency = new Map<INode, INode[]>();\r\n\r\n    // build adjacency list\r\n    nodes.forEach((n) => {\r\n        adjacency.set(n,\r\n            connections\r\n                .filter((c) => c.to && c.to.parent === n)\r\n                .map((c) => c.from.parent)\r\n        );\r\n    });\r\n\r\n    // DFS for initial tree building and cycle detection\r\n    const outputs: INode[] = roots || nodes.filter((n) => isEmpty(n.outputInterfaces));\r\n    const root: ITreeNode = {\r\n        children: outputs.map((o) => ({ n: o, children: [] }))\r\n    };\r\n\r\n    findDescendants(root, [], adjacency);\r\n\r\n    // BFS with stack to find calculation order\r\n    const queue: ITreeNode[] = [];\r\n    const stack: INode[] = [];\r\n    queue.push(root);\r\n\r\n    while (queue.length > 0) {\r\n        const current = queue.shift()!;\r\n        current.children.forEach((c) => {\r\n            stack.push(c.n!);\r\n            queue.push(c);\r\n        });\r\n    }\r\n\r\n    // Pop stack to reverse the order\r\n    const calculationOrder: INode[] = [];\r\n    while (stack.length > 0) {\r\n        const n = stack.pop()!;\r\n        if (!calculationOrder.includes(n)) {\r\n            calculationOrder.push(n);\r\n        }\r\n    }\r\n    return { calculationOrder, rootNodes: outputs };\r\n\r\n}\r\n\r\nfunction findDescendants(tn: ITreeNode, ancestors: INode[], adjacency: Map<INode, INode[]>) {\r\n    for (const c of tn.children) {\r\n\r\n        if (ancestors.includes(c.n!)) {\r\n            throw new Error(\"Cycle detected\");\r\n        }\r\n\r\n        ancestors.unshift(c.n!);\r\n        c.children = c.children.concat(adjacency.get(c.n!)!\r\n            .map((n) => ({ n, children: new Array<ITreeNode>() }))\r\n        );\r\n        findDescendants(c, ancestors, adjacency);\r\n        ancestors.shift();\r\n\r\n    }\r\n}\r\n\r\nexport function containsCycle(nodes: ReadonlyArray<INode>, connections: ReadonlyArray<IConnection>): boolean {\r\n    try {\r\n        calculateOrder(nodes, connections);\r\n        return true;\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import { BaklavaEvent, PreventableBaklavaEvent, SequentialHook } from \"@baklavajs/events\";\r\nimport { Mutex } from \"async-mutex\";\r\nimport { IEditor, INode, IPlugin, INodeInterface, IConnection } from \"../../baklavajs-core/types\";\r\nimport { IInterfaceTypePlugin } from \"../../baklavajs-plugin-interface-types/types\";\r\nimport { calculateOrder, containsCycle } from \"./nodeTreeBuilder\";\r\n\r\nexport class Engine implements IPlugin {\r\n    public type = \"EnginePlugin\";\r\n\r\n    public get rootNodes() {\r\n        return this._rootNodes;\r\n    }\r\n\r\n    public set rootNodes(value: INode[] | undefined) {\r\n        this._rootNodes = value;\r\n        this.recalculateOrder = true;\r\n    }\r\n\r\n    public events = {\r\n        /** This event will be called before all the nodes `calculate` functions are called.\r\n         * The argument is the calculationData that the nodes will receive\r\n         */\r\n        beforeCalculate: new PreventableBaklavaEvent<any>(),\r\n        calculated: new BaklavaEvent<Map<INode, any>>()\r\n    };\r\n\r\n    public hooks = {\r\n        gatherCalculationData: new SequentialHook<any>()\r\n    };\r\n\r\n    private editor!: IEditor;\r\n    private nodeCalculationOrder: INode[] = [];\r\n    private actualRootNodes: INode[] = [];\r\n    private connectionsPerNode = new Map<INode, IConnection[]>();\r\n    private recalculateOrder = false;\r\n    private calculateOnChange = false;\r\n    private calculationInProgress = false;\r\n    private mutex = new Mutex();\r\n    private _rootNodes: INode[] | undefined = undefined;\r\n    private interfaceTypePlugins: IInterfaceTypePlugin[] = [];\r\n\r\n    /**\r\n     * Construct a new Engine plugin\r\n     * @param calculateOnChange Whether to automatically calculate all nodes when any node interface or node option is changed.\r\n     */\r\n    public constructor(calculateOnChange = false) {\r\n        this.calculateOnChange = calculateOnChange;\r\n    }\r\n\r\n    public register(editor: IEditor) {\r\n        this.editor = editor;\r\n\r\n        // Search for previously registered interface type plugins\r\n        this.editor.plugins.forEach((p) => {\r\n            if (p.type === \"InterfaceTypePlugin\") {\r\n                this.interfaceTypePlugins.push(p as IInterfaceTypePlugin);\r\n            }\r\n        });\r\n        // Watch for newly registered interface type plugins\r\n        this.editor.events.usePlugin.addListener(this, (p) => {\r\n            if (p.type === \"InterfaceTypePlugin\") {\r\n                this.interfaceTypePlugins.push(p as IInterfaceTypePlugin);\r\n            }\r\n        });\r\n\r\n        this.editor.events.addNode.addListener(this, (node) => {\r\n            node.events.update.addListener(this, (ev) => {\r\n                if (ev.interface && ev.interface.connectionCount === 0) {\r\n                    this.onChange(false);\r\n                } else if (ev.option) {\r\n                    this.onChange(false);\r\n                }\r\n            });\r\n            this.onChange(true);\r\n        });\r\n\r\n        this.editor.events.removeNode.addListener(this, (node) => {\r\n            node.events.update.removeListener(this);\r\n        });\r\n\r\n        this.editor.events.checkConnection.addListener(this, (c) => {\r\n            if (!this.checkConnection(c.from, c.to)) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        this.editor.events.addConnection.addListener(this, (c) => {\r\n            // as only one connection to an input interface is allowed\r\n            // Delete all other connections to the target interface\r\n            this.editor.connections\r\n                .filter((conn) => conn.id !== c.id && conn.to === c.to)\r\n                .forEach((conn) => this.editor.removeConnection(conn));\r\n\r\n            this.onChange(true);\r\n        });\r\n\r\n        this.editor.events.removeConnection.addListener(this, () => {\r\n            this.onChange(true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate all nodes.\r\n     * This will automatically calculate the node calculation order if necessary and\r\n     * transfer values between connected node interfaces.\r\n     * @returns A promise that resolves to either\r\n     * - a map that maps rootNodes to their calculated value (what the calculation function of the node returned)\r\n     * - null if the calculation was prevented from the beforeCalculate event\r\n     */\r\n    public async calculate(calculationData?: any): Promise<Map<INode, any> | null> {\r\n        return await this.mutex.runExclusive(async () => await this.internalCalculate(calculationData));\r\n    }\r\n\r\n    /**\r\n     * Force the engine to recalculate the node execution order.\r\n     * This is normally done automatically. Use this method if the\r\n     * default change detection does not work in your scenario.\r\n     */\r\n    public calculateOrder() {\r\n        this.calculateNodeTree();\r\n        this.recalculateOrder = false;\r\n    }\r\n\r\n    private async internalCalculate(calculationData?: any): Promise<Map<INode, any> | null> {\r\n        if (this.events.beforeCalculate.emit(calculationData)) {\r\n            return null;\r\n        }\r\n        calculationData = this.hooks.gatherCalculationData.execute(calculationData);\r\n\r\n        this.calculationInProgress = true;\r\n        if (this.recalculateOrder) {\r\n            this.calculateOrder();\r\n        }\r\n        const results: Map<INode, any> = new Map();\r\n        for (const n of this.nodeCalculationOrder) {\r\n            const r = await n.calculate(calculationData);\r\n            if (this.actualRootNodes.includes(n)) {\r\n                results.set(n, r);\r\n            }\r\n            if (this.connectionsPerNode.has(n)) {\r\n                this.connectionsPerNode.get(n)!.forEach((c) => {\r\n                    const conversion = this.interfaceTypePlugins.find((p) =>\r\n                        p.canConvert((c.from as any).type, (c.to as any).type)\r\n                    );\r\n                    if (conversion) {\r\n                        c.to.value = conversion.convert((c.from as any).type, (c.to as any).type, c.from.value);\r\n                    } else {\r\n                        c.to.value = c.from.value;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        this.calculationInProgress = false;\r\n        this.events.calculated.emit(results);\r\n        return results;\r\n    }\r\n\r\n    private checkConnection(from: INodeInterface, to: INodeInterface) {\r\n        const dc = { from, to, id: \"dc\", destructed: false, isInDanger: false } as IConnection;\r\n        const copy = (this.editor.connections as ReadonlyArray<IConnection>).concat([dc]);\r\n        copy.filter((conn) => conn.to !== to);\r\n        return containsCycle(this.editor.nodes, copy);\r\n    }\r\n\r\n    private onChange(recalculateOrder: boolean) {\r\n        this.recalculateOrder = this.recalculateOrder || recalculateOrder;\r\n        if (this.calculateOnChange && !this.calculationInProgress) {\r\n            this.calculate();\r\n        }\r\n    }\r\n\r\n    private calculateNodeTree() {\r\n        const { calculationOrder, rootNodes } = calculateOrder(\r\n            this.editor.nodes,\r\n            this.editor.connections,\r\n            this.rootNodes\r\n        );\r\n        this.nodeCalculationOrder = calculationOrder;\r\n        this.actualRootNodes = rootNodes;\r\n        this.connectionsPerNode.clear();\r\n        this.editor.nodes.forEach((n) => {\r\n            this.connectionsPerNode.set(\r\n                n,\r\n                this.editor.connections.filter((c) => c.from.parent === n)\r\n            );\r\n        });\r\n    }\r\n}\r\n","import { IPlugin, IEditor } from \"../../baklavajs-core/types\";\r\nimport { IViewPlugin } from \"../../baklavajs-plugin-renderer-vue/types\";\r\nimport { INodeInterfaceType } from \"../types\";\r\n\r\nexport class InterfaceTypePlugin implements IPlugin {\r\n\r\n    public type = \"InterfaceTypePlugin\";\r\n\r\n    private editor!: IEditor;\r\n    private types: Map<string, INodeInterfaceType> = new Map();\r\n\r\n    public register(editor: IEditor) {\r\n        this.editor = editor;\r\n        this.editor.plugins.forEach((p) => {\r\n            if (p.type === \"ViewPlugin\") { this.registerView(p as IViewPlugin); }\r\n        });\r\n        this.editor.events.checkConnection.addListener(this, ({ from, to }) => {\r\n            const fromType = (from as any).type;\r\n            const toType = (to as any).type;\r\n            if (!fromType || !toType) {\r\n                return;\r\n            } else if (!this.canConvert(fromType, toType)) {\r\n                return false;\r\n            }\r\n        });\r\n        this.editor.events.usePlugin.addListener(this, (plugin) => {\r\n            if (plugin.type === \"ViewPlugin\") { this.registerView(plugin as IViewPlugin); }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Add a new node interface type\r\n     * @param name Name of the type\r\n     * @param color Color of the type. Will be used to color the ports of the node interfaces.\r\n     */\r\n    public addType(name: string, color: string): this {\r\n        this.types.set(name, { color, conversions: [] });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * A conversion makes it possible to connect two node interfaces altough they have different types.\r\n     * @param from Type to convert from\r\n     * @param to Type to convert to\r\n     * @param transformationFunction\r\n     * Will be called to transform the value from one type to another.\r\n     * A transformation to convert the type `string` to `number` could be `parseInt`.\r\n     */\r\n    public addConversion(from: string, to: string, transformationFunction?: (value: any) => any): this {\r\n\r\n        if (!this.types.has(from)) {\r\n            throw new Error(`Can not add conversion for unknown type \"${from}\"`);\r\n        }\r\n\r\n        if (!transformationFunction) {\r\n            transformationFunction = (value) => value;\r\n        }\r\n\r\n        this.types.get(from)!.conversions.push({\r\n            targetType: to,\r\n            transformationFunction\r\n        });\r\n\r\n        return this;\r\n\r\n    }\r\n\r\n    public getConversion(from: string, to: string) {\r\n        return this.types.has(from) && this.types.get(from)!.conversions.find((c) => c.targetType === to);\r\n    }\r\n\r\n    public canConvert(from: string, to: string): boolean {\r\n        return from === to || this.types.has(from) && this.types.get(from)!.conversions.some((c) => c.targetType === to);\r\n    }\r\n\r\n    public convert(from: string, to: string, value: any): any {\r\n        if (from === to) {\r\n            return value;\r\n        } else {\r\n            const c = this.getConversion(from, to);\r\n            if (c) {\r\n                return c.transformationFunction(value);\r\n            } else {\r\n                throw Error(`Can not convert from \"${from}\" to \"${to}\"`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private registerView(vp: IViewPlugin) {\r\n        vp.hooks.renderInterface.tap(this, (intf) => {\r\n            if (this.types.has(intf.intf.type)) {\r\n                const color = this.types.get(intf.intf.type)!.color;\r\n                const res = intf.$el.getElementsByClassName(\"__port\") as HTMLElement[];\r\n                Array.from(res).forEach((el) => {\r\n                    el.classList.add(\"__port-\" + intf.intf.type);\r\n                    el.style.backgroundColor = color;\r\n                });\r\n            }\r\n            return intf;\r\n        });\r\n    }\r\n\r\n}\r\n","<template>\r\n    <button @click=\"$emit('openSidebar')\" class=\"dark-button --block\">{{ name }}</button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\n@Options({\r\n    emits: [\"openSidebar\"]\r\n})\r\nexport default class ButtonOption extends Vue {\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n}\r\n</script>\r\n","\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\n@Options({\r\n    emits: [\"openSidebar\"]\r\n})\r\nexport default class ButtonOption extends Vue {\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n}\r\n","import { render } from \"./ButtonOption.vue?vue&type=template&id=56c582e8\"\nimport script from \"./ButtonOption.vue?vue&type=script&lang=ts\"\nexport * from \"./ButtonOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div @click=\"$emit('input', !value)\" :class=\"{ 'dark-checkbox': true, '--checked': value }\">\r\n        <div class=\"__checkmark-container\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 18 18\">\r\n                <path\r\n                    class=\"__checkmark\"\r\n                    d=\"M 6 5 L 6 10 L 16 10\"\r\n                    transform=\"rotate(-45 10 10)\"\r\n                ></path>\r\n            </svg>\r\n        </div>\r\n        <div class=\"ml-2\">{{ name }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\n@Options({\r\n    emits: [\"input\"]\r\n})\r\nexport default class InputOption extends Vue {\r\n\r\n    @Prop({ type: Boolean })\r\n    value!: boolean;\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n}\r\n</script>\r\n","\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\n@Options({\r\n    emits: [\"input\"]\r\n})\r\nexport default class InputOption extends Vue {\r\n\r\n    @Prop({ type: Boolean })\r\n    value!: boolean;\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n}\r\n","import { render } from \"./CheckboxOption.vue?vue&type=template&id=069b16ea\"\nimport script from \"./CheckboxOption.vue?vue&type=script&lang=ts\"\nexport * from \"./CheckboxOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div>\r\n        <input\r\n            type=\"text\"\r\n            class=\"dark-input\"\r\n            :value=\"value\"\r\n            v-on=\"listeners\"\r\n            :placeholder=\"name\"\r\n        >\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\n@Options({\r\n    emits: [\"input\"]\r\n})\r\nexport default class InputOption extends Vue {\r\n\r\n    @Prop({ type: String, default: \"\" })\r\n    value!: string;\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n    get listeners(): any {\r\n        return { ...this.listeners, input: (ev: any) => this.$emit(\"input\", ev.target.value) };\r\n    }\r\n\r\n}\r\n</script>","\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\n\r\n@Options({\r\n    emits: [\"input\"]\r\n})\r\nexport default class InputOption extends Vue {\r\n\r\n    @Prop({ type: String, default: \"\" })\r\n    value!: string;\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n    get listeners(): any {\r\n        return { ...this.listeners, input: (ev: any) => this.$emit(\"input\", ev.target.value) };\r\n    }\r\n\r\n}\r\n","import { render } from \"./InputOption.vue?vue&type=template&id=5e4516b9\"\nimport script from \"./InputOption.vue?vue&type=script&lang=ts\"\nexport * from \"./InputOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"dark-num-input\">\r\n        <div @click=\"decrement\" class=\"__button --dec\">\r\n            <i-arrow></i-arrow>\r\n        </div>\r\n        <div\r\n            v-if=\"!editMode\"\r\n            class=\"__content\"\r\n            @click=\"enterEditMode\"\r\n        >\r\n            <div class=\"__label .text-truncate\">{{ name }}</div>\r\n            <div class=\"__value\">{{ stringRepresentation }}</div>\r\n        </div>\r\n        <div v-else class=\"__content\">\r\n            <input\r\n                type=\"number\"\r\n                v-model=\"tempValue\"\r\n                ref=\"input\"\r\n                @blur=\"leaveEditMode\"\r\n            >\r\n        </div>\r\n        <div @click=\"increment\" class=\"__button --inc\">\r\n            <i-arrow></i-arrow>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options } from \"vue-property-decorator\";\r\nimport Arrow from \"./Arrow.vue\";\r\nimport { BaseNumericOption } from \"./BaseNumericOption\";\r\n\r\n@Options({\r\n    components: {\r\n        \"i-arrow\": Arrow\r\n    },\r\n    emits: [\"input\"]\r\n})\r\nexport default class IntegerOption extends BaseNumericOption {\r\n\r\n    get v() {\r\n        if (typeof(this.value) === \"string\") {\r\n            return parseInt(this.value, 10);\r\n        } else if (typeof(this.value) === \"number\") {\r\n            return Math.floor(this.value);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get stringRepresentation() {\r\n        const s = this.v.toString();\r\n        return s.length > this.MAX_STRING_LENGTH ?\r\n            this.v.toExponential(this.MAX_STRING_LENGTH - 5) :\r\n            s;\r\n    }\r\n\r\n    increment() {\r\n        this.setValue(this.v + 1);\r\n    }\r\n\r\n    decrement() {\r\n        this.setValue(this.v - 1);\r\n    }\r\n\r\n    leaveEditMode() {\r\n        const v = parseInt(this.tempValue, 10);\r\n        if (!this.validate(v)) {\r\n            this.invalid = true;\r\n        } else {\r\n            this.$emit(\"input\", v);\r\n            this.editMode = false;\r\n        }\r\n    }\r\n\r\n}\r\n</script>","<template>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\r\n        <path d=\"M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"/>\r\n    </svg>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue } from \"vue-property-decorator\";\r\n\r\nexport default class Arrow extends Vue {}\r\n</script>\r\n","\r\nimport { Vue } from \"vue-property-decorator\";\r\n\r\nexport default class Arrow extends Vue {}\r\n","import { render } from \"./Arrow.vue?vue&type=template&id=27c81ba2\"\nimport script from \"./Arrow.vue?vue&type=script&lang=ts\"\nexport * from \"./Arrow.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { Prop, Vue, Watch } from \"vue-property-decorator\";\r\nimport { INodeInterface, INodeOption } from \"../../baklavajs-core/types\";\r\n\r\nexport class BaseNumericOption extends Vue {\r\n    MAX_STRING_LENGTH = 9;\r\n\r\n    @Prop()\r\n    value!: any;\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n    @Prop({ type: Object })\r\n    option!: INodeOption | INodeInterface;\r\n\r\n    editMode = false;\r\n    invalid = false;\r\n    tempValue = \"0\";\r\n\r\n    get v() {\r\n        if (typeof this.value === \"string\") {\r\n            return parseFloat(this.value);\r\n        } else if (typeof this.value === \"number\") {\r\n            return this.value;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get stringRepresentation() {\r\n        const s = this.v.toFixed(3);\r\n        return s.length > this.MAX_STRING_LENGTH ? this.v.toExponential(this.MAX_STRING_LENGTH - 5) : s;\r\n    }\r\n\r\n    setValue(newValue: number) {\r\n        if (this.validate(newValue)) {\r\n            this.$emit(\"input\", newValue);\r\n        }\r\n    }\r\n\r\n    @Watch(\"tempValue\")\r\n    resetInvalid() {\r\n        this.invalid = false;\r\n    }\r\n\r\n    async enterEditMode() {\r\n        this.tempValue = this.v.toFixed(3);\r\n        this.editMode = true;\r\n        await this.$nextTick();\r\n        (this.$refs.input as HTMLElement).focus();\r\n    }\r\n\r\n    leaveEditMode() {\r\n        const v = parseFloat(this.tempValue);\r\n        if (!this.validate(v)) {\r\n            this.invalid = true;\r\n        } else {\r\n            this.$emit(\"input\", v);\r\n            this.editMode = false;\r\n        }\r\n    }\r\n\r\n    validate(v: number) {\r\n        if (Number.isNaN(v)) {\r\n            return false;\r\n        } else if (typeof this.option.min === \"number\" && v < this.option.min) {\r\n            return false;\r\n        } else if (typeof this.option.max === \"number\" && v > this.option.max) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","\r\nimport { Options } from \"vue-property-decorator\";\r\nimport Arrow from \"./Arrow.vue\";\r\nimport { BaseNumericOption } from \"./BaseNumericOption\";\r\n\r\n@Options({\r\n    components: {\r\n        \"i-arrow\": Arrow\r\n    },\r\n    emits: [\"input\"]\r\n})\r\nexport default class IntegerOption extends BaseNumericOption {\r\n\r\n    get v() {\r\n        if (typeof(this.value) === \"string\") {\r\n            return parseInt(this.value, 10);\r\n        } else if (typeof(this.value) === \"number\") {\r\n            return Math.floor(this.value);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    get stringRepresentation() {\r\n        const s = this.v.toString();\r\n        return s.length > this.MAX_STRING_LENGTH ?\r\n            this.v.toExponential(this.MAX_STRING_LENGTH - 5) :\r\n            s;\r\n    }\r\n\r\n    increment() {\r\n        this.setValue(this.v + 1);\r\n    }\r\n\r\n    decrement() {\r\n        this.setValue(this.v - 1);\r\n    }\r\n\r\n    leaveEditMode() {\r\n        const v = parseInt(this.tempValue, 10);\r\n        if (!this.validate(v)) {\r\n            this.invalid = true;\r\n        } else {\r\n            this.$emit(\"input\", v);\r\n            this.editMode = false;\r\n        }\r\n    }\r\n\r\n}\r\n","import { render } from \"./IntegerOption.vue?vue&type=template&id=5c567b60\"\nimport script from \"./IntegerOption.vue?vue&type=script&lang=ts\"\nexport * from \"./IntegerOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div class=\"dark-num-input\">\r\n        <div @click=\"decrement\" class=\"__button --dec\">\r\n            <i-arrow></i-arrow>\r\n        </div>\r\n        <div\r\n            v-if=\"!editMode\"\r\n            class=\"__content\"\r\n            @click=\"enterEditMode\"\r\n        >\r\n            <div class=\"__label .text-truncate\">{{ name }}</div>\r\n            <div class=\"__value\">{{ stringRepresentation }}</div>\r\n        </div>\r\n        <div v-else class=\"__content\">\r\n            <input\r\n                type=\"number\"\r\n                v-model=\"tempValue\"\r\n                class=\"dark-input\"\r\n                :class=\"{ '--invalid': invalid }\"\r\n                ref=\"input\"\r\n                @blur=\"leaveEditMode\"\r\n                @keydown.enter=\"leaveEditMode\"\r\n                style=\"text-align: right;\"\r\n            >\r\n        </div>\r\n        <div @click=\"increment\" class=\"__button --inc\">\r\n            <i-arrow></i-arrow>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options } from \"vue-property-decorator\";\r\nimport Arrow from \"./Arrow.vue\";\r\nimport { BaseNumericOption } from \"./BaseNumericOption\";\r\n\r\n@Options({\r\n    components: {\r\n        \"i-arrow\": Arrow\r\n    },\r\n    emits: [\"input\"]\r\n})\r\nexport default class NumberOption extends BaseNumericOption {\r\n\r\n    increment() {\r\n        this.setValue(this.v + 0.1);\r\n    }\r\n\r\n    decrement() {\r\n        this.setValue(this.v - 0.1);\r\n    }\r\n\r\n}\r\n</script>","\r\nimport { Options } from \"vue-property-decorator\";\r\nimport Arrow from \"./Arrow.vue\";\r\nimport { BaseNumericOption } from \"./BaseNumericOption\";\r\n\r\n@Options({\r\n    components: {\r\n        \"i-arrow\": Arrow\r\n    },\r\n    emits: [\"input\"]\r\n})\r\nexport default class NumberOption extends BaseNumericOption {\r\n\r\n    increment() {\r\n        this.setValue(this.v + 0.1);\r\n    }\r\n\r\n    decrement() {\r\n        this.setValue(this.v - 0.1);\r\n    }\r\n\r\n}\r\n","import { render } from \"./NumberOption.vue?vue&type=template&id=387ba2d7\"\nimport script from \"./NumberOption.vue?vue&type=script&lang=ts\"\nexport * from \"./NumberOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n<div\r\n    :class=\"['dark-select', { '--open': open }]\"\r\n    @click=\"open = !open\"\r\n    v-click-outside=\"() => { open = false; }\"\r\n>\r\n    <div class=\"__selected\">\r\n        <div class=\"__text\">{{ selectedText }}</div>\r\n        <div class=\"__icon\">\r\n            <i-arrow></i-arrow>\r\n        </div>\r\n    </div>\r\n    <transition name=\"slide-fade\">\r\n        <div class=\"__dropdown\" v-show=\"open\">\r\n            <div class=\"item --header\">{{ name }}</div>\r\n            <div\r\n                v-for=\"(item, i) in items\"\r\n                :key=\"i\"\r\n                :class=\"['item', { '--active': isSelected(item) }]\"\r\n                @click=\"setSelected(item)\"\r\n            >{{ getItemText(item) }}</div>\r\n        </div>\r\n    </transition>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Vue, Prop } from \"vue-property-decorator\";\r\nimport Arrow from \"./Arrow.vue\";\r\nimport { INodeOption, INodeInterface } from \"../../baklavajs-core/types\";\r\n\r\n// @ts-ignore\r\nimport ClickOutside from \"v-click-outside\";\r\n\r\ninterface IAdvancedItem {\r\n    text: string;\r\n    value: any;\r\n}\r\ntype ItemType = string|IAdvancedItem;\r\n\r\n@Options({\r\n    components: {\r\n        \"i-arrow\": Arrow\r\n    },\r\n    directives: {\r\n        ClickOutside: ClickOutside.directive\r\n    },\r\n    emits: [\"input\"]\r\n})\r\nexport default class SelectOption extends Vue {\r\n\r\n    open = false;\r\n    items = [];\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n    @Prop()\r\n    value!: any;\r\n\r\n    @Prop({ type: Object })\r\n    option!: INodeOption|INodeInterface;\r\n\r\n    get isAdvancedMode() {\r\n        return !this.items.every((i) => typeof(i) === \"string\");\r\n    }\r\n\r\n    get selectedText() {\r\n        if (this.value) {\r\n            return this.isAdvancedMode ?\r\n                this.getItemByValue(this.value)?.text ?? \"\" :\r\n                this.value;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    mounted() {\r\n        // computed property won't work here due to missing reactivity\r\n        this.items = this.option.items || [];\r\n        this.option.events.updated.addListener(this, () => {\r\n            this.items = this.option.items || [];\r\n        });\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.option.events.updated.removeListener(this);\r\n    }\r\n\r\n    isSelected(item: ItemType) {\r\n        if (this.isAdvancedMode) {\r\n            return (item as IAdvancedItem).value === this.value;\r\n        } else {\r\n            return item === this.value;\r\n        }\r\n    }\r\n\r\n    setSelected(item: ItemType) {\r\n        this.$emit(\"input\", this.isAdvancedMode ? (item as IAdvancedItem).value : item as string);\r\n    }\r\n\r\n    getItemByValue(value: any) {\r\n        return (this.items as IAdvancedItem[]).find((i) => i.value === value);\r\n    }\r\n\r\n    getItemText(item: ItemType) {\r\n        return this.isAdvancedMode ? (item as IAdvancedItem).text : item;\r\n    }\r\n\r\n}\r\n</script>\r\n","\r\nimport { Options, Vue, Prop } from \"vue-property-decorator\";\r\nimport Arrow from \"./Arrow.vue\";\r\nimport { INodeOption, INodeInterface } from \"../../baklavajs-core/types\";\r\n\r\n// @ts-ignore\r\nimport ClickOutside from \"v-click-outside\";\r\n\r\ninterface IAdvancedItem {\r\n    text: string;\r\n    value: any;\r\n}\r\ntype ItemType = string|IAdvancedItem;\r\n\r\n@Options({\r\n    components: {\r\n        \"i-arrow\": Arrow\r\n    },\r\n    directives: {\r\n        ClickOutside: ClickOutside.directive\r\n    },\r\n    emits: [\"input\"]\r\n})\r\nexport default class SelectOption extends Vue {\r\n\r\n    open = false;\r\n    items = [];\r\n\r\n    @Prop({ type: String })\r\n    name!: string;\r\n\r\n    @Prop()\r\n    value!: any;\r\n\r\n    @Prop({ type: Object })\r\n    option!: INodeOption|INodeInterface;\r\n\r\n    get isAdvancedMode() {\r\n        return !this.items.every((i) => typeof(i) === \"string\");\r\n    }\r\n\r\n    get selectedText() {\r\n        if (this.value) {\r\n            return this.isAdvancedMode ?\r\n                this.getItemByValue(this.value)?.text ?? \"\" :\r\n                this.value;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    mounted() {\r\n        // computed property won't work here due to missing reactivity\r\n        this.items = this.option.items || [];\r\n        this.option.events.updated.addListener(this, () => {\r\n            this.items = this.option.items || [];\r\n        });\r\n    }\r\n\r\n    beforeDestroy() {\r\n        this.option.events.updated.removeListener(this);\r\n    }\r\n\r\n    isSelected(item: ItemType) {\r\n        if (this.isAdvancedMode) {\r\n            return (item as IAdvancedItem).value === this.value;\r\n        } else {\r\n            return item === this.value;\r\n        }\r\n    }\r\n\r\n    setSelected(item: ItemType) {\r\n        this.$emit(\"input\", this.isAdvancedMode ? (item as IAdvancedItem).value : item as string);\r\n    }\r\n\r\n    getItemByValue(value: any) {\r\n        return (this.items as IAdvancedItem[]).find((i) => i.value === value);\r\n    }\r\n\r\n    getItemText(item: ItemType) {\r\n        return this.isAdvancedMode ? (item as IAdvancedItem).text : item;\r\n    }\r\n\r\n}\r\n","import { render } from \"./SelectOption.vue?vue&type=template&id=42238bc4\"\nimport script from \"./SelectOption.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n<div class=\"dark-slider\" :class=\"{ 'ignore-mouse': !editMode }\"\r\n    @mousedown=\"mousedown\" @mouseup=\"mouseup\" @mousemove=\"mousemove\" @mouseleave=\"mouseleave\">\r\n    <div class=\"__slider\" :style=\"{ width: percentage + '%' }\"></div>\r\n    <div v-if=\"!editMode\" class=\"__content\">\r\n        <div class=\"__label\">{{ name }}</div>\r\n        <div class=\"__value\">{{ stringRepresentation }}</div>\r\n    </div>\r\n    <div v-else class=\"__content\">\r\n        <input\r\n            type=\"number\"\r\n            v-model=\"tempValue\"\r\n            class=\"dark-input\"\r\n            :class=\"{ '--invalid': invalid }\"\r\n            ref=\"input\"\r\n            @blur=\"leaveEditMode\"\r\n            @keydown.enter=\"leaveEditMode\"\r\n            style=\"text-align: right;\"\r\n        >\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options } from \"vue-property-decorator\";\r\nimport { BaseNumericOption } from \"./BaseNumericOption\";\r\n\r\n@Options({\r\n    emits: [\"input\"]\r\n})\r\nexport default class SliderOption extends BaseNumericOption {\r\n\r\n    didSlide = false;\r\n    isMouseDown = false;\r\n\r\n    get min() {\r\n        return this.option.min || 0;\r\n    }\r\n\r\n    get max() {\r\n        return this.option.max || 1;\r\n    }\r\n\r\n    get percentage() {\r\n        return Math.min(100, Math.max(0, (this.v * 100) / (this.max - this.min)));\r\n    }\r\n\r\n    mousedown() {\r\n        if (this.editMode) { return; }\r\n        this.isMouseDown = true;\r\n    }\r\n\r\n    mouseup() {\r\n        if (this.editMode) { return; }\r\n        if (!this.didSlide) {\r\n            this.enterEditMode();\r\n        }\r\n        this.isMouseDown = false;\r\n        this.didSlide = false;\r\n    }\r\n\r\n    mouseleave(ev: MouseEvent) {\r\n        if (this.editMode) { return; }\r\n        if (this.isMouseDown) {\r\n            if (ev.offsetX >= this.$el.clientWidth) {\r\n                this.$emit(\"input\", this.max);\r\n            } else if (ev.offsetX <= 0) {\r\n                this.$emit(\"input\", this.min);\r\n            }\r\n        }\r\n        this.isMouseDown = false;\r\n        this.didSlide = false;\r\n    }\r\n\r\n    mousemove(ev: MouseEvent) {\r\n        if (this.editMode) { return; }\r\n        const v = Math.max(this.min, Math.min(this.max, (this.max - this.min) * (ev.offsetX / this.$el.clientWidth) + this.min));\r\n        if (this.isMouseDown) {\r\n            this.$emit(\"input\", v);\r\n            this.didSlide = true;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n","\r\nimport { Options } from \"vue-property-decorator\";\r\nimport { BaseNumericOption } from \"./BaseNumericOption\";\r\n\r\n@Options({\r\n    emits: [\"input\"]\r\n})\r\nexport default class SliderOption extends BaseNumericOption {\r\n\r\n    didSlide = false;\r\n    isMouseDown = false;\r\n\r\n    get min() {\r\n        return this.option.min || 0;\r\n    }\r\n\r\n    get max() {\r\n        return this.option.max || 1;\r\n    }\r\n\r\n    get percentage() {\r\n        return Math.min(100, Math.max(0, (this.v * 100) / (this.max - this.min)));\r\n    }\r\n\r\n    mousedown() {\r\n        if (this.editMode) { return; }\r\n        this.isMouseDown = true;\r\n    }\r\n\r\n    mouseup() {\r\n        if (this.editMode) { return; }\r\n        if (!this.didSlide) {\r\n            this.enterEditMode();\r\n        }\r\n        this.isMouseDown = false;\r\n        this.didSlide = false;\r\n    }\r\n\r\n    mouseleave(ev: MouseEvent) {\r\n        if (this.editMode) { return; }\r\n        if (this.isMouseDown) {\r\n            if (ev.offsetX >= this.$el.clientWidth) {\r\n                this.$emit(\"input\", this.max);\r\n            } else if (ev.offsetX <= 0) {\r\n                this.$emit(\"input\", this.min);\r\n            }\r\n        }\r\n        this.isMouseDown = false;\r\n        this.didSlide = false;\r\n    }\r\n\r\n    mousemove(ev: MouseEvent) {\r\n        if (this.editMode) { return; }\r\n        const v = Math.max(this.min, Math.min(this.max, (this.max - this.min) * (ev.offsetX / this.$el.clientWidth) + this.min));\r\n        if (this.isMouseDown) {\r\n            this.$emit(\"input\", v);\r\n            this.didSlide = true;\r\n        }\r\n    }\r\n\r\n}\r\n","import { render } from \"./SliderOption.vue?vue&type=template&id=4b21ca8c\"\nimport script from \"./SliderOption.vue?vue&type=script&lang=ts\"\nexport * from \"./SliderOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div>{{ sanitized }}</div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Prop, Vue } from \"vue-property-decorator\";\r\n\r\nexport default class TextOption extends Vue {\r\n\r\n    get sanitized() {\r\n        return String(this.value);\r\n    }\r\n\r\n    @Prop({ default: \"\" })\r\n    value!: string;\r\n\r\n}\r\n</script>","\r\nimport { Prop, Vue } from \"vue-property-decorator\";\r\n\r\nexport default class TextOption extends Vue {\r\n\r\n    get sanitized() {\r\n        return String(this.value);\r\n    }\r\n\r\n    @Prop({ default: \"\" })\r\n    value!: string;\r\n\r\n}\r\n","import { render } from \"./TextOption.vue?vue&type=template&id=24c54e76\"\nimport script from \"./TextOption.vue?vue&type=script&lang=ts\"\nexport * from \"./TextOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { IPlugin, IEditor } from \"../../baklavajs-core/types\";\r\nimport { IViewPlugin } from \"../../baklavajs-plugin-renderer-vue/types\";\r\nimport * as Options from \"./options\";\r\n\r\nexport class OptionPlugin implements IPlugin {\r\n\r\n    public type = \"OptionPlugin\";\r\n\r\n    public register(editor: IEditor) {\r\n        editor.events.usePlugin.addListener(this, (p) => {\r\n            if (p.type === \"ViewPlugin\") {\r\n                this.registerOptions(p as IViewPlugin);\r\n            }\r\n        });\r\n        editor.plugins.forEach((p) => {\r\n            if (p.type === \"ViewPlugin\") {\r\n                this.registerOptions(p as IViewPlugin);\r\n            }\r\n        });\r\n    }\r\n\r\n    private registerOptions(viewPlugin: IViewPlugin) {\r\n        Object.entries(Options).forEach(([k, v]) => {\r\n            viewPlugin.registerOption(k, v);\r\n        });\r\n    }\r\n\r\n}\r\n","<template>\r\n    <div :id=\"node.id\" :style=\"styles\" @mousedown=\"startDrag\">\r\n        <textarea rows=\"6\" cols=\"20\"></textarea>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Vue, Prop, Inject } from \"vue-property-decorator\";\r\n\r\nimport { ViewPlugin } from \"../../baklavajs-plugin-renderer-vue/src\";\r\nimport { IViewNode } from \"../../baklavajs-plugin-renderer-vue/types\";\r\n\r\nexport default class CommentNode extends Vue {\r\n\r\n    @Prop({ type: Object })\r\n    node!: IViewNode;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    selected!: boolean;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    dragging = false;\r\n    width = 200;\r\n\r\n    get styles() {\r\n        return {\r\n            \"position\": \"absolute\",\r\n            \"top\": `${this.node.position.y}px`,\r\n            \"left\": `${this.node.position.x}px`,\r\n            \"width\": `${this.width}px`,\r\n            \"height\": \"200px\",\r\n            \"background-color\": \"yellow\"\r\n        };\r\n    }\r\n\r\n    update() {\r\n        this.$forceUpdate();\r\n    }\r\n\r\n    startDrag() {\r\n        this.dragging = true;\r\n        document.addEventListener(\"mousemove\", this.handleMove);\r\n        document.addEventListener(\"mouseup\", this.stopDrag);\r\n        this.select();\r\n    }\r\n\r\n    select() {\r\n        this.$emit(\"select\", this);\r\n    }\r\n\r\n    stopDrag() {\r\n        this.dragging = false;\r\n        document.removeEventListener(\"mousemove\", this.handleMove);\r\n        document.removeEventListener(\"mouseup\", this.stopDrag);\r\n    }\r\n\r\n    handleMove(ev: MouseEvent) {\r\n        if (this.dragging) {\r\n            const scaleFactor = this.plugin.scaling * window.devicePixelRatio;\r\n            this.node.position.x += ev.movementX / scaleFactor;\r\n            this.node.position.y += ev.movementY / scaleFactor;\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n","\r\nimport { Vue, Prop, Inject } from \"vue-property-decorator\";\r\n\r\nimport { ViewPlugin } from \"../../baklavajs-plugin-renderer-vue/src\";\r\nimport { IViewNode } from \"../../baklavajs-plugin-renderer-vue/types\";\r\n\r\nexport default class CommentNode extends Vue {\r\n\r\n    @Prop({ type: Object })\r\n    node!: IViewNode;\r\n\r\n    @Prop({ type: Boolean, default: false })\r\n    selected!: boolean;\r\n\r\n    @Inject()\r\n    plugin!: ViewPlugin;\r\n\r\n    dragging = false;\r\n    width = 200;\r\n\r\n    get styles() {\r\n        return {\r\n            \"position\": \"absolute\",\r\n            \"top\": `${this.node.position.y}px`,\r\n            \"left\": `${this.node.position.x}px`,\r\n            \"width\": `${this.width}px`,\r\n            \"height\": \"200px\",\r\n            \"background-color\": \"yellow\"\r\n        };\r\n    }\r\n\r\n    update() {\r\n        this.$forceUpdate();\r\n    }\r\n\r\n    startDrag() {\r\n        this.dragging = true;\r\n        document.addEventListener(\"mousemove\", this.handleMove);\r\n        document.addEventListener(\"mouseup\", this.stopDrag);\r\n        this.select();\r\n    }\r\n\r\n    select() {\r\n        this.$emit(\"select\", this);\r\n    }\r\n\r\n    stopDrag() {\r\n        this.dragging = false;\r\n        document.removeEventListener(\"mousemove\", this.handleMove);\r\n        document.removeEventListener(\"mouseup\", this.stopDrag);\r\n    }\r\n\r\n    handleMove(ev: MouseEvent) {\r\n        if (this.dragging) {\r\n            const scaleFactor = this.plugin.scaling * window.devicePixelRatio;\r\n            this.node.position.x += ev.movementX / scaleFactor;\r\n            this.node.position.y += ev.movementY / scaleFactor;\r\n        }\r\n    }\r\n\r\n}\r\n","import { render } from \"./CommentNodeRenderer.vue?vue&type=template&id=7e7a2694\"\nimport script from \"./CommentNodeRenderer.vue?vue&type=script&lang=ts\"\nexport * from \"./CommentNodeRenderer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","import { defineComponent, h } from \"vue\";\r\nimport { Components } from \"../../baklavajs-plugin-renderer-vue/src\";\r\nimport { Node } from \"../../baklavajs-core/src\";\r\nimport CommentNode from \"./CommentNodeRenderer.vue\";\r\n\r\nexport default defineComponent({\r\n    functional: true,\r\n    props: {\r\n        node: {\r\n            type: Object as () => Node,\r\n            required: true,\r\n        },\r\n    },\r\n    render() {\r\n\r\n        const getComponent = () => {\r\n            const node = this.$props.node;\r\n            return node.type === \"CommentNode\" ? CommentNode : Components.Node;\r\n        };\r\n\r\n        return h(getComponent(), this.$props);\r\n\r\n    }\r\n});\r\n","import { Editor, Node } from \"../../baklavajs-core/src\";\r\n\r\nexport default class TestNode extends Node {\r\n\r\n    public type = \"TestNode\";\r\n    public name = this.type;\r\n    public registerCalled = false;\r\n\r\n    constructor() {\r\n        super();\r\n        this.addInputInterface(\"Input\", \"CheckboxOption\", false, { type: \"boolean\" });\r\n        this.addInputInterface(\"Test\", \"NumberOption\", 5, { type: \"number\" });\r\n        this.addOutputInterface(\"Output\", { type: \"boolean\" });\r\n        this.addOption(\"test\", \"InputOption\");\r\n        this.addOption(\"Select\", \"SelectOption\", \"Test1\", undefined, { items: [\"Test1\", \"Test2\", \"Test3\"] });\r\n        this.addOption(\"This is a checkbox\", \"CheckboxOption\", true);\r\n        this.addOption(\"Number\", \"NumberOption\", 5, undefined, { min: 0, max: 10 });\r\n        this.addOption(\"Slider\", \"SliderOption\", 0.5, undefined, { min: 0, max: 1 });\r\n    }\r\n\r\n    public registerEditor(editor: Editor) {\r\n        super.registerEditor(editor);\r\n        this.registerCalled = true;\r\n    }\r\n\r\n    public calculate() {\r\n        this.getInterface(\"Output\").value = this.getInterface(\"Input\").value;\r\n    }\r\n\r\n}\r\n","import { Node } from \"../../baklavajs-core/src\";\r\n\r\nexport default class OutputNode extends Node {\r\n\r\n    public type = \"OutputNode\";\r\n    public name = this.type;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.addInputInterface(\"Input\", \"InputOption\");\r\n        this.addInputInterface(\"BooleanInput\", \"CheckboxOption\");\r\n        this.addOption(\"output\", \"TextOption\");\r\n        this.addOption(\"data\", \"TextOption\");\r\n    }\r\n\r\n    public calculate(data: any) {\r\n        this.setOptionValue(\"output\", this.getInterface(\"Input\").value);\r\n        this.setOptionValue(\"data\", data);\r\n        return { test: true };\r\n    }\r\n\r\n}\r\n","import { NodeBuilder } from \"../../baklavajs-core/src\";\r\n\r\nexport default new NodeBuilder(\"BuilderTestNode\", { twoColumn: true, width: 400 })\r\n    .addInputInterface(\"Input 1\", \"InputOption\", \"default1\")\r\n    .addInputInterface(\"Input 2\", \"InputOption\", \"default2\")\r\n    .addOption(\"Separator\", \"InputOption\", \",\")\r\n    .addOption(\"SidebarTest\", \"TriggerOption\", () => ({ testtext: \"this is a test\" }), \"SidebarOption\")\r\n    .addOutputInterface(\"Output\")\r\n    .onCalculate((n) => {\r\n        const s1 = n.getInterface(\"Input 1\").value;\r\n        const s2 = n.getInterface(\"Input 2\").value;\r\n        const sep = n.getOptionValue(\"Separator\");\r\n        n.getInterface(\"Output\").value = s1 + sep + s2;\r\n    })\r\n    .build();\r\n","import { NodeBuilder } from \"../../baklavajs-core/src\";\r\n\r\nexport default new NodeBuilder(\"MathNode\")\r\n    .addInputInterface(\"Number 1\", \"NumberOption\", 1, { displayName: \"Number\" })\r\n    .addInputInterface(\"Number 2\", \"NumberOption\", 10, { displayName: \"Number\" })\r\n    .addOption(\"Operation\", \"SelectOption\", \"Add\", undefined, { items: [ \"Add\", \"Subtract\" ] })\r\n    .addOutputInterface(\"Output\")\r\n    .onCalculate((n, d) => {\r\n        const n1 = n.getInterface(\"Number 1\").value;\r\n        const n2 = n.getInterface(\"Number 2\").value;\r\n        const operation = n.getOptionValue(\"Operation\").selected;\r\n        let result;\r\n        if (operation === \"Add\") {\r\n            result = n1 + n2;\r\n        } else if (operation === \"Subtract\") {\r\n            result = n1 - n2;\r\n        }\r\n        n.getInterface(\"Output\").value = result;\r\n    })\r\n    .build();\r\n","import { Node } from \"../../baklavajs-core/src\";\r\nimport { INodeState } from \"../../baklavajs-core/types\";\r\n\r\nexport default class AdvancedNode extends Node {\r\n\r\n    public type = \"AdvancedNode\";\r\n    public name = this.type;\r\n\r\n    private counter = 0;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.addOption(\"Add Input\", \"AddOption\");\r\n        this.addOption(\"Remove Input\", \"AddOption\");\r\n    }\r\n\r\n    public load(state: INodeState) {\r\n        state.interfaces.forEach(([name, intfState]) => {\r\n            const intf = this.addInputInterface(name);\r\n            intf!.id = intfState.id;\r\n        });\r\n        this.counter = state.interfaces.length;\r\n        super.load(state);\r\n    }\r\n\r\n    public action(action: string) {\r\n        if (action === \"Add Input\") {\r\n            this.addInputInterface(\"Input \" + (++this.counter));\r\n        } else if (action === \"Remove Input\" && this.counter > 0) {\r\n            this.removeInterface(\"Input \" + (this.counter--));\r\n        }\r\n    }\r\n\r\n}\r\n","import { NodeBuilder } from \"../../baklavajs-core/src\";\r\n\r\nexport default new NodeBuilder(\"CommentNode\").build();\r\n","import { Node } from \"../../baklavajs-core/src\";\r\n\r\nexport default class OptionTestNode extends Node {\r\n\r\n    public type = \"OptionTestNode\";\r\n    public name = this.type;\r\n\r\n    public constructor() {\r\n        super();\r\n        this.addOption(\"ButtonOption\", \"ButtonOption\");\r\n        this.addOption(\"CheckboxOption\", \"CheckboxOption\");\r\n        this.addOption(\"InputOption\", \"InputOption\");\r\n        this.addOption(\"IntegerOption\", \"IntegerOption\", 5, undefined, { min: 0, max: 10 });\r\n        this.addOption(\"NumberOption\", \"NumberOption\", 0.5, undefined, { min: 0, max: 1 });\r\n        this.addOption(\"SelectOption\", \"SelectOption\", \"Value 1\", undefined, { items: [ \"Value 1\", \"Value 2\", \"Value 3\" ] });\r\n        this.addOption(\"SliderOption\", \"SliderOption\", 0.5);\r\n        this.addOption(\"TextOption\", \"TextOption\", \"My text\");\r\n    }\r\n\r\n}\r\n","import { NodeBuilder } from \"../../baklavajs-core/src\";\r\n\r\nexport default new NodeBuilder(\"SelectTestNode\")\r\n    .addOption(\"Simple\", \"SelectOption\", \"A\", undefined, { items: [\"A\", \"B\", \"C\"] })\r\n    .addOption(\"Advanced\", \"SelectOption\", 3, undefined, { items: [\r\n        { text: \"This is a very long text that should overflow \", value: 1 },\r\n        { text: \"Y\", value: 2 },\r\n        { text: \"Z\", value: 3 },\r\n    ] })\r\n    .addOutputInterface(\"Simple\")\r\n    .addOutputInterface(\"Advanced\")\r\n    .onCalculate((n) => {\r\n        n.getInterface(\"Simple\").value = n.getOptionValue(\"Simple\");\r\n        n.getInterface(\"Advanced\").value = n.getOptionValue(\"Advanced\");\r\n    })\r\n    .build();\r\n","import { Node } from \"../../baklavajs-core/src\";\r\nimport { INodeState } from \"../../baklavajs-core/types\";\r\n\r\nexport default class SplitterNode extends Node {\r\n    public type = \"SplitterNode\";\r\n    public name = \"Splitter\";\r\n\r\n    public constructor() {\r\n        super();\r\n        this.addInputInterface(\"Source\");\r\n        const nrOutputsOption = this.addOption(\"NrOutputs\", \"SelectOption\", \"4\", undefined, {\r\n            items: [\"2\", \"4\", \"6\", \"8\", \"16\"]\r\n        });\r\n        nrOutputsOption!.events.setValue.addListener(this, () => {\r\n            this.updateOutputs();\r\n        });\r\n        this.updateOutputs();\r\n    }\r\n\r\n    public load(state: INodeState) {\r\n        state.interfaces.forEach(([name, intfState]) => {\r\n            if (name.startsWith(\"Output\")) {\r\n                const intf = this.addOutputInterface(name);\r\n                intf!.id = intfState.id;\r\n            }\r\n        });\r\n        super.load(state);\r\n    }\r\n\r\n    private updateOutputs() {\r\n        const numberOfOutputs = parseInt(this.getOptionValue(\"NrOutputs\"), 10);\r\n        const outputIntfs = Object.keys(this.outputInterfaces);\r\n        if (outputIntfs.length > numberOfOutputs) {\r\n            // we have more outputs than we need, remove some\r\n            for (let i = numberOfOutputs + 1; i <= outputIntfs.length; i++) {\r\n                this.removeInterface(`Output ${i}`);\r\n            }\r\n        } else if (outputIntfs.length < numberOfOutputs) {\r\n            // we need more outputs\r\n            for (let i = outputIntfs.length + 1; i <= numberOfOutputs; i++) {\r\n                this.addOutputInterface(`Output ${i}`);\r\n            }\r\n        }\r\n    }\r\n}\r\n","<template>\r\n    <button @click=\"onClick\">{{ name }}</button>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent } from \"vue\";\r\nimport AdvancedNode from \"./AdvancedNode\";\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        node: {\r\n            type: Object as () => AdvancedNode,\r\n            required: true\r\n        }\r\n    },\r\n    setup(props) {\r\n        const onClick = () => {\r\n            props.node.action(props.name);\r\n        };\r\n        return { onClick };\r\n    }\r\n});\r\n</script>\r\n","\r\nimport { defineComponent } from \"vue\";\r\nimport AdvancedNode from \"./AdvancedNode\";\r\n\r\nexport default defineComponent({\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        node: {\r\n            type: Object as () => AdvancedNode,\r\n            required: true\r\n        }\r\n    },\r\n    setup(props) {\r\n        const onClick = () => {\r\n            props.node.action(props.name);\r\n        };\r\n        return { onClick };\r\n    }\r\n});\r\n","import { render } from \"./AddOption.vue?vue&type=template&id=2c440fe5\"\nimport script from \"./AddOption.vue?vue&type=script&lang=ts\"\nexport * from \"./AddOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div>\r\n        <button-option name=\"Test Sidebar\" @openSidebar=\"$emit('openSidebar')\"></button-option>\r\n        <p>{{ value.testtext }}</p>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\nimport { ButtonOption } from \"../../baklavajs-plugin-options-vue/src\";\r\n\r\n@Options({\r\n    components: { ButtonOption }\r\n})\r\nexport default class TriggerOption extends Vue {\r\n\r\n    @Prop()\r\n    value!: any;\r\n\r\n}\r\n</script>\r\n\r\n","\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\nimport { ButtonOption } from \"../../baklavajs-plugin-options-vue/src\";\r\n\r\n@Options({\r\n    components: { ButtonOption }\r\n})\r\nexport default class TriggerOption extends Vue {\r\n\r\n    @Prop()\r\n    value!: any;\r\n\r\n}\r\n","import { render } from \"./TriggerOption.vue?vue&type=template&id=87dafae4\"\nimport script from \"./TriggerOption.vue?vue&type=script&lang=ts\"\nexport * from \"./TriggerOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\r\n    <div>\r\n        <h1>Sidebar Option</h1>\r\n        <p>This is an advanced option</p>\r\n        <p>{{ value.testtext }}</p>\r\n        <input-option name=\"\" v-model=\"value.testtext\"></input-option>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\nimport { InputOption } from \"../../baklavajs-plugin-options-vue/src\";\r\n\r\n@Options({\r\n    components: { InputOption }\r\n})\r\nexport default class SidebarOption extends Vue {\r\n\r\n    @Prop()\r\n    value!: any;\r\n\r\n}\r\n</script>\r\n","\r\nimport { Options, Prop, Vue } from \"vue-property-decorator\";\r\nimport { InputOption } from \"../../baklavajs-plugin-options-vue/src\";\r\n\r\n@Options({\r\n    components: { InputOption }\r\n})\r\nexport default class SidebarOption extends Vue {\r\n\r\n    @Prop()\r\n    value!: any;\r\n\r\n}\r\n","import { render } from \"./SidebarOption.vue?vue&type=template&id=2d0ed19f\"\nimport script from \"./SidebarOption.vue?vue&type=script&lang=ts\"\nexport * from \"./SidebarOption.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { markRaw } from \"vue\";\r\nimport { Vue } from \"vue-property-decorator\";\r\n\r\nimport { Editor } from \"../../baklavajs-core/src\";\r\nimport { ViewPlugin } from \"../../baklavajs-plugin-renderer-vue/src\";\r\nimport { Engine } from \"../../baklavajs-plugin-engine/src\";\r\nimport { InterfaceTypePlugin } from \"../../baklavajs-plugin-interface-types/src\";\r\nimport { OptionPlugin } from \"../../baklavajs-plugin-options-vue/src\";\r\n\r\nimport CustomNodeRenderer from \"./CustomNodeRenderer\";\r\n\r\nimport TestNode from \"./TestNode\";\r\nimport OutputNode from \"./OutputNode\";\r\nimport BuilderTestNode from \"./BuilderTestNode\";\r\nimport MathNode from \"./MathNode\";\r\nimport AdvancedNode from \"./AdvancedNode\";\r\nimport CommentNode from \"./CommentNode\";\r\nimport OptionTestNode from \"./OptionTestNode\";\r\nimport SelectTestNode from \"./SelectTestNode\";\r\nimport SplitterNode from \"./SplitterNode\";\r\n\r\nimport AddOption from \"./AddOption.vue\";\r\nimport TriggerOption from \"./TriggerOption.vue\";\r\nimport SidebarOption from \"./SidebarOption.vue\";\r\n\r\nexport default class App extends Vue {\r\n    editor: Editor = new Editor();\r\n    viewPlugin: ViewPlugin = new ViewPlugin();\r\n    engine!: Engine;\r\n    nodeInterfaceTypes!: InterfaceTypePlugin;\r\n\r\n    focusState = \"blur\";\r\n    counter = 1;\r\n\r\n    created() {\r\n\r\n        this.viewPlugin.components.node = markRaw(CustomNodeRenderer);\r\n        this.viewPlugin.enableMinimap = true;\r\n        this.editor.use(this.viewPlugin);\r\n\r\n        this.engine = new Engine(true);\r\n        this.engine.events.calculated.addListener(this, (r) => {\r\n            for (const v of r.values()) {\r\n                // tslint:disable-next-line:no-console\r\n                console.log(v);\r\n            }\r\n        });\r\n        this.engine.hooks.gatherCalculationData.tap(this, () => \"def\");\r\n        this.editor.use(this.engine);\r\n\r\n        this.nodeInterfaceTypes = new InterfaceTypePlugin();\r\n        this.editor.use(this.nodeInterfaceTypes);\r\n\r\n        this.editor.use(new OptionPlugin());\r\n\r\n        this.viewPlugin.hooks.renderNode.tap(this, (node) => {\r\n            if (node.node.type === \"TestNode\") {\r\n                (node.$el as HTMLElement).style.backgroundColor = \"red\";\r\n            }\r\n            return node;\r\n        });\r\n\r\n        this.viewPlugin.registerOption(\"AddOption\", AddOption as any);\r\n        this.viewPlugin.registerOption(\"TriggerOption\", TriggerOption as any);\r\n        this.viewPlugin.registerOption(\"SidebarOption\", SidebarOption as any);\r\n\r\n        this.editor.registerNodeType(\"TestNode\", TestNode, \"Tests\");\r\n        this.editor.registerNodeType(\"OutputNode\", OutputNode, \"Outputs\");\r\n        this.editor.registerNodeType(\"BuilderTestNode\", BuilderTestNode, \"Tests\");\r\n        this.editor.registerNodeType(\"MathNode\", MathNode);\r\n        this.editor.registerNodeType(\"AdvancedNode\", AdvancedNode);\r\n        this.editor.registerNodeType(\"CommentNode\", CommentNode);\r\n        this.editor.registerNodeType(\"OptionTestNode\", OptionTestNode);\r\n        this.editor.registerNodeType(\"SelectTestNode\", SelectTestNode);\r\n        this.editor.registerNodeType(\"SplitterNode\", SplitterNode);\r\n        this.editor.addNode(new TestNode());\r\n        this.editor.addNode(new TestNode());\r\n        this.editor.addNode(new TestNode());\r\n        this.editor.addNode(new OutputNode());\r\n        this.editor.addNode(new BuilderTestNode());\r\n        this.editor.addNode(new AdvancedNode());\r\n        this.nodeInterfaceTypes\r\n            .addType(\"string\", \"#00FF00\")\r\n            .addType(\"number\", \"red\")\r\n            .addType(\"boolean\", \"purple\")\r\n            .addConversion(\"string\", \"number\", (v) => parseInt(v, 10))\r\n            .addConversion(\"number\", \"string\", (v) => (v !== null && v !== undefined && v.toString()) || \"0\")\r\n            .addConversion(\"boolean\", \"string\", (v) => (typeof v === \"boolean\" ? v.toString() : \"null\"));\r\n        this.viewPlugin.setNodeTypeAlias(\"TestNode\", \"TestNode (with alias)\");\r\n    }\r\n\r\n    async calculate() {\r\n        // console.log(await this.engine.calculate(\"def\"));\r\n    }\r\n\r\n    save() {\r\n        // tslint:disable-next-line:no-console\r\n        console.log(JSON.stringify(this.editor.save()));\r\n    }\r\n\r\n    load() {\r\n        const s = prompt();\r\n        if (s) {\r\n            this.editor.load(JSON.parse(s));\r\n        }\r\n    }\r\n\r\n    setSelectItems() {\r\n        for (const node of this.editor.nodes) {\r\n            if (node.type === \"SelectTestNode\") {\r\n                const sel = node.options.get(\"Advanced\");\r\n                sel!.items = [\r\n                    { text: \"X\", value: 1 },\r\n                    { text: node.id, value: 2 }\r\n                ];\r\n                sel!.events.updated.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    changeGridSize() {\r\n        this.viewPlugin.backgroundGrid.gridSize = Math.round(Math.random() * 100) + 100;\r\n    }\r\n}\r\n","import { render } from \"./App.vue?vue&type=template&id=dae69ba6\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=dae69ba6&lang=css\"\nscript.render = render\n\nexport default script","import { createApp } from \"vue\";\r\nimport App from \"./App.vue\";\r\n\r\nimport { BaklavaVuePlugin } from \"../../baklavajs-plugin-renderer-vue/src\";\r\nimport \"../../baklavajs-plugin-renderer-vue/src/styles/all.scss\";\r\nimport \"./test.css\";\r\n\r\nconst app = createApp(App, {});\r\napp.use(BaklavaVuePlugin);\r\napp.mount(\"#app\");\r\n"],"sourceRoot":""}